generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model UserAPI {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blockedIPs BlockedIP[] @relation("BlockedUserRelation")

  licenses      License[] @relation("UserAPILicenses")
  adminLicenses License[] @relation("AdminLicenses")
}

model License {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  type         LicenseType
  userId       String      @db.ObjectId
  user         UserAPI     @relation("UserAPILicenses", fields: [userId], references: [id])
  adminId      String      @db.ObjectId
  admin        UserAPI     @relation("AdminLicenses", fields: [adminId], references: [id])
  hwid         String[]
  requestLimit Int         @default(1000)
  requestCount Int         @default(0)
  validUntil   DateTime
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model BlockedIP {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress   String   @unique
  blockedUser UserAPI  @relation("BlockedUserRelation", fields: [blockedBy], references: [id])
  blockedBy   String   @db.ObjectId
  createdAt   DateTime @default(now())
  expiresAt   DateTime? // Opcional: para bloqueos temporales
  reason      String?   // Motivo del bloqueo
  isActive    Boolean  @default(true)
}

model FailedAttempt {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress   String
  attemptTime DateTime @default(now())
  userAgent   String?
  licenseKey  String?

  @@index([ipAddress])
  @@index([attemptTime])
}

enum LicenseType {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
  CUSTOM
}

enum LicenseStatus {
  ACTIVE
  EXPIRED
  BANNED
  REVOKED
}
