{"version":3,"file":"task.repositories.js","sources":["src/gateaway/task.repositories.ts"],"sourceRoot":"/","sourcesContent":["import { Recurrence, Reminder, Task } from \"@/application/entities/tasks/task.entity\";\r\nimport { main } from \"@/main\";\r\nimport { TaskQueryFilters, TaskRepositoryInterface } from \"@typings/modules/api\";\r\nimport { CreateTask } from \"@typings/services/tasks\";\r\n\r\n/**\r\n * Implementaci√≥n de TaskRepositoryInterface usando Prisma.\r\n */\r\nexport class TaskRepository implements TaskRepositoryInterface {\r\n  async create(data: CreateTask) {\r\n    const task = await main.prisma.task.create({ data });\r\n    return {\r\n      ...task,\r\n      recurrence: task.recurrence\r\n        ? (JSON.parse(task.recurrence as string) as Recurrence)\r\n        : undefined,\r\n      reminder: task.reminder ? (JSON.parse(task.reminder as string) as Reminder) : undefined,\r\n    } as Task;\r\n  }\r\n\r\n  async findById(id: string): Promise<Task | null> {\r\n    const task = await main.prisma.task.findUnique({ where: { id } });\r\n    if (!task) return null;\r\n    return {\r\n      ...task,\r\n      recurrence: task.recurrence\r\n        ? (JSON.parse(task.recurrence as string) as Recurrence)\r\n        : undefined,\r\n      reminder: task.reminder ? (JSON.parse(task.reminder as string) as Reminder) : undefined,\r\n    } as Task;\r\n  }\r\n\r\n  async findMany(filters: TaskQueryFilters = {}): Promise<Task[]> {\r\n    const { status, priority, createdBy, tag } = filters;\r\n    const tasks = await main.prisma.task.findMany({\r\n      where: {\r\n        ...(status && { status }),\r\n        ...(priority && { priority }),\r\n        ...(createdBy && { createdBy }),\r\n        ...(tag && { tags: { has: tag } }),\r\n      },\r\n    });\r\n    return tasks.map((task) => ({\r\n      ...task,\r\n      recurrence: task.recurrence\r\n        ? (JSON.parse(task.recurrence as string) as Recurrence)\r\n        : undefined,\r\n      reminder: task.reminder ? (JSON.parse(task.reminder as string) as Reminder) : undefined,\r\n    })) as Task[];\r\n  }\r\n\r\n  async update(id: string, data: Partial<CreateTask>) {\r\n    const task = await main.prisma.task.update({ where: { id }, data });\r\n    return {\r\n      ...task,\r\n      recurrence: task.recurrence\r\n        ? (JSON.parse(task.recurrence as string) as Recurrence)\r\n        : undefined,\r\n      reminder: task.reminder ? (JSON.parse(task.reminder as string) as Reminder) : undefined,\r\n    } as Task;\r\n  }\r\n\r\n  async delete(id: string): Promise<void> {\r\n    await main.prisma.task.delete({ where: { id } });\r\n  }\r\n\r\n  async deleteManyAutoDeleteBefore(date: Date): Promise<number> {\r\n    const result = await main.prisma.task.deleteMany({\r\n      where: { autoDelete: { lte: date.toISOString() } },\r\n    });\r\n    return result.count;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AACA,iCAA8B;AAI9B;;GAEG;AACH,MAAa,cAAc;IACzB,KAAK,CAAC,MAAM,CAAC,IAAgB;QAC3B,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACrD,OAAO;YACL,GAAG,IAAI;YACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBACzB,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAoB,CAAgB;gBACvD,CAAC,CAAC,SAAS;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkB,CAAc,CAAC,CAAC,CAAC,SAAS;SAChF,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,EAAU;QACvB,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI;YAAE,OAAO,IAAI,CAAC;QACvB,OAAO;YACL,GAAG,IAAI;YACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBACzB,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAoB,CAAgB;gBACvD,CAAC,CAAC,SAAS;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkB,CAAc,CAAC,CAAC,CAAC,SAAS;SAChF,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,UAA4B,EAAE;QAC3C,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC;QACrD,MAAM,KAAK,GAAG,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC5C,KAAK,EAAE;gBACL,GAAG,CAAC,MAAM,IAAI,EAAE,MAAM,EAAE,CAAC;gBACzB,GAAG,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,CAAC;gBAC7B,GAAG,CAAC,SAAS,IAAI,EAAE,SAAS,EAAE,CAAC;gBAC/B,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;aACnC;SACF,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1B,GAAG,IAAI;YACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBACzB,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAoB,CAAgB;gBACvD,CAAC,CAAC,SAAS;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkB,CAAc,CAAC,CAAC,CAAC,SAAS;SACxF,CAAC,CAAW,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,IAAyB;QAChD,MAAM,IAAI,GAAG,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;QACpE,OAAO;YACL,GAAG,IAAI;YACP,UAAU,EAAE,IAAI,CAAC,UAAU;gBACzB,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAoB,CAAgB;gBACvD,CAAC,CAAC,SAAS;YACb,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAkB,CAAc,CAAC,CAAC,CAAC,SAAS;SAChF,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EAAU;QACrB,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,KAAK,CAAC,0BAA0B,CAAC,IAAU;QACzC,MAAM,MAAM,GAAG,MAAM,WAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YAC/C,KAAK,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE;SACnD,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,KAAK,CAAC;IACtB,CAAC;CACF;AAhED,wCAgEC","debug_id":"ea3c0007-9859-53f9-a379-956043cfe742"}