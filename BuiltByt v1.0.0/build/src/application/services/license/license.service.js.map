{"version":3,"file":"license.service.js","sources":["src/application/services/license/license.service.ts"],"sourceRoot":"/","sourcesContent":["import { userMention } from \"discord.js\";\r\n\r\nimport { CreateLicenseSchema, UpdateLicenseSchema } from \"@/adapters/validators/license\";\r\nimport { CreateLicenseDto, UpdateLicenseDto } from \"@/application/dto/license.dto\";\r\nimport { LicenseEntity } from \"@/application/entities/license.entity\";\r\nimport { LicenseRepository } from \"@/gateaway/license.repositories\";\r\nimport { Notification } from \"@/interfaces/messaging/broker/notification\"; // Importa Notification\r\nimport { client } from \"@/main\";\r\nimport { EmbedCorrect } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\n/**\r\n * Service for managing software licenses.\r\n *\r\n * Provides methods to create, retrieve, update, delete, and validate licenses.\r\n *\r\n * @see [Prisma Documentation](https://www.prisma.io/docs/)\r\n */\r\nexport class LicenseService {\r\n  private notifier = new Notification(); // Instancia de Notification\r\n  private licenseRepository = new LicenseRepository(); // Instancia del repositorio de licencias\r\n\r\n  /**\r\n   * Creates a new license in the system.\r\n   *\r\n   * @param createDto - Data Transfer Object containing license creation data.\r\n   * @returns A promise that resolves to the created LicenseEntity.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const license = await licenseService.createLicense(createDto);\r\n   * ```\r\n   */\r\n  async createLicense(createDto: CreateLicenseDto): Promise<LicenseEntity> {\r\n    // Validación con Zod\r\n    CreateLicenseSchema.parse(createDto);\r\n\r\n    const { userId, adminId, validUntil, key, ...licenseData } = createDto;\r\n    const licenseDataToCreate: any = {\r\n      ...licenseData,\r\n      key,\r\n      type: createDto.type,\r\n      userId,\r\n      adminId,\r\n      hwid: createDto.hwid ? createDto.hwid : [],\r\n      requestLimit: createDto.requestLimit || 1000,\r\n      requestCount: 0,\r\n      validUntil: validUntil ? new Date(validUntil) : undefined,\r\n    };\r\n\r\n    // Asegúrate de no enviar 'id' en el payload\r\n    delete licenseDataToCreate.id;\r\n    const license = await this.licenseRepository.createLicence(licenseDataToCreate);\r\n\r\n    // Notificación detallada en inglés\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Created\",\r\n      `A new license has been created for user ID: \\`${userId}\\`. License key: \\`${key}\\`.`,\r\n      \"#4CAF50\",\r\n      [\r\n        { name: \"Type\", value: String(createDto.type), inline: true },\r\n        {\r\n          name: \"Valid Until\",\r\n          value: validUntil ? new Date(validUntil).toISOString() : \"Unlimited\",\r\n          inline: true,\r\n        },\r\n        {\r\n          name: \"HWID(s)\",\r\n          value: createDto.hwid && createDto.hwid.length > 0 ? createDto.hwid.join(\", \") : \"None\",\r\n          inline: false,\r\n        },\r\n      ],\r\n      { content: \"🟢 License creation event\", username: \"License Service\" },\r\n    );\r\n\r\n    const user = await client.users.cache.get(userId);\r\n    if (user) {\r\n      await user.send({\r\n        content: userMention(user.id),\r\n        embeds: [\r\n          new EmbedCorrect()\r\n            .setTitle(\"License Created Successfully\")\r\n            .setDescription(`Your license with key \\`${key}\\` has been created successfully.`)\r\n            .addFields(\r\n              {\r\n                name: \"Type\",\r\n                value: String(createDto.type),\r\n                inline: true,\r\n              },\r\n              {\r\n                name: \"Valid Until\",\r\n                value: validUntil ? new Date(validUntil).toISOString() : \"Unlimited\",\r\n                inline: true,\r\n              },\r\n              {\r\n                name: \"HWID(s)\",\r\n                value: createDto.hwid && createDto.hwid.length > 0 ? createDto.hwid.join(\", \") : \"None\",\r\n                inline: false,\r\n              },\r\n            ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    return new LicenseEntity(license);\r\n  }\r\n\r\n  /**\r\n   * Retrieves all licenses from the database.\r\n   *\r\n   * @returns A promise that resolves to an array of LicenseEntity objects.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const licenses = await licenseService.findAllLicense();\r\n   * ```\r\n   */\r\n  async findAllLicense(): Promise<LicenseEntity[]> {\r\n    const licenses = await this.licenseRepository.findLicenseMany();\r\n    return licenses.map((license) => new LicenseEntity(license));\r\n  }\r\n\r\n  /**\r\n   * Finds a license by its unique identifier.\r\n   *\r\n   * @param id - The unique ID of the license.\r\n   * @returns A promise that resolves to the LicenseEntity if found, or null otherwise.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const license = await licenseService.findByIdLicense(\"licenseId\");\r\n   * ```\r\n   */\r\n  async findByIdLicense(id: string): Promise<LicenseEntity | null> {\r\n    const license = await this.licenseRepository.findLicenseById(id);\r\n    return license ? new LicenseEntity(license) : null;\r\n  }\r\n\r\n  /**\r\n   * Finds a license by its license key.\r\n   *\r\n   * @param key - The license key.\r\n   * @returns A promise that resolves to the LicenseEntity if found, or null otherwise.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const license = await licenseService.findByKeyLicense(\"LICENSE-KEY-123\");\r\n   * ```\r\n   */\r\n  async findByKeyLicense(key: string): Promise<LicenseEntity | null> {\r\n    const license = await this.licenseRepository.findLicenseByKey(key);\r\n    return license ? new LicenseEntity(license) : null;\r\n  }\r\n\r\n  /**\r\n   * Retrieves all licenses associated with a specific user.\r\n   *\r\n   * @param userId - The user's unique identifier.\r\n   * @returns A promise that resolves to an array of LicenseEntity objects.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const userLicenses = await licenseService.findByUserIdLicense(\"userId123\");\r\n   * ```\r\n   */\r\n  async findByUserIdLicense(userId: string): Promise<LicenseEntity[]> {\r\n    const licenses = await this.licenseRepository.findLicenseByUserId(userId);\r\n    return licenses.map((license) => new LicenseEntity(license));\r\n  }\r\n\r\n  /**\r\n   * Updates a license by its unique identifier.\r\n   *\r\n   * @param id - The unique ID of the license.\r\n   * @param updateDto - Data Transfer Object containing updated license data.\r\n   * @returns A promise that resolves to the updated LicenseEntity.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const updated = await licenseService.updateLicense(\"licenseId\", updateDto);\r\n   * ```\r\n   */\r\n  async updateLicense(id: string, updateDto: UpdateLicenseDto): Promise<LicenseEntity> {\r\n    // Validación con Zod\r\n    UpdateLicenseSchema.parse(updateDto);\r\n\r\n    // Permite actualizar por id (ObjectId)\r\n    const license = await this.licenseRepository.updateLicenseById(id, updateDto);\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Updated\",\r\n      `License with ID: \\`${id}\\` has been updated.`,\r\n      \"#2196F3\",\r\n      [\r\n        {\r\n          name: \"Updated Fields\",\r\n          value: Object.keys(updateDto).join(\", \") || \"None\",\r\n          inline: false,\r\n        },\r\n      ],\r\n      { content: \"🔵 License update event\", username: \"License Service\" },\r\n    );\r\n\r\n    return new LicenseEntity(license);\r\n  }\r\n\r\n  /**\r\n   * Updates a license by its license key.\r\n   *\r\n   * @param key - The license key.\r\n   * @param updateDto - Data Transfer Object containing updated license data.\r\n   * @returns A promise that resolves to the updated LicenseEntity, or null if not found.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const updated = await licenseService.updateByKeyLicense(\"LICENSE-KEY-123\", updateDto);\r\n   * ```\r\n   */\r\n  async updateByKeyLicense(key: string, updateDto: UpdateLicenseDto) {\r\n    // Validación con Zod\r\n    UpdateLicenseSchema.parse(updateDto);\r\n\r\n    // Permite actualizar por key (clave de licencia)\r\n    const data = await this.licenseRepository.findLicenseByKey(key);\r\n    if (!data) return null;\r\n    const license = await this.licenseRepository.updateLicenseById(data.id, updateDto);\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Updated by Key\",\r\n      `License with key: \\`${key}\\` has been updated.`,\r\n      \"#2196F3\",\r\n      [\r\n        {\r\n          name: \"Updated Fields\",\r\n          value: Object.keys(updateDto).join(\", \") || \"None\",\r\n          inline: false,\r\n        },\r\n      ],\r\n      { content: \"🔵 License update by key event\", username: \"License Service\" },\r\n    );\r\n\r\n    return new LicenseEntity(license);\r\n  }\r\n\r\n  /**\r\n   * Deletes a license by its unique identifier.\r\n   *\r\n   * @param id - The unique ID or key of the license.\r\n   * @returns A promise that resolves to the deleted license object or false if not found.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const result = await licenseService.deleteLicense(\"licenseId\");\r\n   * ```\r\n   */\r\n  async deleteLicense(id: string) {\r\n    const data = await this.licenseRepository.findLicenseById(id);\r\n    if (!data) return false;\r\n\r\n    const deleted = await this.licenseRepository.deleteLicenseById(id);\r\n    if (!deleted) return false;\r\n\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Deleted\",\r\n      `License with key: \\`${id}\\` has been deleted.`,\r\n      \"#F44336\",\r\n      [\r\n        { name: \"Deleted License ID\", value: deleted.id, inline: true },\r\n        { name: \"Key\", value: deleted.key, inline: true },\r\n      ],\r\n      { content: \"🔴 License deletion event\", username: \"License Service\" },\r\n    );\r\n\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * Deletes a license by its license key.\r\n   *\r\n   * @param key - The license key.\r\n   * @returns A promise that resolves to the deleted license object or false if not found.\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const result = await licenseService.deleteByKeyLicense(\"LICENSE-KEY-123\");\r\n   * ```\r\n   */\r\n  async deleteByKeyLicense(key: string) {\r\n    const data = await this.licenseRepository.findLicenseByKey(key);\r\n\r\n    if (!data) return false;\r\n\r\n    const deleted = await this.licenseRepository.deleteLicenseById(data.id);\r\n    if (!deleted) return false;\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Deleted by Key\",\r\n      `License with key: \\`${key}\\` has been deleted.`,\r\n      \"#F44336\",\r\n      [\r\n        { name: \"Deleted License ID\", value: deleted.id, inline: true },\r\n        { name: \"Key\", value: deleted.key, inline: true },\r\n      ],\r\n      { content: \"🔴 License deletion by key event\", username: \"License Service\" },\r\n    );\r\n\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * Validates a license by its key and hardware ID (HWID).\r\n   *\r\n   * Checks if the license exists, is not expired, and the HWID is registered.\r\n   * Increments the request count if valid.\r\n   *\r\n   * @param key - The license key.\r\n   * @param hwid - The hardware ID to validate.\r\n   * @returns A promise that resolves to true if the license is valid, false otherwise.\r\n   *\r\n   * @see [Software Licensing Concepts](https://en.wikipedia.org/wiki/Software_license)\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * const isValid = await licenseService.validateLicense(\"LICENSE-KEY-123\", \"HWID-XYZ\");\r\n   * ```\r\n   */\r\n  async validateLicense(key: string, hwid: string): Promise<boolean> {\r\n    const license = await this.licenseRepository.findLicenseByKey(key);\r\n    let valid = false;\r\n    let reason = \"\";\r\n\r\n    if (!license) {\r\n      reason = \"License not found\";\r\n    } else if (license.validUntil && license.validUntil < new Date()) {\r\n      reason = \"License expired\";\r\n    } else if (!license.hwid || !license.hwid.includes(hwid)) {\r\n      reason = \"HWID not registered\";\r\n    } else if (license.requestCount >= license.requestLimit) {\r\n      reason = \"Request limit reached\";\r\n    } else {\r\n      valid = true;\r\n    }\r\n\r\n    if (valid && license) {\r\n      await this.licenseRepository.updateRequestLicenseById(license.id);\r\n    }\r\n\r\n    await this.notifier.sendWebhookNotification(\r\n      \"License Validation Attempt\",\r\n      `A license validation was attempted for key: \\`${key}\\` and HWID: \\`${hwid}\\`.`,\r\n      valid ? \"#4CAF50\" : \"#F44336\",\r\n      [\r\n        { name: \"Validation Result\", value: valid ? \"✅ Valid\" : \"❌ Invalid\", inline: true },\r\n        { name: \"Reason\", value: valid ? \"All checks passed\" : reason, inline: false },\r\n        {\r\n          name: \"Request Count\",\r\n          value: license ? `${license.requestCount}/${license.requestLimit}` : \"N/A\",\r\n          inline: true,\r\n        },\r\n      ],\r\n      { content: \"🔔 License validation event\", username: \"License Service\" },\r\n    );\r\n\r\n    return valid;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"3dca0a2c-f98e-5fcf-9fc3-033fd30f356f"}