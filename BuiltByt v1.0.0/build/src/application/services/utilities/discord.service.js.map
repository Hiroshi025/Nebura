{"version":3,"file":"discord.service.js","sources":["src/application/services/utilities/discord.service.ts"],"sourceRoot":"/","sourcesContent":["import axios from \"axios\";\r\nimport { load } from \"cheerio\";\r\n\r\n// src/services/discord.service.ts\r\nimport { DiscordStatusResponseDTO } from \"@/application/dto/discord.dto\";\r\nimport { DiscordStatusEntity, DiscordUpdateEntity } from \"@/application/entities/discord.entity\";\r\n\r\n/**\r\n * Service for interacting with Discord's status and blog APIs.\r\n *\r\n * Provides methods to fetch the current status, latest updates, and active incidents from Discord.\r\n *\r\n * @see {@link https://discordstatus.com/} Discord Status Page\r\n * @see {@link https://discord.com/blog} Discord Blog\r\n */\r\nexport class DiscordService {\r\n  /**\r\n   * The base URL for the Discord status API.\r\n   *\r\n   * @see {@link https://discordstatus.com/api}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  private readonly STATUS_API_URL = process.env.STATUS_API_URL as string;\r\n\r\n  /**\r\n   * The URL for the Discord blog.\r\n   *\r\n   * @see {@link https://discord.com/blog}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  private readonly BLOG_URL = process.env.BLOG_URL as string;\r\n\r\n  /**\r\n   * The base URL for the Discord status page.\r\n   *\r\n   * @see {@link https://discordstatus.com/}\r\n   * @private\r\n   * @readonly\r\n   */\r\n  private readonly STATUS_PAGE_URL = process.env.STATUS_PAGE_URL as string;\r\n\r\n  /**\r\n   * Fetches the current status of Discord from the status API.\r\n   *\r\n   * @returns {Promise<DiscordStatusEntity>} The current status entity.\r\n   * @throws Will return a default critical status entity if the request fails.\r\n   *\r\n   * @see {@link https://discordstatus.com/api/v2/status.json}\r\n   */\r\n  public async getCurrentStatus(): Promise<DiscordStatusEntity> {\r\n    try {\r\n      const response = await axios.get<DiscordStatusResponseDTO>(this.STATUS_API_URL);\r\n\r\n      return new DiscordStatusEntity(\r\n        response.data.status.indicator as any,\r\n        response.data.status.description,\r\n        new Date(response.data.page.updated_at),\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching Discord status:\", error);\r\n      return new DiscordStatusEntity(\"critical\", \"Failed to fetch status\", new Date());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches the latest updates from the Discord blog.\r\n   *\r\n   * Parses the blog HTML to extract articles, including announcements, incidents, and general updates.\r\n   *\r\n   * @returns {Promise<DiscordUpdateEntity[]>} An array of update entities sorted by date (descending).\r\n   * @throws Will return an empty array if the request or parsing fails.\r\n   *\r\n   * @see {@link https://discord.com/blog}\r\n   */\r\n  public async getLatestUpdates(): Promise<DiscordUpdateEntity[]> {\r\n    try {\r\n      const response = await axios.get(this.BLOG_URL);\r\n      const $ = load(response.data);\r\n      const updates: DiscordUpdateEntity[] = [];\r\n\r\n      $(\"article.post\").each((_i, element) => {\r\n        const title = $(element).find(\"h2\").text().trim();\r\n        const description = $(element).find(\"p\").first().text().trim();\r\n        const url = $(element).find(\"a\").attr(\"href\") || \"\";\r\n        const dateStr = $(element).find(\"time\").attr(\"datetime\") || \"\";\r\n        const tag = $(element).find(\".post-tag\").text().trim().toLowerCase();\r\n\r\n        const type = tag.includes(\"announce\")\r\n          ? \"announcement\"\r\n          : tag.includes(\"incident\")\r\n            ? \"incident\"\r\n            : \"update\";\r\n\r\n        if (title && description) {\r\n          updates.push(\r\n            new DiscordUpdateEntity(\r\n              title,\r\n              description,\r\n              url.startsWith(\"http\") ? url : `https://discord.com${url}`,\r\n              new Date(dateStr),\r\n              type,\r\n            ),\r\n          );\r\n        }\r\n      });\r\n\r\n      return updates.sort((a, b) => b.date.getTime() - a.date.getTime());\r\n    } catch (error) {\r\n      console.error(\"Error fetching Discord updates:\", error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetches currently active incidents from the Discord status page.\r\n   *\r\n   * Only incidents that are not resolved are returned.\r\n   *\r\n   * @returns {Promise<DiscordUpdateEntity[]>} An array of active incident entities.\r\n   * @throws Will return an empty array if the request fails.\r\n   *\r\n   * @see {@link https://discordstatus.com/api/v2/incidents.json}\r\n   */\r\n  public async getActiveIncidents(): Promise<DiscordUpdateEntity[]> {\r\n    try {\r\n      const response = await axios.get(`${this.STATUS_PAGE_URL}/api/v2/incidents.json`);\r\n      const incidents = response.data.incidents.filter((i: any) => i.status !== \"resolved\");\r\n\r\n      return incidents.map(\r\n        (incident: any) =>\r\n          new DiscordUpdateEntity(\r\n            incident.name,\r\n            incident.incident_updates[0]?.description || \"No description\",\r\n            `${this.STATUS_PAGE_URL}/incidents/${incident.id}`,\r\n            new Date(incident.created_at),\r\n            \"incident\",\r\n          ),\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching Discord incidents:\", error);\r\n      return [];\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA,kDAA0B;AAC1B,qCAA+B;AAI/B,0EAAiG;AAEjG;;;;;;;GAOG;AACH,MAAa,cAAc;IACzB;;;;;;OAMG;IACc,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,cAAwB,CAAC;IAEvE;;;;;;OAMG;IACc,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAkB,CAAC;IAE3D;;;;;;OAMG;IACc,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAyB,CAAC;IAEzE;;;;;;;OAOG;IACI,KAAK,CAAC,gBAAgB;QAC3B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAA2B,IAAI,CAAC,cAAc,CAAC,CAAC;YAEhF,OAAO,IAAI,oCAAmB,CAC5B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAgB,EACrC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CACxC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;YACvD,OAAO,IAAI,oCAAmB,CAAC,UAAU,EAAE,wBAAwB,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;QACnF,CAAC;IACH,CAAC;IAED;;;;;;;;;OASG;IACI,KAAK,CAAC,gBAAgB;QAC3B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,CAAC,GAAG,IAAA,cAAI,EAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC9B,MAAM,OAAO,GAA0B,EAAE,CAAC;YAE1C,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,EAAE;gBACrC,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;gBAClD,MAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC/D,MAAM,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACpD,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBAC/D,MAAM,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;gBAErE,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC;oBACnC,CAAC,CAAC,cAAc;oBAChB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC;wBACxB,CAAC,CAAC,UAAU;wBACZ,CAAC,CAAC,QAAQ,CAAC;gBAEf,IAAI,KAAK,IAAI,WAAW,EAAE,CAAC;oBACzB,OAAO,CAAC,IAAI,CACV,IAAI,oCAAmB,CACrB,KAAK,EACL,WAAW,EACX,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,sBAAsB,GAAG,EAAE,EAC1D,IAAI,IAAI,CAAC,OAAO,CAAC,EACjB,IAAI,CACL,CACF,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACrE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED;;;;;;;;;OASG;IACI,KAAK,CAAC,kBAAkB;QAC7B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,wBAAwB,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC;YAEtF,OAAO,SAAS,CAAC,GAAG,CAClB,CAAC,QAAa,EAAE,EAAE,CAChB,IAAI,oCAAmB,CACrB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,WAAW,IAAI,gBAAgB,EAC7D,GAAG,IAAI,CAAC,eAAe,cAAc,QAAQ,CAAC,EAAE,EAAE,EAClD,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAC7B,UAAU,CACX,CACJ,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;YAC1D,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;CACF;AAlID,wCAkIC","debug_id":"6d5c10a1-c5ab-53cb-9a13-eb4ed93b2442"}