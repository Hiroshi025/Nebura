{"version":3,"file":"tasks.routes.js","sources":["src/interfaces/http/routes/api/service/tasks.routes.ts"],"sourceRoot":"/","sourcesContent":["// Importa los tipos necesarios de Express\r\n// import { Request, Response } from 'express';\r\n\r\nimport { authenticateToken } from \"@/interfaces/http/middlewares/jwt/token.middleware\";\r\nimport { RateLimitManager } from \"@/interfaces/messaging/broker/rateLimit\";\r\nimport { TRoutesInput } from \"@/typings/utils\";\r\n\r\nimport { ReminderController } from \"../../../controllers/asistent/reminder.controllers\";\r\nimport { TaskController } from \"../../../controllers/asistent/tasks.controllers\";\r\n\r\n// Constantes para paths base y versionado\r\nconst BASE_PATH = \"/service\";\r\nconst API_VERSION = \"/api/v1\";\r\n\r\n/**\r\n * Formatea las rutas de autenticación con el prefijo correcto\r\n * @param path Ruta específica del endpoint\r\n * @returns Ruta completa formateada\r\n */\r\nconst formatRoute = (path: string): string => `${API_VERSION}${BASE_PATH}${path}`;\r\nexport default ({ app }: TRoutesInput) => {\r\n  const taskController = new TaskController();\r\n  const reminderController = new ReminderController();\r\n\r\n  /**\r\n   * Crea una nueva tarea.\r\n   * Método: POST\r\n   * Ruta: /api/v1/service/tasks\r\n   * Middleware: authenticateToken\r\n   * Controlador: taskController.createTask\r\n   * Descripción: Permite crear una nueva tarea.\r\n   */\r\n  app.post(\r\n    formatRoute(\"/tasks\"),\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    taskController.createTask.bind(taskController),\r\n  );\r\n\r\n  /**\r\n   * Obtiene una tarea específica por su ID.\r\n   * Método: GET\r\n   * Ruta: /api/v1/service/tasks/:id\r\n   * Middleware: authenticateToken\r\n   * Controlador: taskController.getTask\r\n   * Descripción: Devuelve los detalles de una tarea específica.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/tasks/:id\"),\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    taskController.getTask.bind(taskController),\r\n  );\r\n\r\n  /**\r\n   * Obtiene todas las tareas.\r\n   * Método: GET\r\n   * Ruta: /api/v1/service/tasks\r\n   * Middleware: authenticateToken\r\n   * Controlador: taskController.getAllTasks\r\n   * Descripción: Devuelve una lista de todas las tareas.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/tasks\"),\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    taskController.getAllTasks.bind(taskController),\r\n  );\r\n\r\n  /**\r\n   * Actualiza una tarea específica por su ID.\r\n   * Método: PATCH\r\n   * Ruta: /api/v1/service/tasks/:id\r\n   * Middleware: authenticateToken\r\n   * Controlador: taskController.updateTask\r\n   * Descripción: Permite actualizar los detalles de una tarea específica.\r\n   */\r\n  app.patch(\r\n    formatRoute(\"/tasks/:id\"),\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    taskController.updateTask.bind(taskController),\r\n  );\r\n\r\n  /**\r\n   * Elimina una tarea específica por su ID.\r\n   * Método: DELETE\r\n   * Ruta: /api/v1/service/tasks/:id\r\n   * Middleware: authenticateToken\r\n   * Controlador: taskController.deleteTask\r\n   * Descripción: Permite eliminar una tarea específica.\r\n   */\r\n  app.delete(\r\n    formatRoute(\"/tasks/:id\"),\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    taskController.deleteTask.bind(taskController),\r\n  );\r\n\r\n  /**\r\n   * Obtiene recordatorios próximos.\r\n   * Método: GET\r\n   * Ruta: /reminders\r\n   * Middleware: authenticateToken\r\n   * Controlador: reminderController.getUpcomingReminders\r\n   * Descripción: Devuelve una lista de recordatorios próximos.\r\n   */\r\n  app.get(\r\n    \"/reminders\",\r\n    RateLimitManager.getInstance().createCustomLimiter({\r\n      max: 10,\r\n      windowMs: 60 * 1000, // 1 minuto\r\n      message: \"Too many requests, please try again later.\",\r\n    }),\r\n    authenticateToken,\r\n    reminderController.getUpReminders.bind(reminderController),\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debug_id":"c5b80ebc-b121-534d-b39b-81d3847c01f0"}