{"version":3,"file":"status.routes.js","sources":["src/interfaces/http/routes/api/public/status.routes.ts"],"sourceRoot":"/","sourcesContent":["// Importa los tipos necesarios de Express\r\n// import { Request, Response } from 'express';\r\n\r\nimport { Request, Response } from \"express\";\r\n\r\nimport { IPBlocker } from \"@/interfaces/messaging/broker/administrator\";\r\nimport { RateLimitManager } from \"@/interfaces/messaging/broker/rateLimit\";\r\nimport { TRoutesInput } from \"@/typings/utils\";\r\n\r\nimport { DiscordController } from \"../../../controllers/public/discord.controller\";\r\nimport { StatusController } from \"../../../controllers/public/status.controller\";\r\n\r\n// Constantes para paths base y versionado\r\nconst BASE_PATH = \"/public\";\r\nconst API_VERSION = \"/api/v1\";\r\n\r\n/**\r\n * Formatea las rutas de autenticación con el prefijo correcto\r\n * @param path Ruta específica del endpoint\r\n * @returns Ruta completa formateada\r\n */\r\nconst formatRoute = (path: string): string => `${API_VERSION}${BASE_PATH}${path}`;\r\nexport default ({ app }: TRoutesInput) => {\r\n  const discordController = new DiscordController();\r\n  const status = new StatusController();\r\n\r\n  /**\r\n   * Obtiene el estado general del sistema.\r\n   * Método: GET\r\n   * Ruta: /api/v1/public/status\r\n   * Middleware: RateLimitManager, IPBlocker\r\n   * Controlador: status.getStatus\r\n   * Descripción: Devuelve el estado general del sistema.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/status\"),\r\n    RateLimitManager.getInstance().getDefaultLimiter(),\r\n    IPBlocker.getInstance().getMiddleware(),\r\n    status.getStatus,\r\n  );\r\n\r\n  /**\r\n   * Obtiene el estado del servicio de Discord.\r\n   * Método: GET\r\n   * Ruta: /api/v1/public/discord/status\r\n   * Middleware: RateLimitManager, IPBlocker\r\n   * Controlador: discordController.getStatus\r\n   * Descripción: Devuelve el estado actual del servicio de Discord.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/discord/status\"),\r\n    RateLimitManager.getInstance().getDefaultLimiter(),\r\n    IPBlocker.getInstance().getMiddleware(),\r\n    discordController.getStatus,\r\n  );\r\n\r\n  /**\r\n   * Obtiene las actualizaciones recientes de Discord.\r\n   * Método: GET\r\n   * Ruta: /api/v1/public/discord/updates\r\n   * Middleware: RateLimitManager, IPBlocker\r\n   * Controlador: discordController.getUpdates\r\n   * Descripción: Devuelve las actualizaciones recientes del servicio de Discord.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/discord/updates\"),\r\n    RateLimitManager.getInstance().getDefaultLimiter(),\r\n    IPBlocker.getInstance().getMiddleware(),\r\n    discordController.getUpdates,\r\n  );\r\n\r\n  /**\r\n   * Obtiene los incidentes recientes de Discord.\r\n   * Método: GET\r\n   * Ruta: /api/v1/public/discord/incidents\r\n   * Middleware: RateLimitManager, IPBlocker\r\n   * Controlador: discordController.getIncidents\r\n   * Descripción: Devuelve los incidentes recientes del servicio de Discord.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/discord/incidents\"),\r\n    RateLimitManager.getInstance().getDefaultLimiter(),\r\n    IPBlocker.getInstance().getMiddleware(),\r\n    discordController.getIncidents,\r\n  );\r\n\r\n  /**\r\n   * Obtiene datos recientes de Discord (incidentes, estado y actualizaciones).\r\n   * Método: GET\r\n   * Ruta: /api/v1/public/discord/recent\r\n   * Middleware: RateLimitManager, IPBlocker\r\n   * Controlador: discordController (métodos combinados)\r\n   * Descripción: Devuelve datos recientes del servicio de Discord, incluyendo incidentes, estado y actualizaciones.\r\n   */\r\n  app.get(\r\n    formatRoute(\"/discord/recent\"),\r\n    RateLimitManager.getInstance().getDefaultLimiter(),\r\n    IPBlocker.getInstance().getMiddleware(),\r\n    async (_req: Request, res: Response) => {\r\n      try {\r\n        const recentIncidents = await discordController.getRecentIncidents();\r\n        const recentUpdates = await discordController.getRecentUpdates();\r\n        const recentStatus = await discordController.getRecentStatus();\r\n\r\n        res.status(200).json({\r\n          data: {\r\n            incidents: recentIncidents,\r\n            status: recentStatus,\r\n            updates: recentUpdates,\r\n          },\r\n          errors: null,\r\n        });\r\n      } catch (error) {\r\n        res.status(500).json({\r\n          data: null,\r\n          errors: \"Failed to fetch recent Discord data\",\r\n        });\r\n      }\r\n    },\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;AAAA,0CAA0C;AAC1C,+CAA+C;;AAI/C,+EAAwE;AACxE,uEAA2E;AAG3E,uFAAmF;AACnF,qFAAiF;AAEjF,0CAA0C;AAC1C,MAAM,SAAS,GAAG,SAAS,CAAC;AAC5B,MAAM,WAAW,GAAG,SAAS,CAAC;AAE9B;;;;GAIG;AACH,MAAM,WAAW,GAAG,CAAC,IAAY,EAAU,EAAE,CAAC,GAAG,WAAW,GAAG,SAAS,GAAG,IAAI,EAAE,CAAC;AAClF,kBAAe,CAAC,EAAE,GAAG,EAAgB,EAAE,EAAE;IACvC,MAAM,iBAAiB,GAAG,IAAI,sCAAiB,EAAE,CAAC;IAClD,MAAM,MAAM,GAAG,IAAI,oCAAgB,EAAE,CAAC;IAEtC;;;;;;;OAOG;IACH,GAAG,CAAC,GAAG,CACL,WAAW,CAAC,SAAS,CAAC,EACtB,4BAAgB,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,EAClD,yBAAS,CAAC,WAAW,EAAE,CAAC,aAAa,EAAE,EACvC,MAAM,CAAC,SAAS,CACjB,CAAC;IAEF;;;;;;;OAOG;IACH,GAAG,CAAC,GAAG,CACL,WAAW,CAAC,iBAAiB,CAAC,EAC9B,4BAAgB,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,EAClD,yBAAS,CAAC,WAAW,EAAE,CAAC,aAAa,EAAE,EACvC,iBAAiB,CAAC,SAAS,CAC5B,CAAC;IAEF;;;;;;;OAOG;IACH,GAAG,CAAC,GAAG,CACL,WAAW,CAAC,kBAAkB,CAAC,EAC/B,4BAAgB,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,EAClD,yBAAS,CAAC,WAAW,EAAE,CAAC,aAAa,EAAE,EACvC,iBAAiB,CAAC,UAAU,CAC7B,CAAC;IAEF;;;;;;;OAOG;IACH,GAAG,CAAC,GAAG,CACL,WAAW,CAAC,oBAAoB,CAAC,EACjC,4BAAgB,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,EAClD,yBAAS,CAAC,WAAW,EAAE,CAAC,aAAa,EAAE,EACvC,iBAAiB,CAAC,YAAY,CAC/B,CAAC;IAEF;;;;;;;OAOG;IACH,GAAG,CAAC,GAAG,CACL,WAAW,CAAC,iBAAiB,CAAC,EAC9B,4BAAgB,CAAC,WAAW,EAAE,CAAC,iBAAiB,EAAE,EAClD,yBAAS,CAAC,WAAW,EAAE,CAAC,aAAa,EAAE,EACvC,KAAK,EAAE,IAAa,EAAE,GAAa,EAAE,EAAE;QACrC,IAAI,CAAC;YACH,MAAM,eAAe,GAAG,MAAM,iBAAiB,CAAC,kBAAkB,EAAE,CAAC;YACrE,MAAM,aAAa,GAAG,MAAM,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;YACjE,MAAM,YAAY,GAAG,MAAM,iBAAiB,CAAC,eAAe,EAAE,CAAC;YAE/D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE;oBACJ,SAAS,EAAE,eAAe;oBAC1B,MAAM,EAAE,YAAY;oBACpB,OAAO,EAAE,aAAa;iBACvB;gBACD,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,qCAAqC;aAC9C,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CACF,CAAC;AACJ,CAAC,CAAC","debug_id":"69609e31-6c45-5616-baec-84fac9b6b050"}