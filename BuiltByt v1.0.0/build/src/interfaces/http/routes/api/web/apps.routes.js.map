{"version":3,"file":"apps.routes.js","sources":["src/interfaces/http/routes/api/web/apps.routes.ts"],"sourceRoot":"/","sourcesContent":["import { Request, Response } from \"express\";\r\n\r\n// Importa los tipos necesarios de Express\r\nimport { client, main } from \"@/main\";\r\nimport { TRoutesInput } from \"@/typings/utils\";\r\n\r\n/**\r\n * Tipos para el body y la actividad de Discord\r\n */\r\ntype DiscordActivity = {\r\n  status: string;\r\n  name: string;\r\n  url: string;\r\n  [key: string]: any;\r\n};\r\n\r\ntype DiscordBody = {\r\n  username?: string;\r\n  avatar?: string;\r\n  activity?: DiscordActivity;\r\n};\r\n\r\nconst formatRoute = (path: string): string => `/dashboard/utils-clients/${path}`;\r\nexport default ({ app }: TRoutesInput) => {\r\n  console.debug(\"[apps.routes] Initializing routes for utils-clients\");\r\n\r\n  // Editar Discord config (solo username, avatar, activity)\r\n  app.put(formatRoute(\"discord/:id\"), async (req: Request<{ id: string }, any, DiscordBody>, res: Response) => {\r\n    console.debug(\"[apps.routes] PUT /discord/:id called\", { params: req.params, body: req.body });\r\n    try {\r\n      const { id } = req.params;\r\n      const { username, avatar, activity } = req.body;\r\n\r\n      if (!id || typeof id !== \"string\") {\r\n        console.debug(\"[apps.routes] Invalid or missing id param\", { id });\r\n        return res.status(400).json({ success: false, message: \"ID de cliente inv치lido o faltante\" });\r\n      }\r\n\r\n      if (!activity || typeof activity !== \"object\") {\r\n        console.debug(\"[apps.routes] Activity missing or not an object\", { activity });\r\n        return res.status(400).json({\r\n          success: false,\r\n          message: \"Actividad debe ser un objeto v치lido\",\r\n        });\r\n      }\r\n\r\n      const { status, name, url } = activity;\r\n      if (!status || !name || !url) {\r\n        console.debug(\"[apps.routes] Activity missing required fields\", { activity });\r\n        return res.status(400).json({\r\n          success: false,\r\n          message: \"Actividad debe contener status, name y url\",\r\n        });\r\n      }\r\n\r\n      console.debug(\"[apps.routes] Searching discord config by clientId\", id);\r\n      const discord = await main.prisma.discord.findFirst({ where: { clientId: id } });\r\n      if (!discord) {\r\n        console.debug(\"[apps.routes] Discord config not found\", { clientId: id });\r\n        return res.status(404).json({ success: false, message: \"Discord config no encontrada\" });\r\n      }\r\n\r\n      if (!discord.activity || typeof discord.activity !== \"object\") {\r\n        console.debug(\"[apps.routes] Discord config missing activity\", { discord });\r\n        return res.status(404).json({ success: false, message: \"Discord config sin actividad\" });\r\n      }\r\n\r\n      console.debug(\"[apps.routes] Updating discord config in DB\", {\r\n        id: discord.id,\r\n        username,\r\n        avatar,\r\n        activity,\r\n      });\r\n\r\n      const updated = await main.prisma.discord.update({\r\n        where: { id: discord.id },\r\n        data: {\r\n          username: username ?? discord.username,\r\n          avatar: avatar ?? discord.avatar,\r\n          activity: activity ?? discord.activity,\r\n        },\r\n      });\r\n\r\n      if (updated && client.user) {\r\n        try {\r\n          console.debug(\"[apps.routes] Updating Discord bot user\", { username, avatar, activity });\r\n          await client.user.setUsername(username ?? discord.username);\r\n          await client.user.setAvatar(avatar ?? discord.avatar);\r\n          await client.user.setActivity({\r\n            state: activity.status,\r\n            name: activity.name,\r\n            url: activity.url,\r\n          });\r\n        } catch (botError: any) {\r\n          console.error(\"[apps.routes] Error updating Discord bot user\", { botError });\r\n          // No se retorna error, solo se loguea\r\n        }\r\n      }\r\n\r\n      console.debug(\"[apps.routes] Discord config updated successfully\", { updated });\r\n      return res.status(200).json({ success: true, message: \"Discord config actualizada\", data: updated });\r\n    } catch (error: any) {\r\n      console.error(\"[apps.routes] Error updating Discord config\", { error: error?.stack || error });\r\n      return res.status(500).json({\r\n        success: false,\r\n        message: \"Error al actualizar Discord config\",\r\n        error: error?.message || \"Error desconocido\",\r\n      });\r\n    }\r\n  });\r\n\r\n  // Eliminar Discord config (solo username, avatar, activity)\r\n  app.delete(formatRoute(\"discord/:id\"), async (req: Request<{ id: string }>, res: Response) => {\r\n    console.debug(\"[apps.routes] DELETE /discord/:id called\", { params: req.params });\r\n    try {\r\n      const { id } = req.params;\r\n      if (!id || typeof id !== \"string\") {\r\n        console.debug(\"[apps.routes] Invalid or missing id param\", { id });\r\n        return res.status(400).json({ success: false, message: \"ID de discord inv치lido o faltante\" });\r\n      }\r\n      console.debug(\"[apps.routes] Searching discord config by id\", id);\r\n      const discord = await main.prisma.discord.findUnique({ where: { id } });\r\n      if (!discord) {\r\n        console.debug(\"[apps.routes] Discord config not found for delete\", { id });\r\n        return res.status(404).json({ success: false, message: \"Discord config no encontrada\" });\r\n      }\r\n      console.debug(\"[apps.routes] Deleting discord config\", { id });\r\n      await main.prisma.discord.delete({ where: { id } });\r\n      console.debug(\"[apps.routes] Discord config deleted\", { id });\r\n      return res.status(200).json({ success: true, message: \"Discord config eliminada\" });\r\n    } catch (error: any) {\r\n      console.error(\"[apps.routes] Error deleting Discord config\", { error: error?.stack || error });\r\n      return res.status(500).json({\r\n        success: false,\r\n        message: \"Error al eliminar Discord config\",\r\n        error: error?.message || \"Error desconocido\",\r\n      });\r\n    }\r\n  });\r\n\r\n  app.get(formatRoute(\"discord/:id\"), async (req: Request<{ id: string }>, res: Response) => {\r\n    console.debug(\"[apps.routes] GET /discord/:id called\", { params: req.params });\r\n    try {\r\n      const { id } = req.params;\r\n      if (!id || typeof id !== \"string\") {\r\n        console.debug(\"[apps.routes] Invalid or missing id param\", { id });\r\n        return res.status(400).json({ success: false, message: \"ID de cliente inv치lido o faltante\" });\r\n      }\r\n      console.debug(\"[apps.routes] Searching discord config by clientId\", id);\r\n      const discord = await main.prisma.discord.findFirst({ where: { clientId: id } });\r\n      if (!discord) {\r\n        console.debug(\"[apps.routes] Discord config not found for get\", { id });\r\n        return res.status(404).json({ success: false, message: \"Discord config no encontrada\" });\r\n      }\r\n      console.debug(\"[apps.routes] Discord config found\", { discord });\r\n      return res.status(200).json({ success: true, data: discord });\r\n    } catch (error: any) {\r\n      console.error(\"[apps.routes] Error getting Discord config\", { error: error?.stack || error });\r\n      return res.status(500).json({\r\n        success: false,\r\n        message: \"Error al obtener Discord config\",\r\n        error: error?.message || \"Error desconocido\",\r\n      });\r\n    }\r\n  });\r\n};\r\n"],"names":[],"mappings":"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","debug_id":"d8752694-e08f-56e9-b04c-c1f00a836ded"}