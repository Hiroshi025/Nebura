{"version":3,"file":"token.middleware.js","sources":["src/interfaces/http/middlewares/jwt/token.middleware.ts"],"sourceRoot":"/","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\n\nimport { safeCompare } from \"@/shared/functions\";\nimport { getToken } from \"@utils/token\";\n\nconst ERROR_MESSAGES = {\n  TOKEN_NOT_FOUND: \"Authorization token not found in headers\",\n  INVALID_TOKEN: \"Invalid or expired authentication token\",\n  SERVER_ERROR: \"Authentication service unavailable\",\n};\n\nexport const authenticateToken = async (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const authHeader = req.headers[\"authorization\"];\n    const token = authHeader?.split(\" \")[1]; // Bearer <token>\n\n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: {\n          message: ERROR_MESSAGES.TOKEN_NOT_FOUND,\n          timestamp: new Date().toISOString(),\n        },\n      });\n    }\n\n    const user = await getToken(token);\n    if (!user) {\n      return res.status(403).json({\n        success: false,\n        error: {\n          message: ERROR_MESSAGES.INVALID_TOKEN,\n          timestamp: new Date().toISOString(),\n        },\n      });\n    }\n\n    req.user = user;\n    next();\n    return;\n  } catch (error: unknown) {\n    const errorMessage = error instanceof Error ? error.message : \"Unknown error occurred\";\n    console.error(`[Auth Middleware Error]: ${errorMessage}`);\n\n    res.status(500).json({\n      success: false,\n      error: {\n        message: ERROR_MESSAGES.SERVER_ERROR,\n        details: process.env.NODE_ENV === \"development\" ? errorMessage : undefined,\n        timestamp: new Date().toISOString(),\n        //requestId: req.id Asumiendo que tienes un request ID\n      },\n    });\n  }\n  return;\n};\n\nexport const isAdminToken = (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const secretAdmin = process.env.ADMIN_SECRET as string;\n    const FORBIDDEN_ERROR = {\n      message: \"Forbidden: Insufficient privileges\",\n      timestamp: new Date().toISOString(),\n      code: \"FORBIDDEN\",\n    };\n\n    // Check for admin secret header\n    const headerSecret = Array.isArray(req.headers[\"x-secret-admin\"])\n      ? req.headers[\"x-secret-admin\"][0]\n      : req.headers[\"x-secret-admin\"];\n    if (!headerSecret) {\n      return res.status(403).json({\n        success: false,\n        error: FORBIDDEN_ERROR,\n      });\n    }\n\n    // Secure comparison to prevent timing attacks\n    if (!safeCompare(headerSecret, secretAdmin)) {\n      return res.status(403).json({\n        success: false,\n        error: FORBIDDEN_ERROR,\n      });\n    }\n\n    // If all checks pass, proceed\n    next();\n    return;\n  } catch (error) {\n    console.error(\"Admin check error:\", error);\n    return res.status(500).json({\n      success: false,\n      error: {\n        message: \"Internal server error during authorization check\",\n        timestamp: new Date().toISOString(),\n        code: \"INTERNAL_SERVER_ERROR\",\n      },\n    });\n  }\n};\n\nexport const isCustomerToken = (req: Request, res: Response, next: NextFunction) => {\n  try {\n    const secretCustomer = process.env.CUSTOMER_SECRET as string;\n    const FORBIDDEN_ERROR = {\n      message: \"Forbidden: Insufficient privileges\",\n      timestamp: new Date().toISOString(),\n      code: \"FORBIDDEN\",\n    };\n\n    const headerSecret = Array.isArray(req.headers[\"x-secret-customer\"])\n      ? req.headers[\"x-secret-customer\"][0]\n      : req.headers[\"x-secret-customer\"];\n\n    if (!headerSecret) {\n      return res.status(403).json({\n        success: false,\n        error: FORBIDDEN_ERROR,\n      });\n    }\n\n    // Secure comparison to prevent timing attacks\n    if (!safeCompare(headerSecret, secretCustomer)) {\n      return res.status(403).json({\n        success: false,\n        error: FORBIDDEN_ERROR,\n      });\n    }\n\n    // If all checks pass, proceed\n    next();\n    return;\n  } catch (error) {\n    console.error(\"Customer check error:\", error);\n    return res.status(500).json({\n      success: false,\n      error: {\n        message: \"Internal server error during authorization check\",\n        timestamp: new Date().toISOString(),\n        code: \"INTERNAL_SERVER_ERROR\",\n      },\n    });\n  }\n};\n"],"names":[],"mappings":"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","debug_id":"a1897dd7-6fe3-506c-a68d-9fd7ea1b3e0e"}