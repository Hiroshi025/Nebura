{"version":3,"file":"auth.middleware.js","sources":["src/interfaces/http/middlewares/jwt/auth.middleware.ts"],"sourceRoot":"/","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { User } from \"@typings/utils\";\r\n\r\nexport const isDevelopment = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const data = await main.prisma.userAPI.findUnique({ where: { id: (req.user as User).id } });\r\n    if (!data) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Unauthorized: Authentication required\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"UNAUTHORIZED\",\r\n        },\r\n      });\r\n    }\r\n\r\n    const isDev = data.role === \"developer\" || data.role === \"owner\";\r\n    if (!isDev) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Forbidden: Insufficient privileges\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"FORBIDDEN\",\r\n        },\r\n      });\r\n    }\r\n\r\n    next();\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Development check error:\", error);\r\n    return res.status(500).json({\r\n      success: false,\r\n      error: {\r\n        message: \"Internal server error during development check\",\r\n        timestamp: new Date().toISOString(),\r\n        code: \"INTERNAL_SERVER_ERROR\",\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const isAdmin = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const data = await main.prisma.userAPI.findUnique({ where: { id: (req.user as User).id } });\r\n    if (!data) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Unauthorized: Authentication required\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"UNAUTHORIZED\",\r\n        },\r\n      });\r\n    }\r\n\r\n    const isAdmin = data.role === \"admin\" || data.role === \"owner\";\r\n    if (!isAdmin) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Forbidden: Insufficient privileges\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"FORBIDDEN\",\r\n        },\r\n      });\r\n    }\r\n\r\n    next();\r\n    return;\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Admin check error:\", error);\r\n    return res.status(500).json({\r\n      success: false,\r\n      error: {\r\n        message: \"Internal server error during admin check\",\r\n        timestamp: new Date().toISOString(),\r\n        code: \"INTERNAL_SERVER_ERROR\",\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const isCustomer = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const data = await main.prisma.userAPI.findUnique({ where: { id: (req.user as User).id } });\r\n    if (!data) {\r\n      return res.status(401).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Unauthorized: Authentication required\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"UNAUTHORIZED\",\r\n        },\r\n      });\r\n    }\r\n\r\n    const isCustomer = data.role === \"customer\" || data.role === \"owner\";\r\n    if (!isCustomer) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        error: {\r\n          message: \"Forbidden: Insufficient privileges\",\r\n          timestamp: new Date().toISOString(),\r\n          code: \"FORBIDDEN\",\r\n        },\r\n      });\r\n    }\r\n\r\n    next();\r\n    return;\r\n  } catch (error) {\r\n    console.error(\"Customer check error:\", error);\r\n    return res.status(500).json({\r\n      success: false,\r\n      error: {\r\n        message: \"Internal server error during customer check\",\r\n        timestamp: new Date().toISOString(),\r\n        code: \"INTERNAL_SERVER_ERROR\",\r\n      },\r\n    });\r\n  }\r\n}"],"names":[],"mappings":"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","debug_id":"c355c8e2-2436-5690-8dcf-81903582739d"}