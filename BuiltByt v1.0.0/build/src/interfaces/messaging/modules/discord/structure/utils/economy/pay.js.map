{"version":3,"file":"pay.js","sources":["src/interfaces/messaging/modules/discord/structure/utils/economy/pay.ts"],"sourceRoot":"/","sourcesContent":["import { ChatInputCommandInteraction } from \"discord.js\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nimport { MyClient } from \"../../../client\";\r\nimport { fetchBalance, toFixedNumber } from \"../functions\";\r\n\r\nexport async function PayEconomy(interaction: ChatInputCommandInteraction, client: MyClient) {\r\n  if (!interaction.guild || !interaction.channel || !interaction.member) return;\r\n  const user = interaction.options.getUser(\"user\") || interaction.user;\r\n\r\n  const userBalance = await fetchBalance(interaction.user.id, interaction.guild.id);\r\n\r\n  let amount = interaction.options.getNumber(\"amount\");\r\n  if (!amount)\r\n    return {\r\n      embeds: [\r\n        new EmbedCorrect().setDescription(\r\n          [\r\n            `${client.getEmoji(interaction.guild.id, \"error\")} You need to specify an amount to pay!`,\r\n            `Example: \\`/pay @user 100\\``,\r\n          ].join(\"\\n\"),\r\n        ),\r\n      ],\r\n      flags: \"Ephemeral\",\r\n    };\r\n\r\n  if (user.bot || user.id === interaction.user.id)\r\n    return await interaction.reply({\r\n      embeds: [\r\n        new EmbedCorrect()\r\n          .setDescription(\r\n            [\r\n              `${client.getEmoji(interaction.guild.id, \"error\")} You cannot pay a bot or yourself!`,\r\n              `Please mention a valid user to pay.`,\r\n            ].join(\"\\n\"),\r\n          )\r\n          .setColor(\"Red\"),\r\n      ],\r\n      flags: \"Ephemeral\",\r\n    });\r\n\r\n  if (amount > userBalance.balance)\r\n    return await interaction.reply({\r\n      embeds: [\r\n        new EmbedCorrect()\r\n          .setDescription(\r\n            [\r\n              `${client.getEmoji(interaction.guild.id, \"error\")} You do not have enough balance to pay this amount!`,\r\n              `Your current balance is $${userBalance.balance}.`,\r\n            ].join(\"\\n\"),\r\n          )\r\n          .setColor(\"Red\"),\r\n      ],\r\n    });\r\n\r\n  const selectedUserBalance = await fetchBalance(user.id, interaction.guild.id);\r\n\r\n  amount = await toFixedNumber(amount);\r\n\r\n  const balanceFixed = await toFixedNumber(userBalance.balance - amount);\r\n  await main.prisma.userEconomy.update({\r\n    where: { id: userBalance.id },\r\n    data: { balance: balanceFixed },\r\n  });\r\n\r\n  const userBalanceFixed = await toFixedNumber(selectedUserBalance.balance + amount);\r\n  await main.prisma.userEconomy.update({\r\n    where: { id: selectedUserBalance.id },\r\n    data: { balance: userBalanceFixed },\r\n  });\r\n\r\n  await interaction.reply({\r\n    embeds: [\r\n      new EmbedCorrect()\r\n        .setDescription(\r\n          [\r\n            `${client.getEmoji(interaction.guild.id, \"correct\")} You have successfully paid ${amount} to ${user}!`,\r\n            `Your current balance is $${balanceFixed}.`,\r\n          ].join(\"\\n\"),\r\n        )\r\n        .setColor(\"Green\"),\r\n    ],\r\n    flags: \"Ephemeral\",\r\n  });\r\n\r\n  const userGet = client.users.cache.get(user.id);\r\n  if (!userGet)\r\n    return {\r\n      embeds: [\r\n        new ErrorEmbed().setDescription(\r\n          [\r\n            `${client.getEmoji(interaction.guild.id, \"error\")} The user you are trying to pay is not in the server!`,\r\n            `Please make sure the user is in the server and try again.`,\r\n          ].join(\"\\n\"),\r\n        ),\r\n      ],\r\n    };\r\n\r\n  await userGet.send({\r\n    embeds: [\r\n      new EmbedCorrect()\r\n        .setDescription(\r\n          `You have received a total of ${amount} from ${\r\n            interaction.user\r\n          }! This amount has been deposited to your balance and you total now is $${\r\n            selectedUserBalance.balance + amount\r\n          }`,\r\n        )\r\n        .setColor(\"Green\")\r\n        .setImage(\"https://cdn.discordapp.com/attachments/1098838797229236315/1098864088639078481/money-banner.png\"),\r\n    ],\r\n  });\r\n\r\n  return;\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"860653a2-2170-52bd-84b2-8c86bcec3d82"}