{"version":3,"file":"builders.js","sources":["src/interfaces/messaging/modules/discord/structure/utils/builders.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n  ChatInputCommandInteraction,\r\n  ClientEvents,\r\n  ContextMenuCommandBuilder,\r\n  SlashCommandBuilder,\r\n  SlashCommandOptionsOnlyBuilder,\r\n  SlashCommandSubcommandsOnlyBuilder,\r\n} from \"discord.js\";\r\n\r\nimport { config } from \"@/shared/utils/config\";\r\nimport { CommandOptions } from \"@typings/modules/discord\";\r\n\r\nimport { MyClient } from \"../../client\";\r\n\r\n/**\r\n * Class representing an event in the bot system.\r\n * This class defines the event name, the execution logic for the event, and whether it runs only once.\r\n *\r\n * @example\r\n * const event = new Event('messageCreate', (message) => {\r\n *   console.log(`Message received: ${message.content}`);\r\n * });\r\n *\r\n * @template K - A key from `ClientEvents`, representing the event name.\r\n * @class\r\n */\r\nexport class Event<K extends keyof ClientEvents> {\r\n  /**\r\n   * The name of the event, which corresponds to a key in `ClientEvents`.\r\n   *\r\n   * @type {K}\r\n   * @readonly\r\n   */\r\n  readonly event: K;\r\n\r\n  /**\r\n   * The function that runs when the event is triggered.\r\n   * It receives arguments based on the event type.\r\n   *\r\n   * @type {(...args: ClientEvents[K]) => void}\r\n   * @readonly\r\n   */\r\n  readonly run: (...args: ClientEvents[K]) => void;\r\n\r\n  /**\r\n   * Whether the event should only run once. If `true`, the event listener is removed after the first execution.\r\n   *\r\n   * @type {boolean | undefined}\r\n   * @readonly\r\n   */\r\n  readonly once?: boolean;\r\n\r\n  /**\r\n   * Creates an instance of Event.\r\n   *\r\n   * @param event - The name of the event, which corresponds to a key in `ClientEvents`.\r\n   * @param run - The function that executes when the event is triggered. It receives the arguments expected for that event.\r\n   * @param once - Optional. Whether the event should run only once. Defaults to `false`.\r\n   */\r\n  constructor(event: K, run: (...args: ClientEvents[K]) => void, once?: boolean) {\r\n    this.event = event;\r\n    this.run = run;\r\n    this.once = once;\r\n  }\r\n}\r\n\r\n/**\r\n * @name Command\r\n * @description A class that represents a command in the bot system.\r\n * @version 0.0.3\r\n * @author MikaboshiDev\r\n *\r\n * @alias Command\r\n * @class\r\n */\r\nexport class Command {\r\n  /**\r\n   * The structure defining the command, which can be a Slash Command, Context Menu Command,\r\n   * or other specific command builders from `discord.js`.\r\n   *\r\n   * @type {SlashCommandBuilder | ContextMenuCommandBuilder | SlashCommandOptionsOnlyBuilder | SlashCommandSubcommandsOnlyBuilder | Omit<SlashCommandBuilder, 'addSubcommand' | 'addSubcommandGroup | CommandBuilder'>}\r\n   * @readonly\r\n   */\r\n  readonly structure:\r\n    | SlashCommandBuilder\r\n    | ContextMenuCommandBuilder\r\n    | SlashCommandOptionsOnlyBuilder\r\n    | SlashCommandSubcommandsOnlyBuilder\r\n    | Omit<SlashCommandBuilder, \"addSubcommand\" | \"addSubcommandGroup\">;\r\n\r\n  /**\r\n   * The function that runs the command when invoked.\r\n   * It receives the `BotCore` client, the command interaction, and the configuration object.\r\n   *\r\n   * @type {(client: BotCore, interaction: ChatInputCommandInteraction, configuration: typeof config) => void}\r\n   * @readonly\r\n   */\r\n  readonly run: (\r\n    client: MyClient,\r\n    interaction: ChatInputCommandInteraction,\r\n    configuration: typeof config,\r\n  ) => void;\r\n\r\n  /**\r\n   * Optional configuration options for the command, such as cooldown or permissions.\r\n   *\r\n   * @type {CommandOptions | undefined}\r\n   * @readonly\r\n   */\r\n  readonly options: CommandOptions | undefined;\r\n\r\n  /**\r\n   * The cooldown time for the command in seconds.\r\n   *\r\n   * @type {number | undefined}\r\n   * @readonly\r\n   */\r\n  readonly cooldown?: number;\r\n\r\n  /**\r\n   * Indicates whether the command is under maintenance.\r\n   *\r\n   * @type {boolean | undefined}\r\n   * @readonly\r\n   */\r\n  readonly maintenance?: boolean;\r\n\r\n  /**\r\n   * Creates an instance of Command.\r\n   *\r\n   * @param structure - The command structure, which can be a Slash Command, Context Menu Command, or other supported command builders.\r\n   * @param run - The function that runs when the command is executed, receiving the bot client, the interaction, and configuration.\r\n   * @param options - Optional settings for the command, such as cooldown and other command-related options.\r\n   * @param cooldown - Optional cooldown time in seconds to prevent command spam. Defaults to `10` seconds.\r\n   * @param maintenance - Optional flag to indicate if the command is under maintenance. Defaults to `false`.\r\n   */\r\n  constructor(\r\n    structure:\r\n      | SlashCommandBuilder\r\n      | ContextMenuCommandBuilder\r\n      | SlashCommandOptionsOnlyBuilder\r\n      | SlashCommandSubcommandsOnlyBuilder\r\n      | Omit<SlashCommandBuilder, \"addSubcommand\" | \"addSubcommandGroup\">,\r\n    run: (\r\n      client: MyClient,\r\n      interaction: ChatInputCommandInteraction,\r\n      configuration: typeof config,\r\n    ) => void,\r\n    options?: CommandOptions,\r\n    cooldown: number = 10, // Default cooldown set to 10 seconds\r\n    maintenance: boolean = false, // Nuevo par√°metro opcional\r\n  ) {\r\n    this.structure = structure;\r\n    this.run = run;\r\n    this.options = options;\r\n    this.cooldown = cooldown;\r\n    this.maintenance = maintenance;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAcA;;;;;;;;;;;GAWG;AACH,MAAa,KAAK;IAChB;;;;;OAKG;IACM,KAAK,CAAI;IAElB;;;;;;OAMG;IACM,GAAG,CAAqC;IAEjD;;;;;OAKG;IACM,IAAI,CAAW;IAExB;;;;;;OAMG;IACH,YAAY,KAAQ,EAAE,GAAuC,EAAE,IAAc;QAC3E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAtCD,sBAsCC;AAED;;;;;;;;GAQG;AACH,MAAa,OAAO;IAClB;;;;;;OAMG;IACM,SAAS,CAKoD;IAEtE;;;;;;OAMG;IACM,GAAG,CAIF;IAEV;;;;;OAKG;IACM,OAAO,CAA6B;IAE7C;;;;;OAKG;IACM,QAAQ,CAAU;IAE3B;;;;;OAKG;IACM,WAAW,CAAW;IAE/B;;;;;;;;OAQG;IACH,YACE,SAKqE,EACrE,GAIS,EACT,OAAwB,EACxB,WAAmB,EAAE,EAAE,qCAAqC;IAC5D,cAAuB,KAAK;QAE5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;CACF;AAnFD,0BAmFC","debug_id":"4b2dd441-0a9c-57e1-83b9-e957ea4201f4"}