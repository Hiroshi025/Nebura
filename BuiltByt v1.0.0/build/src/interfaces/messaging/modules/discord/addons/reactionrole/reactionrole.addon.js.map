{"version":3,"file":"reactionrole.addon.js","sources":["src/interfaces/messaging/modules/discord/addons/reactionrole/reactionrole.addon.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tChannelType, Events, MessageReaction, PartialMessageReaction, PartialUser, User\r\n} from \"discord.js\";\r\n\r\nimport { Addons } from \"@/interfaces/messaging/modules/discord/structure/addons\";\r\nimport { main } from \"@/main\";\r\n\r\nimport { ReactionRoleData } from \"./types\";\r\n\r\nexport default new Addons(\r\n  {\r\n    name: \"Reaction Role Manager\",\r\n    description: \"Manage roles based on reactions.\",\r\n    author: \"Hiroshi025\",\r\n    version: \"1.0.0\",\r\n    bitfield: [\"ManageGuild\"],\r\n  },\r\n  async (client) => {\r\n    // ADDING ROLES\r\n    client.on(\r\n      Events.MessageReactionAdd,\r\n      async (reaction: MessageReaction | PartialMessageReaction, user: User | PartialUser) => {\r\n        try {\r\n          console.log(\"[DEBUG] MessageReactionAdd event triggered\");\r\n\r\n          const { message } = reaction;\r\n          if (\r\n            user.bot ||\r\n            !message.guild ||\r\n            !message.channel ||\r\n            message.channel.type !== ChannelType.GuildText\r\n          )\r\n            return;\r\n\r\n          // Fetch partial data if needed\r\n          if (message.partial) {\r\n            console.log(\"[DEBUG] Fetching partial message\");\r\n            await message.fetch().catch(() => {});\r\n          }\r\n          if (reaction.partial) {\r\n            console.log(\"[DEBUG] Fetching partial reaction\");\r\n            await reaction.fetch().catch(() => {});\r\n          }\r\n\r\n          // Get or create reaction roles for this guild\r\n          console.log(`[DEBUG] Getting reaction roles for guild ${message.guild.id}`);\r\n          const guildId = message.guild.id;\r\n          let reactionSetup = await main.prisma.reactionRole.findMany({\r\n            where: { guildId },\r\n          });\r\n\r\n          if (!reactionSetup || reactionSetup.length === 0) {\r\n            console.log(\"[DEBUG] No reaction roles setup for this guild\");\r\n            return;\r\n          }\r\n\r\n          for (const setup of reactionSetup) {\r\n            if (message.id === setup.messageId) {\r\n              console.log(`[DEBUG] Found matching reaction role setup for message ${message.id}`);\r\n\r\n              const member = await message.guild.members.fetch(user.id).catch(() => {});\r\n              if (!member) {\r\n                console.log(\"[DEBUG] Couldn't fetch member\");\r\n                return;\r\n              }\r\n\r\n              const parameters = setup.parameters as unknown as ReactionRoleData[\"Parameters\"];\r\n              let currentRole: string | null = null;\r\n\r\n              for (const param of parameters) {\r\n                if (reaction.emoji?.id === param.Emoji || reaction.emoji?.name === param.Emoji) {\r\n                  console.log(`[DEBUG] Matched emoji ${param.Emoji} with role ${param.Role}`);\r\n                  try {\r\n                    currentRole = param.Role;\r\n                    const guildRole = message.guild.roles.cache.get(param.Role);\r\n\r\n                    if (guildRole) {\r\n                      const botHighestRole = message.guild.members.me?.roles.highest;\r\n                      if (botHighestRole && botHighestRole.rawPosition > guildRole.rawPosition) {\r\n                        if (!member.roles.cache.has(param.Role)) {\r\n                          console.log(\r\n                            `[DEBUG] Adding role ${guildRole.name} to member ${member.user.tag}`,\r\n                          );\r\n                          await member.roles.add(param.Role).catch(() => {});\r\n                        }\r\n                      } else {\r\n                        console.log(`[DEBUG] Role ${guildRole.name} is above bot's highest role`);\r\n                        const msg = await message.channel\r\n                          .send(\"The Role is above my highest Role, I can't give it to you!\")\r\n                          .catch(() => {});\r\n                        if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                      }\r\n                    } else {\r\n                      console.log(`[DEBUG] Role ${param.Role} not found in guild`);\r\n                      const msg = await message.channel\r\n                        .send(\"This Role got deleted, I can't give it to you!\")\r\n                        .catch(() => {});\r\n                      if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(\"[ERROR] Error adding role:\", error);\r\n                    const msg = await message.channel\r\n                      .send({\r\n                        content: `\\`\\`\\`${error instanceof Error ? error.message : String(error)}\\`\\`\\``,\r\n                      })\r\n                      .catch(() => {});\r\n                    if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (setup.removeOthers) {\r\n                console.log(\"[DEBUG] remove_others is true, removing other reactions and roles\");\r\n\r\n                // Remove other reactions\r\n                await message.fetch().catch(() => {});\r\n                const userReactions = message.reactions.cache;\r\n\r\n                try {\r\n                  for (const otherReaction of userReactions.values()) {\r\n                    if (\r\n                      otherReaction.users.cache.has(user.id) &&\r\n                      (reaction.emoji?.name !== otherReaction.emoji?.name ||\r\n                        reaction.emoji?.id !== otherReaction.emoji?.id)\r\n                    ) {\r\n                      console.log(`[DEBUG] Removing other reaction ${otherReaction.emoji?.name}`);\r\n                      await otherReaction.users.remove(user.id).catch(() => {});\r\n                    }\r\n                  }\r\n                } catch (error) {\r\n                  console.error(\"[ERROR] Error removing reactions:\", error);\r\n                }\r\n\r\n                // Remove other roles\r\n                for (const param of parameters) {\r\n                  try {\r\n                    if (param.Role !== currentRole) {\r\n                      const guildRole = message.guild.roles.cache.get(param.Role);\r\n                      if (guildRole) {\r\n                        const botHighestRole = message.guild.members.me?.roles.highest;\r\n                        if (botHighestRole && botHighestRole.rawPosition > guildRole.rawPosition) {\r\n                          if (member.roles.cache.has(param.Role)) {\r\n                            console.log(\r\n                              `[DEBUG] Removing role ${guildRole.name} from member ${member.user.tag}`,\r\n                            );\r\n                            await member.roles.remove(param.Role).catch(() => {});\r\n                          }\r\n                        } else {\r\n                          console.log(`[DEBUG] Role ${guildRole.name} is above bot's highest role`);\r\n                          const msg = await message.channel\r\n                            .send(\"The Role is above my highest Role, I can't remove it from you!\")\r\n                            .catch(() => {});\r\n                          if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                        }\r\n                      } else {\r\n                        console.log(`[DEBUG] Role ${param.Role} not found in guild`);\r\n                        const msg = await message.channel\r\n                          .send(\"This Role got deleted, I can't remove it from you!\")\r\n                          .catch(() => {});\r\n                        if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                      }\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(\"[ERROR] Error removing role:\", error);\r\n                    const msg = await message.channel\r\n                      .send({\r\n                        content: `\\`\\`\\`${error instanceof Error ? error.message : String(error)}\\`\\`\\``,\r\n                      })\r\n                      .catch(() => {});\r\n                    if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.error(\"[ERROR] In MessageReactionAdd:\", e instanceof Error ? e.stack : String(e));\r\n        }\r\n      },\r\n    );\r\n\r\n    // REMOVING ROLES\r\n    client.on(\r\n      Events.MessageReactionRemove,\r\n      async (reaction: MessageReaction | PartialMessageReaction, user: User | PartialUser) => {\r\n        try {\r\n          console.log(\"[DEBUG] MessageReactionRemove event triggered\");\r\n\r\n          if (reaction.message.partial) {\r\n            console.log(\"[DEBUG] Fetching partial message\");\r\n            await reaction.message.fetch().catch(() => {});\r\n          }\r\n          if (reaction.partial) {\r\n            console.log(\"[DEBUG] Fetching partial reaction\");\r\n            await reaction.fetch().catch(() => {});\r\n          }\r\n          if (user.bot) return;\r\n          if (\r\n            !reaction.message.guild ||\r\n            !reaction.message.channel ||\r\n            reaction.message.channel.type !== ChannelType.GuildText\r\n          )\r\n            return;\r\n\r\n          console.log(`[DEBUG] Getting reaction roles for guild ${reaction.message.guild.id}`);\r\n          const guildId = reaction.message.guild.id;\r\n          const reactionSetup = await main.prisma.reactionRole.findMany({\r\n            where: { guildId },\r\n          });\r\n\r\n          for (const setup of reactionSetup) {\r\n            if (reaction.message.id === setup.messageId) {\r\n              console.log(\r\n                `[DEBUG] Found matching reaction role setup for message ${reaction.message.id}`,\r\n              );\r\n\r\n              const member = await reaction.message.guild.members.fetch(user.id).catch(() => {});\r\n              if (!member) {\r\n                console.log(\"[DEBUG] Couldn't fetch member\");\r\n                return;\r\n              }\r\n\r\n              const parameters = setup.parameters as unknown as ReactionRoleData[\"Parameters\"];\r\n\r\n              for (const param of parameters) {\r\n                if (reaction.emoji?.id === param.Emoji || reaction.emoji?.name === param.Emoji) {\r\n                  console.log(`[DEBUG] Matched emoji ${param.Emoji} with role ${param.Role}`);\r\n                  try {\r\n                    const guildRole = reaction.message.guild.roles.cache.get(param.Role);\r\n                    if (guildRole) {\r\n                      const botHighestRole = reaction.message.guild.members.me?.roles.highest;\r\n                      if (botHighestRole && botHighestRole.rawPosition > guildRole.rawPosition) {\r\n                        if (member.roles.cache.has(param.Role)) {\r\n                          console.log(\r\n                            `[DEBUG] Removing role ${guildRole.name} from member ${member.user.tag}`,\r\n                          );\r\n                          await member.roles.remove(param.Role).catch(() => {});\r\n                        }\r\n                      } else {\r\n                        console.log(`[DEBUG] Role ${guildRole.name} is above bot's highest role`);\r\n                        const msg = await reaction.message.channel\r\n                          .send(\"The Role is above my highest Role, I can't remove it from you!\")\r\n                          .catch(() => {});\r\n                        if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                      }\r\n                    } else {\r\n                      console.log(`[DEBUG] Role ${param.Role} not found in guild`);\r\n                      const msg = await reaction.message.channel\r\n                        .send(\"This Role got deleted, I can't remove it from you!\")\r\n                        .catch(() => {});\r\n                      if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                    }\r\n                  } catch (error) {\r\n                    console.error(\"[ERROR] Error removing role:\", error);\r\n                    const msg = await reaction.message.channel\r\n                      .send({\r\n                        content: `\\`\\`\\`${error instanceof Error ? error.message : String(error)}\\`\\`\\``,\r\n                      })\r\n                      .catch(() => {});\r\n                    if (msg) setTimeout(() => msg.delete().catch(() => {}), 3000);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (e) {\r\n          console.error(\r\n            \"[ERROR] In MessageReactionRemove:\",\r\n            e instanceof Error ? e.stack : String(e),\r\n          );\r\n        }\r\n      },\r\n    );\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"c7bb7599-9100-567a-a1f5-844bda9d8582"}