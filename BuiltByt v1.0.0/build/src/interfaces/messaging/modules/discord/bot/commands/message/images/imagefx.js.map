{"version":3,"file":"imagefx.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/images/imagefx.ts"],"sourceRoot":"/","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n\tActionRowBuilder, AttachmentBuilder, ButtonBuilder, ButtonStyle, ChannelType, EmbedBuilder,\r\n\tStringSelectMenuBuilder, StringSelectMenuOptionBuilder\r\n} from \"discord.js\";\r\nimport sharp from \"sharp\";\r\n\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst effectsCommand: Precommand = {\r\n    name: \"imagefx\",\r\n    description: \"Apply cool effects to images!\",\r\n    examples: [\"imagefx [attachment]\", \"imagefx [image URL]\"],\r\n    nsfw: false,\r\n    owner: false,\r\n    cooldown: 30,\r\n    aliases: [\"filter\", \"imgefx\", \"photoedit\"],\r\n    botpermissions: [\"SendMessages\", \"AttachFiles\", \"EmbedLinks\"],\r\n    permissions: [\"SendMessages\"],\r\n    async execute(_client, message) {\r\n        if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n        // Get image from attachment or message content\r\n        const imageUrl = message.attachments.first()?.url || message.content.split(/\\s+/)[1];\r\n        \r\n        if (!imageUrl) {\r\n            return message.reply({\r\n                embeds: [\r\n                    new EmbedBuilder()\r\n                        .setColor(\"#FF0000\")\r\n                        .setTitle(\"‚ùå Missing Image\")\r\n                        .setDescription(\"Please attach an image or provide a URL!\")\r\n                        .addFields(\r\n                            { name: \"Example with attachment\", value: \"`!imagefx` (with image attached)\" },\r\n                            { name: \"Example with URL\", value: \"`!imagefx https://example.com/image.jpg`\" }\r\n                        )\r\n                ]\r\n            });\r\n        }\r\n\r\n        try {\r\n            // Fetch the image\r\n            const response = await axios.get(imageUrl, { responseType: \"arraybuffer\" });\r\n            const imageBuffer = Buffer.from(response.data, \"binary\");\r\n\r\n            // Create effect selection menu\r\n            const selectMenu = new StringSelectMenuBuilder()\r\n                .setCustomId(\"effect_selector\")\r\n                .setPlaceholder(\"Choose an effect...\")\r\n                .addOptions(\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Blur\")\r\n                        .setValue(\"blur\")\r\n                        .setDescription(\"Soft blur effect\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Sharpen\")\r\n                        .setValue(\"sharpen\")\r\n                        .setDescription(\"Enhance details\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Pixelate\")\r\n                        .setValue(\"pixelate\")\r\n                        .setDescription(\"Mosaic pixel effect\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Sepia\")\r\n                        .setValue(\"sepia\")\r\n                        .setDescription(\"Vintage brown tone\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Grayscale\")\r\n                        .setValue(\"grayscale\")\r\n                        .setDescription(\"Black and white\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Invert\")\r\n                        .setValue(\"invert\")\r\n                        .setDescription(\"Negative colors\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Vignette\")\r\n                        .setValue(\"vignette\")\r\n                        .setDescription(\"Darkened edges\"),\r\n                    new StringSelectMenuOptionBuilder()\r\n                        .setLabel(\"Posterize\")\r\n                        .setValue(\"posterize\")\r\n                        .setDescription(\"Reduce color palette\")\r\n                );\r\n\r\n            const actionRow = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(selectMenu);\r\n\r\n            // Preview button\r\n            const previewButton = new ButtonBuilder()\r\n                .setCustomId(\"preview_effects\")\r\n                .setLabel(\"Preview Effects\")\r\n                .setStyle(ButtonStyle.Primary);\r\n\r\n            const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(previewButton);\r\n\r\n            const embed = new EmbedBuilder()\r\n                .setColor(\"#0099FF\")\r\n                .setTitle(\"üé® Image Effects Editor\")\r\n                .setDescription(\"Select an effect to apply to your image!\")\r\n                .setImage(imageUrl)\r\n                .addFields(\r\n                    { name: \"Original Image\", value: `[View original](${imageUrl})`, inline: true },\r\n                    { name: \"How to use\", value: \"Choose an effect from the menu below\", inline: true }\r\n                )\r\n                .setFooter({ text: \"Effects may take a few seconds to process\" });\r\n\r\n            const reply = await message.reply({\r\n                embeds: [embed],\r\n                components: [actionRow, buttonRow]\r\n            });\r\n\r\n            // Collector for effect selection\r\n            const collector = reply.createMessageComponentCollector({ time: 60000 });\r\n\r\n            collector.on(\"collect\", async interaction => {\r\n                if (!interaction.isStringSelectMenu() && !interaction.isButton()) return;\r\n\r\n                await interaction.deferUpdate();\r\n\r\n                if (interaction.isButton() && interaction.customId === \"preview_effects\") {\r\n                    // Show preview of all effects\r\n                    await showEffectPreviews(interaction, imageBuffer);\r\n                    return;\r\n                }\r\n\r\n                if (interaction.isStringSelectMenu()) {\r\n                    const effect = interaction.values[0];\r\n                    let processedImage: Buffer;\r\n\r\n                    try {\r\n                        switch (effect) {\r\n                            case \"blur\":\r\n                                processedImage = await sharp(imageBuffer).blur(10).toBuffer();\r\n                                break;\r\n                            case \"sharpen\":\r\n                                processedImage = await sharp(imageBuffer).sharpen({ sigma: 2 }).toBuffer();\r\n                                break;\r\n                            case \"pixelate\":\r\n                                processedImage = await pixelateEffect(imageBuffer);\r\n                                break;\r\n                            case \"sepia\":\r\n                                processedImage = await sharp(imageBuffer).modulate({\r\n                                    saturation: 0.5\r\n                                }).tint(\"#704214\").toBuffer();\r\n                                break;\r\n                            case \"grayscale\":\r\n                                processedImage = await sharp(imageBuffer).grayscale().toBuffer();\r\n                                break;\r\n                            case \"invert\":\r\n                                processedImage = await sharp(imageBuffer).negate().toBuffer();\r\n                                break;\r\n                            case \"vignette\":\r\n                                processedImage = await vignetteEffect(imageBuffer);\r\n                                break;\r\n                            case \"posterize\":\r\n                                processedImage = await sharp(imageBuffer).png({ quality: 10 }).toBuffer();\r\n                                break;\r\n                            default:\r\n                                processedImage = imageBuffer;\r\n                        }\r\n\r\n                        const attachment = new AttachmentBuilder(processedImage, { name: `effect_${effect}.png` });\r\n\r\n                        const resultEmbed = new EmbedBuilder()\r\n                            .setColor(\"#00FF00\")\r\n                            .setTitle(`‚ú® ${effect.charAt(0).toUpperCase() + effect.slice(1)} Effect`)\r\n                            .setImage(`attachment://effect_${effect}.png`)\r\n                            .setFooter({ text: \"Want another effect? Select from the menu!\" });\r\n\r\n                        await interaction.editReply({\r\n                            embeds: [resultEmbed],\r\n                            files: [attachment],\r\n                            components: [actionRow, buttonRow]\r\n                        });\r\n\r\n                    } catch (error) {\r\n                        console.error(\"Error processing image:\", error);\r\n                        await interaction.followUp({\r\n                            embeds: [\r\n                                new EmbedBuilder()\r\n                                    .setColor(\"#FF0000\")\r\n                                    .setTitle(\"‚ùå Processing Error\")\r\n                                    .setDescription(\"Failed to apply the effect. Please try again.\")\r\n                            ],\r\n                            ephemeral: true\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            collector.on(\"end\", () => {\r\n                reply.edit({ components: [] }).catch(console.error);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching image:\", error);\r\n            return message.reply({\r\n                embeds: [\r\n                    new EmbedBuilder()\r\n                        .setColor(\"#FF0000\")\r\n                        .setTitle(\"‚ùå Invalid Image\")\r\n                        .setDescription(\"Couldn't process the image. Please check the URL or try a different image.\")\r\n                ]\r\n            });\r\n        }\r\n        return;\r\n    },\r\n};\r\n\r\nasync function pixelateEffect(buffer: Buffer): Promise<Buffer> {\r\n    // First resize to small size then scale back up for pixelation effect\r\n    return sharp(buffer)\r\n        .resize(32, 32, { kernel: sharp.kernel.nearest })\r\n        .resize(512, 512, { kernel: sharp.kernel.nearest })\r\n        .toBuffer();\r\n}\r\n\r\nasync function vignetteEffect(buffer: Buffer): Promise<Buffer> {\r\n    const metadata = await sharp(buffer).metadata();\r\n    const width = metadata.width || 1000;\r\n    const height = metadata.height || 1000;\r\n\r\n    // Create vignette overlay\r\n    const vignette = Buffer.from(\r\n        `<svg width=\"${width}\" height=\"${height}\">\r\n            <radialGradient id=\"gradient\" cx=\"50%\" cy=\"50%\" r=\"75%\">\r\n                <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\"/>\r\n                <stop offset=\"100%\" stop-color=\"black\" stop-opacity=\"1\"/>\r\n            </radialGradient>\r\n            <rect x=\"0\" y=\"0\" width=\"${width}\" height=\"${height}\" fill=\"url(#gradient)\" opacity=\"0.5\"/>\r\n        </svg>`\r\n    );\r\n\r\n    return sharp(buffer)\r\n        .composite([{ input: vignette, blend: \"multiply\" }])\r\n        .toBuffer();\r\n}\r\n\r\nasync function showEffectPreviews(interaction: any, originalBuffer: Buffer): Promise<void> {\r\n    // Create small previews of all effects\r\n    const effects = [\"blur\", \"sharpen\", \"pixelate\", \"sepia\", \"grayscale\", \"invert\", \"vignette\", \"posterize\"];\r\n    const previewSize = 200;\r\n    \r\n    const previewPromises = effects.map(async effect => {\r\n        let processedBuffer: Buffer;\r\n        \r\n        switch (effect) {\r\n            case \"blur\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).blur(5).toBuffer();\r\n                break;\r\n            case \"sharpen\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).sharpen({ sigma: 2 }).toBuffer();\r\n                break;\r\n            case \"pixelate\":\r\n                processedBuffer = await sharp(originalBuffer)\r\n                    .resize(16, 16, { kernel: sharp.kernel.nearest })\r\n                    .resize(previewSize, previewSize, { kernel: sharp.kernel.nearest })\r\n                    .toBuffer();\r\n                break;\r\n            case \"sepia\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).modulate({\r\n                    saturation: 0.5\r\n                }).tint(\"#704214\").toBuffer();\r\n                break;\r\n            case \"grayscale\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).grayscale().toBuffer();\r\n                break;\r\n            case \"invert\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).negate().toBuffer();\r\n                break;\r\n            case \"vignette\":\r\n                processedBuffer = await sharp(originalBuffer)\r\n                    .resize(previewSize, previewSize)\r\n                    .composite([{ \r\n                        input: Buffer.from(\r\n                            `<svg width=\"${previewSize}\" height=\"${previewSize}\">\r\n                                <radialGradient id=\"gradient\" cx=\"50%\" cy=\"50%\" r=\"75%\">\r\n                                    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\"/>\r\n                                    <stop offset=\"100%\" stop-color=\"black\" stop-opacity=\"1\"/>\r\n                                </radialGradient>\r\n                                <rect x=\"0\" y=\"0\" width=\"${previewSize}\" height=\"${previewSize}\" fill=\"url(#gradient)\" opacity=\"0.5\"/>\r\n                            </svg>`\r\n                        ), \r\n                        blend: \"multiply\" \r\n                    }])\r\n                    .toBuffer();\r\n                break;\r\n            case \"posterize\":\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).png({ quality: 10 }).toBuffer();\r\n                break;\r\n            default:\r\n                processedBuffer = await sharp(originalBuffer).resize(previewSize, previewSize).toBuffer();\r\n        }\r\n        \r\n        return {\r\n            name: `${effect}.png`,\r\n            attachment: new AttachmentBuilder(processedBuffer)\r\n        };\r\n    });\r\n\r\n    const previewAttachments = await Promise.all(previewPromises);\r\n    \r\n    const previewEmbed = new EmbedBuilder()\r\n        .setColor(\"#9B59B6\")\r\n        .setTitle(\"üé≠ Effect Previews\")\r\n        .setDescription(\"Here's a quick look at all available effects:\")\r\n        .setImage(`attachment://${previewAttachments[0].name}`)\r\n        .addFields(\r\n            { name: \"Blur\", value: \"Soft focus\", inline: true },\r\n            { name: \"Sharpen\", value: \"Enhanced details\", inline: true },\r\n            { name: \"Pixelate\", value: \"Mosaic effect\", inline: true },\r\n            { name: \"Sepia\", value: \"Vintage tone\", inline: true },\r\n            { name: \"Grayscale\", value: \"Black & white\", inline: true },\r\n            { name: \"Invert\", value: \"Negative colors\", inline: true },\r\n            { name: \"Vignette\", value: \"Darkened edges\", inline: true },\r\n            { name: \"Posterize\", value: \"Reduced colors\", inline: true }\r\n        )\r\n        .setFooter({ text: \"Select an effect from the menu to apply it to your full image\" });\r\n\r\n    await interaction.followUp({\r\n        embeds: [previewEmbed],\r\n        files: previewAttachments.map(a => a.attachment),\r\n        ephemeral: true\r\n    });\r\n    return;\r\n}\r\n\r\nexport = effectsCommand;"],"names":[],"mappings":"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","debug_id":"7bf5a45b-bbac-530e-a612-1abc7bc596a3"}