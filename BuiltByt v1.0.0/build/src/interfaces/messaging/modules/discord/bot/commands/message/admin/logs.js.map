{"version":3,"file":"logs.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/admin/logs.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, ComponentType\r\n} from \"discord.js\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst logAdminCommand: Precommand = {\r\n  name: \"logs\",\r\n  description: \"Get the logs of a user (warns, bans, kicks)\",\r\n  examples: [\"logs warns @user 3\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  aliases: [\"modlogs\"],\r\n  subcommands: [\"logs warns @user page\", \"logs bans\"],\r\n  botpermissions: [\"SendMessages\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n    const args = message.content.split(/\\s+/).slice(1); // Extrae los argumentos del mensaje\r\n    const subCommand = args[0]?.toLowerCase();\r\n    const userMention = message.mentions.users.first();\r\n    const page = parseInt(args[2]) || 1; // Página por defecto es 1 si no se proporciona\r\n\r\n    try {\r\n      switch (subCommand) {\r\n        case \"warns\":\r\n          {\r\n            if (!userMention) {\r\n              return message.channel.send({\r\n                embeds: [\r\n                  new ErrorEmbed().setDescription(\r\n                    [\r\n                      `${client.getEmoji(message.guild.id, \"error\")} User Not Found`,\r\n                      `Please mention a valid user.`,\r\n                    ].join(\"\\n\"),\r\n                  ),\r\n                ],\r\n              });\r\n            }\r\n\r\n            const userWarnings = await main.prisma.userWarn.findMany({\r\n              where: {\r\n                userId: userMention.id,\r\n                guildId: message.guild.id,\r\n              },\r\n            });\r\n\r\n            if (!userWarnings?.length) {\r\n              return message.channel.send({\r\n                embeds: [\r\n                  new ErrorEmbed()\r\n                    .setTitle(\"No Warnings Found\")\r\n                    .setDescription(\r\n                      [\r\n                        `${client.getEmoji(message.guild.id, \"error\")} No warnings found for this user.`,\r\n                        `Please check the server settings or try again later.`,\r\n                      ].join(\"\\n\"),\r\n                    ),\r\n                ],\r\n              });\r\n            }\r\n\r\n            if (page < 1 || page > Math.ceil(userWarnings.length / 5)) {\r\n              return message.channel.send({\r\n                embeds: [\r\n                  new ErrorEmbed()\r\n                    .setTitle(\"Invalid Page Number\")\r\n                    .setDescription(`The page number must be between 1 and ${Math.ceil(userWarnings.length / 5)}.`),\r\n                ],\r\n              });\r\n            }\r\n\r\n            const embed = new EmbedCorrect().setTitle(`${userMention.tag}'s Warning Logs`);\r\n            const pageNum = 5 * (page - 1);\r\n\r\n            if (userWarnings.length >= 6) {\r\n              embed.setFooter({\r\n                text: `Page ${page} of ${Math.ceil(userWarnings.length / 5)}`,\r\n              });\r\n            }\r\n\r\n            for (const warnings of userWarnings.splice(pageNum, 5)) {\r\n              const moderator = message.guild.members.cache.get(warnings.moderator);\r\n\r\n              embed.addFields({\r\n                name: `ID: ${warnings.id}`,\r\n                value: [\r\n                  `> Moderator: ${moderator || \"Moderator left\"}`,\r\n                  `> User: ${warnings.userId}`,\r\n                  `> Reason: \\`${warnings.warnReason}\\``,\r\n                  `> Date: ${warnings.warnDate}`,\r\n                ].join(\"\\n\"),\r\n              });\r\n            }\r\n\r\n            await message.channel.send({ embeds: [embed] });\r\n          }\r\n          break;\r\n\r\n        case \"bans\":\r\n          {\r\n            const bans = await message.guild.bans.fetch();\r\n            if (!bans.size) {\r\n              return message.channel.send({\r\n                embeds: [\r\n                  new ErrorEmbed()\r\n                    .setTitle(\"No Bans Found\")\r\n                    .setDescription(\r\n                      [\r\n                        `${client.getEmoji(message.guild.id, \"error\")} No bans found in this guild.`,\r\n                        `Please check the server settings or try again later.`,\r\n                      ].join(\"\\n\"),\r\n                    ),\r\n                ],\r\n              });\r\n            }\r\n\r\n            const bansArray = Array.from(bans.values());\r\n            const maxFieldsPerPage = 10; // Limite de fields por página\r\n            const totalPages = Math.ceil(bansArray.length / maxFieldsPerPage);\r\n            let currentPage = Math.min(Math.max(page, 1), totalPages);\r\n\r\n            const generateEmbed = (page: number) => {\r\n              const embed = new EmbedCorrect().setTitle(\"Bans List\");\r\n              const start = (page - 1) * maxFieldsPerPage;\r\n              const end = start + maxFieldsPerPage;\r\n\r\n              bansArray.slice(start, end).forEach((ban) => {\r\n                embed.addFields({\r\n                  name: `User: ${ban.user.tag}`,\r\n                  value: `ID: ${ban.user.id}`,\r\n                });\r\n              });\r\n\r\n              embed.setFooter({ text: `Page ${page} of ${totalPages}` });\r\n              return embed;\r\n            };\r\n\r\n            const row = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n              new ButtonBuilder()\r\n                .setCustomId(\"prev_page\")\r\n                .setLabel(\"Previous\")\r\n                .setStyle(ButtonStyle.Primary)\r\n                .setDisabled(currentPage === 1),\r\n              new ButtonBuilder()\r\n                .setCustomId(\"next_page\")\r\n                .setLabel(\"Next\")\r\n                .setStyle(ButtonStyle.Primary)\r\n                .setDisabled(currentPage === totalPages),\r\n            );\r\n\r\n            const embedMessage = await message.channel.send({\r\n              embeds: [generateEmbed(currentPage)],\r\n              components: totalPages > 1 ? [row] : [],\r\n            });\r\n\r\n            if (totalPages > 1) {\r\n              const collector = embedMessage.createMessageComponentCollector({\r\n                componentType: ComponentType.Button,\r\n                time: 60000, // 1 minuto\r\n              });\r\n\r\n              collector.on(\"collect\", async (interaction) => {\r\n                if (interaction.user.id !== message.author.id) {\r\n                  return interaction.reply({\r\n                    content: \"You cannot interact with this pagination.\",\r\n                    flags: \"Ephemeral\",\r\n                  });\r\n                }\r\n\r\n                if (interaction.customId === \"prev_page\" && currentPage > 1) {\r\n                  currentPage--;\r\n                } else if (interaction.customId === \"next_page\" && currentPage < totalPages) {\r\n                  currentPage++;\r\n                }\r\n\r\n                await interaction.update({\r\n                  embeds: [generateEmbed(currentPage)],\r\n                  components: [\r\n                    new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n                      new ButtonBuilder()\r\n                        .setCustomId(\"prev_page\")\r\n                        .setLabel(\"Previous\")\r\n                        .setStyle(ButtonStyle.Primary)\r\n                        .setDisabled(currentPage === 1),\r\n                      new ButtonBuilder()\r\n                        .setCustomId(\"next_page\")\r\n                        .setLabel(\"Next\")\r\n                        .setStyle(ButtonStyle.Primary)\r\n                        .setDisabled(currentPage === totalPages),\r\n                    ),\r\n                  ],\r\n                });\r\n\r\n                return;\r\n              });\r\n\r\n              collector.on(\"end\", () => {\r\n                embedMessage.edit({ components: [] }).catch(() => {});\r\n              });\r\n            }\r\n          }\r\n          break;\r\n\r\n        default:\r\n          message.channel.send({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setTitle(\"Invalid Subcommand\")\r\n                .setDescription(\"Please use a valid subcommand: `warns` or `bans`.\"),\r\n            ],\r\n          });\r\n          break;\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Error handling logs command:\", error);\r\n      await message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Unexpected Error\")\r\n            .setDescription(\r\n              [\r\n                `${client.getEmoji(message.guild.id, \"error\")} An unexpected error occurred.`,\r\n                `Please try again later or contact support.`,\r\n              ].join(\"\\n\"),\r\n            ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nexport = logAdminCommand;\r\n"],"names":[],"mappings":"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","debug_id":"5785904f-ebbd-556f-8fce-f0de219d5feb"}