{"version":3,"file":"mcbiome.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/minecraft/mcbiome.ts"],"sourceRoot":"/","sourcesContent":["import axios from \"axios\";\r\nimport { ActionRowBuilder, EmbedBuilder, StringSelectMenuBuilder } from \"discord.js\";\r\n\r\nimport { ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport emojis from \"@config/json/emojis.json\";\r\nimport { Pagination } from \"@discordx/pagination\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst mcbiomeCommand: Precommand = {\r\n  name: \"mcbiome\",\r\n  description: \"Show information about a Minecraft biome\",\r\n  examples: [\"mcbiome [name]\", \"mcbiome list\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  cooldown: 5,\r\n  aliases: [\"minecraftbiome\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(_client, message, args, prefix) {\r\n    try {\r\n      if (!message.guild) return;\r\n\r\n      // Fetch biomes from Mojang API\r\n      const response = await axios.get(\r\n        \"https://raw.githubusercontent.com/PrismarineJS/minecraft-data/master/data/pc/1.20/biomes.json\",\r\n      );\r\n      const biomes = response.data;\r\n\r\n      const biomeName = args.join(\" \");\r\n\r\n      if (!biomeName) {\r\n        return await showBiomeMenu(message, biomes);\r\n      }\r\n\r\n      if (biomeName.toLowerCase() === \"list\") {\r\n        return await showBiomeList(message, biomes);\r\n      }\r\n\r\n      const biome = findBiome(biomeName, biomes);\r\n\r\n      if (!biome) {\r\n        return message.reply({\r\n          embeds: [\r\n            new EmbedBuilder()\r\n              .setColor(\"Red\")\r\n              .setDescription(\r\n                `${emojis.error} Biome not found. Use \\`${prefix}mcbiome list\\` to see available biomes.`,\r\n              ),\r\n          ],\r\n        });\r\n      }\r\n\r\n      return await showBiomeDetails(message, biome);\r\n    } catch (e: any) {\r\n      return message.reply({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setFooter({\r\n              text: `Requested by: ${message.author.tag}`,\r\n              iconURL: message.author.displayAvatarURL(),\r\n            })\r\n            .setDescription(\r\n              [\r\n                `${emojis.error} An error occurred while executing this command!`,\r\n                `Please try again later or join our support server for help!`,\r\n              ].join(\"\\n\"),\r\n            )\r\n            .setErrorFormat(e.stack),\r\n        ],\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nasync function showBiomeMenu(message: any, biomes: any[]) {\r\n  const selectMenu = new ActionRowBuilder().addComponents(\r\n    new StringSelectMenuBuilder()\r\n      .setCustomId(\"biome-select\")\r\n      .setPlaceholder(\"Select a biome\")\r\n      .addOptions(\r\n        biomes.map((biome) => ({\r\n          label: biome.name,\r\n          value: biome.id.toString(),\r\n          description: biome.category,\r\n        })),\r\n      ),\r\n  );\r\n\r\n  await message.reply({\r\n    embeds: [\r\n      new EmbedBuilder()\r\n        .setColor(\"#2ECC71\")\r\n        .setTitle(\"Minecraft Biomes\")\r\n        .setDescription(\"Select a biome from the menu below\")\r\n        .setThumbnail(\"https://www.minecraft.net/content/dam/minecraft/touchup-2020/minecraft-logo.svg\"),\r\n    ],\r\n    components: [selectMenu],\r\n  });\r\n}\r\n\r\nasync function showBiomeList(message: any, biomes: any[]) {\r\n  const pages = [];\r\n  const itemsPerPage = 5;\r\n\r\n  for (let i = 0; i < biomes.length; i += itemsPerPage) {\r\n    const current = biomes.slice(i, i + itemsPerPage);\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#2ECC71\")\r\n      .setTitle(\"Minecraft Biomes List\")\r\n      .setDescription(\"Here are all available Minecraft biomes:\")\r\n      .setThumbnail(\"https://www.minecraft.net/content/dam/minecraft/touchup-2020/minecraft-logo.svg\")\r\n      .setFooter({\r\n        text: `Page ${Math.floor(i / itemsPerPage) + 1} of ${Math.ceil(biomes.length / itemsPerPage)}`,\r\n      });\r\n\r\n    current.forEach((biome) => {\r\n      embed.addFields({\r\n        name: biome.name,\r\n        value: `**Category:** ${biome.category}\\n**ID:** ${biome.id}`,\r\n        inline: true,\r\n      });\r\n    });\r\n\r\n    pages.push({ embeds: [embed] });\r\n  }\r\n\r\n  const pagination = new Pagination(message, pages);\r\n  await pagination.send();\r\n}\r\n\r\nfunction findBiome(name: string, biomes: any[]) {\r\n  const lowerName = name.toLowerCase();\r\n  return biomes.find((biome) => biome.name.toLowerCase().includes(lowerName) || biome.id === name);\r\n}\r\n\r\nasync function showBiomeDetails(message: any, biome: any) {\r\n  // Get biome image from Minecraft API\r\n  const imageUrl = `https://minecraft-api.com/api/biomes/${encodeURIComponent(biome.name)}.png`;\r\n\r\n  const embed = new EmbedBuilder()\r\n    .setColor(\"#2ECC71\")\r\n    .setTitle(`Biome: ${biome.name}`)\r\n    .setDescription(`**Category:** ${biome.category}`)\r\n    .addFields(\r\n      {\r\n        name: \"Biome Details\",\r\n        value: `**ID:** ${biome.id}\\n**Temperature:** ${biome.temperature}\\n**Has Precipitation:** ${biome.has_precipitation}\\n**Dimension:** ${biome.dimension}`,\r\n        inline: false,\r\n      },\r\n      {\r\n        name: \"Display Information\",\r\n        value: `**Display Name:** ${biome.displayName}\\n**Color Code:** ${biome.color}`,\r\n        inline: false,\r\n      },\r\n    )\r\n    .setImage(imageUrl);\r\n\r\n  await message.reply({ embeds: [embed] });\r\n}\r\n\r\nexport = mcbiomeCommand;\r\n"],"names":[],"mappings":"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","debug_id":"36582f03-ad70-5d4d-93a6-fe5425396835"}