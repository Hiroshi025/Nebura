{"version":3,"file":"reminder.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/public/reminder.ts"],"sourceRoot":"/","sourcesContent":["import { GuildMember, SlashCommandBuilder } from \"discord.js\";\r\nimport schedule from \"node-schedule\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport { isValidObjectId } from \"@/interfaces/messaging/modules/discord/structure/utils/functions\";\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setName(\"remind\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"recordar\",\r\n    })\r\n    .setDescription(\"Set a message reminder\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"Establecer un recordatorio de mensaje\",\r\n    })\r\n    .addStringOption((option) => {\r\n      return option\r\n        .setName(\"message\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"mensaje\",\r\n        })\r\n        .setDescription(\"The messaged to be reminded\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"El mensaje a recordar\",\r\n        })\r\n        .setRequired(true)\r\n        .setMaxLength(2000)\r\n        .setMinLength(10);\r\n    })\r\n    .addIntegerOption((option) => {\r\n      return option\r\n        .setName(\"time\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"tiempo\",\r\n        })\r\n        .setDescription(\"The time to send the message at. (IN MINUTES)\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"El tiempo para enviar el mensaje. (EN MINUTOS)\",\r\n        })\r\n        .setRequired(true)\r\n        .setMinValue(1);\r\n    }),\r\n  async (client, interaction) => {\r\n    const message = interaction.options.getString(\"message\");\r\n    const time = interaction.options.getInteger(\"time\");\r\n    const { guild, member } = interaction;\r\n\r\n    if (!guild || !time || !member)\r\n      return interaction.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(interaction.guildId as string, \"error\")} You need to provide a valid guild!`,\r\n              `Please use the command in a server.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n\r\n    if (!message)\r\n      return interaction.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(guild.id, \"error\")} You need to provide a message!`,\r\n              `Please use the command with a message.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n\r\n    if (time >= 525960 * 1000) {\r\n      return interaction.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(guild.id, \"error\")} You cannot set a reminder for more than \\`1 Year\\`!`,\r\n              `Please use a smaller time value.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    const timeMs = time * 60000;\r\n\r\n    const guuldIdValidate = await isValidObjectId(guild.id);\r\n    const date = new Date(new Date().getTime() + timeMs);\r\n\r\n    if (!guuldIdValidate) {\r\n      return interaction.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(guild.id, \"error\")} You need to provide a valid guild!`,\r\n              `Please use the command in a server.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    await main.prisma.reminder.create({\r\n      data: {\r\n        userId: (member as GuildMember).id,\r\n        guildId: guild.id, // almacenar como string segÃºn el esquema de Prisma\r\n        message: message,\r\n        remindAt: date,\r\n      },\r\n    });\r\n\r\n    await interaction.reply({\r\n      embeds: [\r\n        new EmbedCorrect().setTitle(`Set reminder for \\`${date.toTimeString()}\\`!`).addFields(\r\n          {\r\n            name: `${client.getEmoji(guild.id, \"clock\")} Will be sent in`,\r\n            value: `${client.getEmoji(guild.id, \"reply\")} ${time} Minute(s)`,\r\n            inline: true,\r\n          },\r\n          {\r\n            name: `${client.getEmoji(guild.id, \"message\")} Message`,\r\n            value: `${client.getEmoji(guild.id, \"reply\")} \\`${message}\\``,\r\n            inline: true,\r\n          },\r\n        ),\r\n      ],\r\n      flags: \"Ephemeral\",\r\n    });\r\n\r\n    schedule.scheduleJob(date, async () => {\r\n      // Actualizar el estado del recordatorio en la base de datos\r\n      await main.prisma.reminder.updateMany({\r\n        where: { userId: (member as GuildMember).id, guildId: guild.id, remindAt: date },\r\n        data: { isSent: true },\r\n      });\r\n\r\n      await (member as GuildMember)\r\n        .send({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(`Reminder for: ${date.toTimeString()}!`)\r\n              .setDescription(\r\n                [\r\n                  `${client.getEmoji(guild.id, \"clock\")} Reminder set for \\`${time} Minute(s)\\`!`,\r\n                  `${client.getEmoji(guild.id, \"message\")} Message: \\`${message}\\``,\r\n                ].join(\"\\n\"),\r\n              ),\r\n          ],\r\n        })\r\n        .catch(() => {});\r\n    });\r\n\r\n    return;\r\n  },\r\n  undefined,\r\n  10,\r\n  true,\r\n);\r\n"],"names":[],"mappings":";;;;;;;AAAA,2CAA8D;AAC9D,kEAAqC;AAErC,8FAA0F;AAC1F,gGAAmG;AACnG,iCAA8B;AAC9B,2EAAmF;AAEnF,kBAAe,IAAI,kBAAO,CACxB,IAAI,gCAAmB,EAAE;KACtB,OAAO,CAAC,QAAQ,CAAC;KACjB,oBAAoB,CAAC;IACpB,OAAO,EAAE,UAAU;CACpB,CAAC;KACD,cAAc,CAAC,wBAAwB,CAAC;KACxC,2BAA2B,CAAC;IAC3B,OAAO,EAAE,uCAAuC;CACjD,CAAC;KACD,eAAe,CAAC,CAAC,MAAM,EAAE,EAAE;IAC1B,OAAO,MAAM;SACV,OAAO,CAAC,SAAS,CAAC;SAClB,oBAAoB,CAAC;QACpB,OAAO,EAAE,SAAS;KACnB,CAAC;SACD,cAAc,CAAC,6BAA6B,CAAC;SAC7C,2BAA2B,CAAC;QAC3B,OAAO,EAAE,uBAAuB;KACjC,CAAC;SACD,WAAW,CAAC,IAAI,CAAC;SACjB,YAAY,CAAC,IAAI,CAAC;SAClB,YAAY,CAAC,EAAE,CAAC,CAAC;AACtB,CAAC,CAAC;KACD,gBAAgB,CAAC,CAAC,MAAM,EAAE,EAAE;IAC3B,OAAO,MAAM;SACV,OAAO,CAAC,MAAM,CAAC;SACf,oBAAoB,CAAC;QACpB,OAAO,EAAE,QAAQ;KAClB,CAAC;SACD,cAAc,CAAC,+CAA+C,CAAC;SAC/D,2BAA2B,CAAC;QAC3B,OAAO,EAAE,gDAAgD;KAC1D,CAAC;SACD,WAAW,CAAC,IAAI,CAAC;SACjB,WAAW,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,EACJ,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE;IAC5B,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACzD,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACpD,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC;IAEtC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM;QAC5B,OAAO,WAAW,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE;gBACN,IAAI,0BAAU,EAAE,CAAC,cAAc,CAC7B;oBACE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAiB,EAAE,OAAO,CAAC,qCAAqC;oBAC/F,qCAAqC;iBACtC,CAAC,IAAI,CAAC,IAAI,CAAC,CACb;aACF;SACF,CAAC,CAAC;IAEL,IAAI,CAAC,OAAO;QACV,OAAO,WAAW,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE;gBACN,IAAI,0BAAU,EAAE,CAAC,cAAc,CAC7B;oBACE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,iCAAiC;oBACtE,wCAAwC;iBACzC,CAAC,IAAI,CAAC,IAAI,CAAC,CACb;aACF;SACF,CAAC,CAAC;IAEL,IAAI,IAAI,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;QAC1B,OAAO,WAAW,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE;gBACN,IAAI,0BAAU,EAAE,CAAC,cAAc,CAC7B;oBACE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,sDAAsD;oBAC3F,kCAAkC;iBACnC,CAAC,IAAI,CAAC,IAAI,CAAC,CACb;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;IAE5B,MAAM,eAAe,GAAG,MAAM,IAAA,2BAAe,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACxD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC;IAErD,IAAI,CAAC,eAAe,EAAE,CAAC;QACrB,OAAO,WAAW,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE;gBACN,IAAI,0BAAU,EAAE,CAAC,cAAc,CAC7B;oBACE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,qCAAqC;oBAC1E,qCAAqC;iBACtC,CAAC,IAAI,CAAC,IAAI,CAAC,CACb;aACF;SACF,CAAC,CAAC;IACL,CAAC;IAED,MAAM,WAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,IAAI,EAAE;YACJ,MAAM,EAAG,MAAsB,CAAC,EAAE;YAClC,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,mDAAmD;YACtE,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;SACf;KACF,CAAC,CAAC;IAEH,MAAM,WAAW,CAAC,KAAK,CAAC;QACtB,MAAM,EAAE;YACN,IAAI,4BAAY,EAAE,CAAC,QAAQ,CAAC,sBAAsB,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,SAAS,CACnF;gBACE,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,kBAAkB;gBAC7D,KAAK,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,IAAI,YAAY;gBAChE,MAAM,EAAE,IAAI;aACb,EACD;gBACE,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,UAAU;gBACvD,KAAK,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,OAAO,IAAI;gBAC7D,MAAM,EAAE,IAAI;aACb,CACF;SACF;QACD,KAAK,EAAE,WAAW;KACnB,CAAC,CAAC;IAEH,uBAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QACpC,4DAA4D;QAC5D,MAAM,WAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpC,KAAK,EAAE,EAAE,MAAM,EAAG,MAAsB,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;YAChF,IAAI,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;SACvB,CAAC,CAAC;QAEH,MAAO,MAAsB;aAC1B,IAAI,CAAC;YACJ,MAAM,EAAE;gBACN,IAAI,4BAAY,EAAE;qBACf,QAAQ,CAAC,iBAAiB,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC;qBACjD,cAAc,CACb;oBACE,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,uBAAuB,IAAI,eAAe;oBAC/E,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,eAAe,OAAO,IAAI;iBAClE,CAAC,IAAI,CAAC,IAAI,CAAC,CACb;aACJ;SACF,CAAC;aACD,KAAK,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,OAAO;AACT,CAAC,EACD,SAAS,EACT,EAAE,EACF,IAAI,CACL,CAAC","debug_id":"c7dbc1c5-9660-52f7-a9dc-03529291726c"}