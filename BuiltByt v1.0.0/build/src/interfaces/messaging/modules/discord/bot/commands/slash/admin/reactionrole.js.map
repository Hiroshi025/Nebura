{"version":3,"file":"reactionrole.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/admin/reactionrole.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, EmbedBuilder, PermissionFlagsBits,\r\n\tSlashCommandBuilder\r\n} from \"discord.js\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport { main } from \"@/main\";\r\nimport { ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { clientID } from \"@/shared/class/DB\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setName(\"reactionrole\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"rol-reaccion\",\r\n    })\r\n    .setDescription(\"Configure reaction roles for your server.\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"Configura roles de reacci√≥n para tu servidor.\",\r\n    })\r\n    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),\r\n  async (client, interaction) => {\r\n    try {\r\n      if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n      const guildId = interaction.guild.id;\r\n\r\n      const dataClient = await main.DB.findClient(clientID);\r\n      if (!dataClient || dataClient.maintenance) {\r\n        return interaction.reply({\r\n          embeds: [\r\n            new ErrorEmbed()\r\n              .setTitle(\"Maintenance Mode\")\r\n              .setDescription(\"The bot is currently under maintenance. Please try again later.\"),\r\n          ],\r\n        });\r\n      }\r\n\r\n      // Initial embed for configuration\r\n      const embed = new EmbedBuilder()\r\n        .setTitle(\"üé≠ Reaction Role Configuration\")\r\n        .setDescription(\"Please provide the ID of the message where you want to configure reaction roles.\")\r\n        .setColor(\"Blue\")\r\n        .setFooter({ text: \"You can cancel at any time using the cancel button.\" });\r\n\r\n      const cancelButton = new ButtonBuilder()\r\n        .setCustomId(\"cancel-reactionrole\")\r\n        .setLabel(\"‚ùå Cancel\")\r\n        .setStyle(ButtonStyle.Danger);\r\n\r\n      const row = new ActionRowBuilder<ButtonBuilder>().addComponents(cancelButton);\r\n\r\n      const statusMessage = await interaction.reply({\r\n        embeds: [embed],\r\n        components: [row],\r\n        flags: \"Ephemeral\",\r\n      });\r\n\r\n      let messageId: string | null = null;\r\n      let reactionRoles: { emoji: string; roleId: string }[] = [];\r\n      let removeOthers = false;\r\n\r\n      const updateEmbed = async (description: string) => {\r\n        embed.setDescription(description);\r\n        await statusMessage.edit({ embeds: [embed] });\r\n      };\r\n\r\n      const collector = interaction.channel?.createMessageComponentCollector({\r\n        time: 60000,\r\n      });\r\n\r\n      collector?.on(\"collect\", async (componentInteraction) => {\r\n        if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n        if (componentInteraction.user.id !== interaction.user.id) {\r\n          return componentInteraction.reply({\r\n            content: `${client.getEmoji(interaction.guild.id, \"error\")} You cannot interact with this configuration.`,\r\n            flags: \"Ephemeral\",\r\n          });\r\n        }\r\n\r\n        if (componentInteraction.customId === \"cancel-reactionrole\") {\r\n          await componentInteraction.update({\r\n            content: `${client.getEmoji(interaction.guild.id, \"error\")} Reaction role configuration canceled.`,\r\n            embeds: [],\r\n            components: [],\r\n          });\r\n          collector.stop();\r\n          return;\r\n        }\r\n\r\n        return;\r\n      });\r\n\r\n      // Step 2: Collect the message ID\r\n      const messageCollector = interaction.channel?.createMessageCollector({\r\n        filter: (msg) => msg.author.id === interaction.user.id,\r\n        time: 60000,\r\n      });\r\n\r\n      messageCollector?.on(\"collect\", async (msg) => {\r\n        if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n        try {\r\n          if (!messageId) {\r\n            messageId = msg.content;\r\n            await msg.delete();\r\n\r\n            await updateEmbed(\r\n              \"Now, react to this message with the emoji you want to use for the reaction role. Then, mention the role to assign.\",\r\n            );\r\n          } else {\r\n            const role = msg.mentions.roles.first();\r\n            if (!role) {\r\n              await msg.reply(`${client.getEmoji(interaction.guild.id, \"error\")} Please mention a valid role.`);\r\n              return;\r\n            }\r\n\r\n            const lastReaction = msg.reactions.cache.last();\r\n            if (!lastReaction || !lastReaction.emoji.name) {\r\n              await msg.reply(`${client.getEmoji(interaction.guild.id, \"error\")} Please react with a valid emoji.`);\r\n              return;\r\n            }\r\n\r\n            reactionRoles.push({ emoji: lastReaction.emoji.name, roleId: role.id });\r\n            await msg.delete();\r\n\r\n            await updateEmbed(\r\n              `${client.getEmoji(interaction.guild.id, \"correct\")} Reaction role added: ${lastReaction.emoji.name} -> ${role.name}\\n\\nReact with another emoji or type \\`done\\` to finish.`,\r\n            );\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n          await msg.reply(\r\n            `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while processing your message.`,\r\n          );\r\n        }\r\n      });\r\n\r\n      messageCollector?.on(\"end\", async () => {\r\n        if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n        if (reactionRoles.length === 0) {\r\n          await interaction.editReply({\r\n            content: `${client.getEmoji(interaction.guild.id, \"error\")} No reaction roles were configured.`,\r\n            embeds: [],\r\n            components: [],\r\n          });\r\n          return;\r\n        }\r\n\r\n        await updateEmbed(\"Do you want to allow multiple roles or restrict to one role per user?\");\r\n\r\n        const multipleButton = new ButtonBuilder()\r\n          .setCustomId(\"multiple-roles\")\r\n          .setLabel(\"Allow Multiple Roles\")\r\n          .setStyle(ButtonStyle.Primary);\r\n\r\n        const singleButton = new ButtonBuilder()\r\n          .setCustomId(\"single-role\")\r\n          .setLabel(\"Restrict to One Role\")\r\n          .setStyle(ButtonStyle.Secondary);\r\n\r\n        const row = new ActionRowBuilder<ButtonBuilder>().addComponents(multipleButton, singleButton);\r\n\r\n        await interaction.editReply({\r\n          embeds: [embed],\r\n          components: [row],\r\n        });\r\n\r\n        const roleCollector = interaction.channel?.createMessageComponentCollector({\r\n          time: 60000,\r\n        });\r\n\r\n        roleCollector?.on(\"collect\", async (componentInteraction) => {\r\n          if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n          if (componentInteraction.user.id !== interaction.user.id) {\r\n            return componentInteraction.reply({\r\n              content: `${client.getEmoji(interaction.guild.id, \"error\")} You cannot interact with this configuration.`,\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n\r\n          if (componentInteraction.customId === \"multiple-roles\") {\r\n            removeOthers = false;\r\n          } else if (componentInteraction.customId === \"single-role\") {\r\n            removeOthers = true;\r\n          }\r\n\r\n          try {\r\n            await main.prisma.reactionRole.create({\r\n              data: {\r\n                guildId,\r\n                messageId: messageId!,\r\n                removeOthers,\r\n                parameters: reactionRoles,\r\n              },\r\n            });\r\n\r\n            await componentInteraction.update({\r\n              content: `${client.getEmoji(interaction.guild.id, \"correct\")} Reaction roles configured successfully!`,\r\n              embeds: [],\r\n              components: [],\r\n            });\r\n          } catch (error) {\r\n            console.error(error);\r\n            await componentInteraction.update({\r\n              content: `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while saving the configuration.`,\r\n              embeds: [],\r\n              components: [],\r\n            });\r\n          }\r\n\r\n          return;\r\n        });\r\n      });\r\n    } catch (error) {\r\n      if (!interaction.guild || !interaction.channel || interaction.channel.type !== ChannelType.GuildText) return;\r\n\r\n      console.error(error);\r\n      await interaction.reply({\r\n        content: `${client.getEmoji(interaction.guild.id, \"error\")} An unexpected error occurred while executing the command.`,\r\n        flags: \"Ephemeral\",\r\n      });\r\n    }\r\n\r\n    return;\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"abdf4f0b-cc30-511d-9da2-21d565208d1e"}