{"version":3,"file":"conversor.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/utilities/conversor.ts"],"sourceRoot":"/","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport axios from \"axios\";\r\nimport {\r\n\tActionRowBuilder, ChannelType, Interaction, StringSelectMenuBuilder,\r\n\tStringSelectMenuInteraction, StringSelectMenuOptionBuilder, TextChannel\r\n} from \"discord.js\";\r\n\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport currency from \"@config/json/coins.json\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst precommandConversor: Precommand = {\r\n  name: \"conversor\",\r\n  description: \"Converts a currency to another currency\",\r\n  examples: [\"conversor 100\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  cooldown: 5,\r\n  aliases: [\"converter\", \"currency\"],\r\n  botpermissions: [\"SendMessages\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message, args, prefix) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText || !client.user) return;\r\n    const structure =\r\n      \"__How to use the command:__ `\" +\r\n      prefix +\r\n      \"converter [number]`\\n\" +\r\n      \"```js\\n\" +\r\n      \"[] -> Required\\n\" +\r\n      \"() -> Optional\\n\" +\r\n      \"{} -> Clarification\\n\" +\r\n      \"```\";\r\n\r\n    const moneda = args.join(\" \");\r\n    if (!moneda || isNaN(Number(moneda)))\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Error - Missing Arguments\")\r\n            .setDescription(\r\n              [\r\n                `${client.getEmoji(message.guild.id, \"error\")} Please provide an amount to convert.`,\r\n                `**Usage:** \\`${prefix}conversor <amount>\\`\\n`,\r\n                structure,\r\n              ].join(\"\\n\"),\r\n            ),\r\n        ],\r\n      });\r\n\r\n    const monedas: any = currency;\r\n\r\n    // Validate that currencies are configured\r\n    if (!monedas || Object.keys(monedas).length === 0) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Error - No currencies available\")\r\n            .setDescription(\"No currencies are configured in the system. Please contact an administrator.\"),\r\n        ],\r\n      });\r\n    }\r\n\r\n    const panel1 = new EmbedCorrect()\r\n      .setTitle(`üí∂ **Currency converter** üíµ`)\r\n      .setDescription(`What is the source currency of your money?\\nSelect the currency you want to convert from.`)\r\n      .setColor(`#F7F9F7`)\r\n      .setTimestamp();\r\n\r\n    const menu = new StringSelectMenuBuilder()\r\n      .setCustomId(\"menu-conversor1\")\r\n      .setPlaceholder(`üí∑ Choose the source currency:`);\r\n\r\n    for (const i in monedas)\r\n      menu.addOptions(\r\n        new StringSelectMenuOptionBuilder()\r\n          .setValue(`${i}`)\r\n          .setLabel(`${monedas[i][1]} (${i})`)\r\n          .setDescription(`${monedas[i][0]}`)\r\n          .setEmoji(`${monedas[i][2]}`),\r\n      );\r\n\r\n    const menu1 = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu);\r\n    const msg1 = await message.channel.send({ embeds: [panel1], components: [menu1] });\r\n    const respuesta1: any = await new Promise((resolve) => {\r\n      const filter1 = (menu1: Interaction) => menu1.user.id === message.author.id;\r\n      const collector1 = msg1.createMessageComponentCollector({ filter: filter1, time: 60000 });\r\n      collector1.on(\"collect\", async (menu1: StringSelectMenuInteraction) => {\r\n        const eleccion = menu1.values[0];\r\n        resolve(eleccion);\r\n        menu1.deferUpdate();\r\n        collector1.stop();\r\n      });\r\n      collector1.on(\"end\", (_collected, reason) => {\r\n        if (reason === \"time\") resolve(\"timeout\");\r\n        else resolve(null);\r\n      });\r\n    });\r\n\r\n    if (!respuesta1 || respuesta1 === \"timeout\") {\r\n      await msg1.edit({\r\n        embeds: [panel1.setDescription(\"‚è∞ The time to select the source currency has expired. Please try again.\")],\r\n        components: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Validate that the source currency exists\r\n    if (!monedas[respuesta1]) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} The selected source currency does not exist.`,\r\n              `Please select a valid currency.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    // RESPONSE 2\r\n    const panel2 = new EmbedCorrect()\r\n      .setDescription(`To which currency do you want to convert your money?\\nSelect the target currency.`)\r\n      .setColor(`#F7F9F7`)\r\n      .setTimestamp();\r\n\r\n    const menu_2 = new StringSelectMenuBuilder()\r\n      .setCustomId(\"menu-conversor2\")\r\n      .setPlaceholder(`üí¥ Choose the target currency:`);\r\n    for (const i in monedas)\r\n      menu_2.addOptions(\r\n        new StringSelectMenuOptionBuilder()\r\n          .setValue(`${i}`)\r\n          .setLabel(`${monedas[i][1]} (${i})`)\r\n          .setDescription(`${monedas[i][0]}`)\r\n          .setEmoji(`${monedas[i][2]}`),\r\n      );\r\n\r\n    const menu2 = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu_2);\r\n    const msg2 = await message.channel.send({ embeds: [panel2], components: [menu2] });\r\n    const respuesta2: any = await new Promise((resolve, _reject) => {\r\n      const filter2 = (menu2: Interaction) => menu2.user.id === message.author.id;\r\n      const collector2 = msg2.createMessageComponentCollector({ filter: filter2, time: 60000 });\r\n      collector2.on(\"collect\", async (menu2: StringSelectMenuInteraction) => {\r\n        if (!message.guild) return;\r\n        const eleccion = menu2.values[0];\r\n        if (eleccion === respuesta1)\r\n          return (message.channel as TextChannel).send({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setDescription(\r\n                  [\r\n                    `${client.getEmoji(message.guild.id, \"error\")} You cannot convert the same currency to itself...`,\r\n                    `Please choose another target currency.`,\r\n                  ].join(\"\\n\"),\r\n                )\r\n                .setColor(`#F7F9F7`),\r\n            ],\r\n          });\r\n        else {\r\n          resolve(eleccion);\r\n          collector2.stop();\r\n        }\r\n        menu2.deferUpdate();\r\n        return;\r\n      });\r\n      collector2.on(\"end\", (_collected, reason) => {\r\n        if (reason === \"time\") resolve(\"timeout\");\r\n        else resolve(null);\r\n      });\r\n    });\r\n\r\n    if (!respuesta2 || respuesta2 === \"timeout\") {\r\n      await msg2.edit({\r\n        embeds: [panel2.setDescription(\"‚è∞ The time to select the target currency has expired. Please try again.\")],\r\n        components: [],\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Validate that the target currency exists\r\n    if (!monedas[respuesta2]) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} The selected target currency does not exist.`,\r\n              `Please select a valid currency.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    // API request with error handling\r\n    let json;\r\n    try {\r\n      json = await axios({\r\n        method: \"GET\",\r\n        url: `http://www.floatrates.com/daily/${respuesta1}.json`,\r\n        timeout: 10000,\r\n      });\r\n    } catch (err: any) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Connection error\")\r\n            .setDescription(\r\n              [\r\n                `${client.getEmoji(message.guild.id, \"error\")} Could not retrieve the exchange rate.`,\r\n                `Check your connection or try again later.`,\r\n                err.code ? `\\`Error: ${err.code}\\`` : \"\",\r\n              ]\r\n                .filter(Boolean)\r\n                .join(\"\\n\"),\r\n            ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (!json || json.status !== 200) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} Could not retrieve the exchange rate.`,\r\n              `The conversion API did not respond correctly.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n    // Convert the json to an object\r\n    const data = JSON.parse(JSON.stringify(json.data));\r\n\r\n    const currencyData = data[respuesta2.toLowerCase()];\r\n    if (!currencyData || currencyData.rate === false) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setDescription(\r\n              [\r\n                `${client.getEmoji(message.guild.id, \"error\")} The target currency is not available in the API.`,\r\n                `Please choose another currency.`,\r\n              ].join(\"\\n\"),\r\n            )\r\n            .setColor(`#F7F9F7`),\r\n        ],\r\n      });\r\n    }\r\n\r\n    await message.channel.send({\r\n      embeds: [\r\n        new EmbedCorrect()\r\n          .setTitle(`${monedas[respuesta1][2]} ‚áå ${monedas[respuesta2][2]}`)\r\n          .setDescription(\r\n            [\r\n              `üí± **${moneda} ${monedas[respuesta1][1]}** equals:`,\r\n              `**${((moneda as any) * data[respuesta2.toLowerCase()].rate).toFixed(2)} ${monedas[respuesta2][1]}**`,\r\n              `\\n_Exchange rate updated automatically._`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n      ],\r\n    });\r\n\r\n    return;\r\n  },\r\n};\r\nexport = precommandConversor;\r\n"],"names":[],"mappings":"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","debug_id":"a3c2f6a8-7e19-54d4-aad3-6d32c5d10bc4"}