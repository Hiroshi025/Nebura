{"version":3,"file":"messageCreate.js","sources":["src/interfaces/messaging/modules/discord/bot/events/client/messageCreate.ts"],"sourceRoot":"/","sourcesContent":["import { ColorResolvable, TextChannel } from \"discord.js\";\r\n\r\nimport {\r\n\tcountMessage, createGuild, createUser, Economy\r\n} from \"@/interfaces/messaging/modules/discord/structure/utils/functions\";\r\nimport { client, main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { config } from \"@/shared/utils/config\";\r\nimport { Ranking } from \"@modules/discord/structure/utils/ranking/helpers\";\r\nimport { ButtonFormat, Fields, Precommand } from \"@typings/modules/discord\";\r\n\r\nimport { Event } from \"../../../structure/utils/builders\";\r\n\r\nfunction escapeRegex(str: string) {\r\n  try {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, `\\\\$&`);\r\n  } catch (e: any) {\r\n    console.log(String(e.stack));\r\n    return str;\r\n  }\r\n}\r\n\r\nexport default new Event(\"messageCreate\", async (message) => {\r\n  if (!message.guild || !message.channel || message.author.bot || !client.user) return;\r\n  await countMessage(message.author.id, message.guild.id, message);\r\n  await createGuild(message.guild.id, client);\r\n  await createUser(message.author.id);\r\n  //await Asistent(message, client);\r\n  await Ranking(message, client);\r\n  await Economy(message);\r\n\r\n  const guildData = await main.prisma.myGuild.findFirst({ where: { guildId: message.guild.id } });\r\n  const dataPrefix = guildData?.prefix ? guildData.prefix : config.modules.discord.prefix;\r\n  const prefixRegex = new RegExp(`^(<@!?${client.user.id}>|${escapeRegex(dataPrefix)})\\\\s*`);\r\n  //if its not that then return\r\n  if (!prefixRegex.test(message.content)) return;\r\n  //now define the right prefix either ping or not ping\r\n  const match = message.content.match(prefixRegex);\r\n  if (!match) return;\r\n  const [, matchedPrefix] = match;\r\n\r\n  const language: string = message.guild.preferredLocale;\r\n  if (!message.content.startsWith(matchedPrefix)) return;\r\n\r\n  const data = await main.prisma.userDiscord.findFirst({\r\n    where: {\r\n      userId: message.author.id,\r\n    },\r\n  });\r\n\r\n  const clientData = await main.DB.findDiscord(client.user.id);\r\n\r\n  if (!clientData)\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Error Client Data\")\r\n          .setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} The bot is not set up in this server.`,\r\n              `Use the command \\`${matchedPrefix}setup\\` to set up the bot.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n      ],\r\n    });\r\n\r\n  const args: string[] = message.content.slice(matchedPrefix.length).trim().split(/ +/);\r\n  const cmd: string = args.shift()?.toLowerCase() ?? \"\";\r\n  if (!cmd || !data) return;\r\n\r\n  const command: Precommand | undefined =\r\n    (client.precommands.get(cmd) as Precommand) ||\r\n    (client.precommands.find((c) => (c as Precommand)?.aliases?.includes(cmd)) as Precommand);\r\n\r\n  if (!command) {\r\n    const data = await main.prisma.command.findFirst({\r\n      where: {\r\n        name: cmd,\r\n        guildId: message.guild.id,\r\n      },\r\n    });\r\n\r\n    if (!data || !data.isEnabled) return;\r\n\r\n    if (data.embed) {\r\n      const embed = new EmbedCorrect()\r\n        .setTitle(data.embedTitle || data.name)\r\n        .setDescription(data.response || \"Sin respuesta configurada.\")\r\n        .setColor((data.embedColor as ColorResolvable) || \"Red\");\r\n\r\n      if (data.embedFooter) {\r\n        embed.setFooter({\r\n          text: data.embedFooter,\r\n          iconURL: client.user?.displayAvatarURL(),\r\n        });\r\n      } else {\r\n        embed.setFooter({\r\n          text: `${data.isEnabled ? \"Enabled\" : \"Disabled\"} | ${data.name}`,\r\n          iconURL: client.user?.displayAvatarURL(),\r\n        });\r\n      }\r\n\r\n      if (data.embedImage) embed.setImage(data.embedImage);\r\n      if (data.embedThumbnail) embed.setThumbnail(data.embedThumbnail);\r\n      if (data.embedAuthor) {\r\n        embed.setAuthor({\r\n          name: data.embedAuthor,\r\n          iconURL: client.user?.displayAvatarURL(),\r\n        });\r\n      }\r\n\r\n      // Botones (si existen)\r\n      let components = [];\r\n      if (data.buttons && Array.isArray(data.buttons) && data.buttons.length > 0) {\r\n        const { ActionRowBuilder, ButtonBuilder, ButtonStyle } = require(\"discord.js\");\r\n        const row = new ActionRowBuilder();\r\n        // Ensure each button is an object with the expected properties\r\n        const buttons = data.buttons as unknown as ButtonFormat[];\r\n        buttons.forEach((button) => {\r\n          if (\r\n            button &&\r\n            typeof button === \"object\" &&\r\n            button.label &&\r\n            button.style &&\r\n            ((button.style === \"LINK\" && button.url) || (button.style !== \"LINK\" && button.customId))\r\n          ) {\r\n            const btn = new ButtonBuilder()\r\n              .setLabel(button.label)\r\n              .setStyle(ButtonStyle[button.style as keyof typeof ButtonStyle]);\r\n            if (button.style === \"LINK\") {\r\n              btn.setURL(button.url);\r\n            } else {\r\n              btn.setCustomId(button.customId);\r\n            }\r\n            row.addComponents(btn);\r\n          }\r\n        });\r\n        components.push(row);\r\n      }\r\n\r\n      if (data.fields && Array.isArray(data.fields) && data.fields.length > 0) {\r\n        (data.fields as unknown as Fields[]).forEach((field: Fields) => {\r\n          if (!field) return;\r\n          if (field.name && field.value) {\r\n            embed.addFields({\r\n              name: field.name,\r\n              value: field.value,\r\n              inline: field.inline || false,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      return message.channel.send({\r\n        embeds: [embed],\r\n        components,\r\n        allowedMentions: { repliedUser: false },\r\n        files: data.file ? [data.file] : [],\r\n      });\r\n    }\r\n\r\n    // Si no es embed, pero puede tener archivo adjunto\r\n    return message.channel.send({\r\n      content: data.response as string,\r\n      allowedMentions: { repliedUser: false },\r\n      files: data.file ? [data.file] : [],\r\n    });\r\n  }\r\n  try {\r\n    if (command.owner && !clientData.owners.includes(message.author.id)) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} You do not have permission to use this command as it is reserved for the bot owner.`,\r\n              `If you believe this is a mistake, please contact the bot owner.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (command.maintenance) {\r\n      if (!clientData.owners.includes(message.author.id)) {\r\n        return message.channel.send({\r\n          embeds: [\r\n            new ErrorEmbed().setDescription(\r\n              [\r\n                `${client.getEmoji(message.guild.id, \"error\")} This command is currently under maintenance.`,\r\n                `Command Name: \\`${command.name}\\``,\r\n                `Description: ${command.description || \"No description available.\"}`,\r\n              ].join(\"\\n\"),\r\n            ),\r\n          ],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (command.nsfw && !(message.channel as TextChannel).nsfw) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} You can only use this command in a NSFW channel.`,\r\n              `If you believe this is a mistake, please contact the server staff.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (command.permissions && !message.member?.permissions.has(command.permissions)) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} You do not have permission to use this command.`,\r\n              `If you believe this is a mistake, please contact the server staff.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (command.botpermissions && !message.guild.members.me?.permissions.has(command.botpermissions)) {\r\n      return message.channel.send({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\r\n            [\r\n              `${client.getEmoji(message.guild.id, \"error\")} I do not have permission to execute this command.`,\r\n              `If you believe this is a mistake, please contact the server staff.`,\r\n            ].join(\"\\n\"),\r\n          ),\r\n        ],\r\n      });\r\n    }\r\n\r\n    /*    if (command.cooldown) {\r\n      const cooldown =\r\n        (client.cooldown.get(command.name) as Map<string, number>) || new Map<string, number>();\r\n      const now = Date.now();\r\n      const cooldownAmount = command.cooldown * 1000;\r\n\r\n      if (cooldown.has(message.author.id)) {\r\n        const expirationTime = cooldown.get(message.author.id)! + cooldownAmount;\r\n        if (now < expirationTime) {\r\n          const timeLeft = Math.round((expirationTime - now) / 1000);\r\n          return message.channel.send({\r\n            embeds: [\r\n              new ErrorEmbed().setDescription(\r\n                [\r\n                  `${client.getEmoji(message.guild.id, \"error\")} You are on cooldown for this command.`,\r\n                  `Please wait ${timeLeft} seconds before using it again.`,\r\n                ].join(\"\\n\"),\r\n              ),\r\n            ],\r\n          });\r\n        }\r\n      }\r\n\r\n      cooldown.set(message.author.id, now);\r\n      client.cooldown.set(command.name, cooldown);\r\n    } */\r\n\r\n    await command.execute(client, message, args, matchedPrefix, language, config);\r\n    try {\r\n      const guildId = message.guild.id;\r\n      const commandName = command.name;\r\n      const guildData = await main.prisma.myGuild.findFirst({ where: { guildId } });\r\n      if (guildData) {\r\n        const usage = (guildData.commandUsage as Record<string, number>) || {};\r\n        usage[commandName] = (usage[commandName] || 0) + 1;\r\n        await main.prisma.myGuild.update({\r\n          where: { id: guildData.id },\r\n          data: { commandUsage: usage },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.debug(\"[DEBUG] Error updating command usage:\", err);\r\n    }\r\n  } catch (error: any) {\r\n    const errorEmbed = new ErrorEmbed().setError(true).setTitle(\"Command Execution Error\").setErrorFormat(error);\r\n\r\n    await message.channel.send({ embeds: [errorEmbed] });\r\n  }\r\n\r\n  return;\r\n});\r\n"],"names":[],"mappings":"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","debug_id":"379058af-85e6-569f-8ebe-be132fcb52c7"}