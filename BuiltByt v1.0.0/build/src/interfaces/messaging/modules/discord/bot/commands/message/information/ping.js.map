{"version":3,"file":"ping.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/information/ping.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, ComponentType, EmbedBuilder\r\n} from \"discord.js\";\r\n\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst commandPing: Precommand = {\r\n  name: \"ping\",\r\n  description: \"Shows the bot and Discord API latency\",\r\n  examples: [\"ping\", \"pong\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  aliases: [\"pong\", \"latency\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText)\r\n      return;\r\n\r\n    const sent = await message.reply({\r\n      embeds: [\r\n        new EmbedBuilder()\r\n          .setTitle(\"üèì Pong!\")\r\n          .setDescription(\"Calculating latency...\")\r\n          .setColor(0x5865f2),\r\n      ],\r\n    });\r\n\r\n    const latency = sent.createdTimestamp - message.createdTimestamp;\r\n    const apiLatency = Math.round(client.ws.ping);\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setTitle(\"üèì Pong!\")\r\n      .setColor(0x5865f2)\r\n      .addFields(\r\n        { name: \"Bot Latency\", value: `\\`${latency}ms\\``, inline: true },\r\n        { name: \"API Latency\", value: `\\`${apiLatency}ms\\``, inline: true },\r\n      )\r\n      .setFooter({ text: \"Click 'Refresh' to update the latency.\" });\r\n\r\n    const buttons = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n      new ButtonBuilder()\r\n        .setCustomId(\"refresh_ping\")\r\n        .setLabel(\"Refresh\")\r\n        .setStyle(ButtonStyle.Primary)\r\n        .setEmoji(\"üîÑ\"),\r\n    );\r\n\r\n    await sent.edit({ embeds: [embed], components: [buttons] });\r\n\r\n    const collector = sent.createMessageComponentCollector({\r\n      componentType: ComponentType.Button,\r\n      time: 60000,\r\n    });\r\n\r\n    collector.on(\"collect\", async (interaction) => {\r\n      if (interaction.customId === \"refresh_ping\") {\r\n        await interaction.deferUpdate();\r\n        const newLatency = Date.now() - message.createdTimestamp;\r\n        const newApiLatency = Math.round(client.ws.ping);\r\n\r\n        const refreshedEmbed = new EmbedBuilder()\r\n          .setTitle(\"üèì Pong!\")\r\n          .setColor(0x5865f2)\r\n          .addFields(\r\n            { name: \"Bot Latency\", value: `\\`${newLatency}ms\\``, inline: true },\r\n            { name: \"API Latency\", value: `\\`${newApiLatency}ms\\``, inline: true },\r\n          )\r\n          .setFooter({ text: \"Click 'Refresh' to update the latency.\" });\r\n\r\n        await interaction.editReply({ embeds: [refreshedEmbed], components: [buttons] });\r\n      }\r\n    });\r\n\r\n    collector.on(\"end\", () => {\r\n      sent.edit({ components: [] }).catch(() => {});\r\n    });\r\n  },\r\n};\r\n\r\nexport = commandPing;\r\n"],"names":[],"mappings":"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","debug_id":"ce4df40f-d2b8-5f52-b23a-49bdd2d396ee"}