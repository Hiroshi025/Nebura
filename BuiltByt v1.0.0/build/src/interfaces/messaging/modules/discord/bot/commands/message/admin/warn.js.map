{"version":3,"file":"warn.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/admin/warn.ts"],"sourceRoot":"/","sourcesContent":["import { ChannelType, TextChannel } from \"discord.js\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst warnAdminCommand: Precommand = {\r\n  name: \"warn\",\r\n  description: \"Warn a member via text commands!\",\r\n  examples: [\"warn add @user reason\", \"warn remove warn_id\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  subcommands: [\"warn add @user reason\", \"warn remove warnId\"],\r\n  botpermissions: [\"ModerateMembers\"],\r\n  permissions: [\"ModerateMembers\"],\r\n  async execute(client, message, args) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n    const subCommand = args[0];\r\n    if (!subCommand || ![\"add\", \"remove\"].includes(subCommand)) {\r\n      return message.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setDescription(\"Invalid subcommand. Use `warn add @user reason` or `warn remove warn_id`.\"),\r\n        ],\r\n      });\r\n    }\r\n\r\n    switch (subCommand) {\r\n      case \"add\": {\r\n        const user = message.mentions.users.first();\r\n        const reason = args.slice(2).join(\" \") || \"No reason provided\";\r\n        const warnTime = new Date().toISOString();\r\n\r\n        if (!user) {\r\n          return message.reply({\r\n            embeds: [new ErrorEmbed().setDescription(\"You must mention a user to warn.\")],\r\n          });\r\n        }\r\n\r\n        await main.prisma.userWarn.create({\r\n          data: {\r\n            guildId: message.guild.id,\r\n            userId: user.id,\r\n            warnReason: reason,\r\n            moderator: message.author.id,\r\n            warnDate: warnTime,\r\n          },\r\n        });\r\n\r\n        message.reply({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"User Warned!\")\r\n              .setDescription(`<@${user.id}> has been warned for \\`${reason}\\`.`),\r\n          ],\r\n        });\r\n\r\n        const modData = await main.prisma.serverModlog.findFirst({\r\n          where: { guildId: message.guild.id },\r\n        });\r\n        const data = await main.prisma.userWarn.findFirst({\r\n          where: {\r\n            guildId: message.guild.id,\r\n            userId: user.id,\r\n          },\r\n        });\r\n\r\n        if (modData) {\r\n          const channel = client.channels.cache.get(modData.channelId);\r\n          if (channel && channel.type === ChannelType.GuildText) {\r\n            channel.send({\r\n              embeds: [\r\n                new EmbedCorrect()\r\n                  .setTitle(\"New User Warned\")\r\n                  .addFields(\r\n                    { name: \"User Warned\", value: `<@${user.id}>`, inline: true },\r\n                    { name: \"Warned By\", value: `<@${message.author.id}>`, inline: true },\r\n                    { name: \"Warned At\", value: `${warnTime}`, inline: true },\r\n                    { name: \"Warn ID\", value: `\\`${data?.id || \"No ID\"}\\``, inline: true },\r\n                    { name: \"Warn Reason\", value: `\\`\\`\\`${reason}\\`\\`\\`` },\r\n                  ),\r\n              ],\r\n            });\r\n          }\r\n        }\r\n\r\n        user\r\n          .send({\r\n            embeds: [\r\n              new EmbedCorrect()\r\n                .setTitle(`You have been warned in: ${message.guild.name}`)\r\n                .addFields(\r\n                  { name: \"Warned For\", value: `\\`${reason}\\``, inline: true },\r\n                  { name: \"Warned At\", value: `${warnTime}`, inline: true },\r\n                )\r\n                .setColor(\"#2f3136\"),\r\n            ],\r\n          })\r\n          .catch(() => {\r\n            (message.channel as TextChannel).send({\r\n              embeds: [\r\n                new ErrorEmbed()\r\n                  .setTitle(\"DM Notification Failed\")\r\n                  .setDescription(\"The user has DMs disabled, so no notification was sent.\"),\r\n              ],\r\n            });\r\n          });\r\n        break;\r\n      }\r\n\r\n      case \"remove\": {\r\n        const warnId = args[1];\r\n        if (!warnId) {\r\n          return message.reply({\r\n            embeds: [new ErrorEmbed().setDescription(\"You must provide a warn ID to remove.\")],\r\n          });\r\n        }\r\n\r\n        const data = await main.prisma.userWarn.findUnique({ where: { id: warnId } });\r\n\r\n        if (!data) {\r\n          return message.reply({\r\n            embeds: [new ErrorEmbed().setDescription(`No warn found with ID \\`${warnId}\\`.`)],\r\n          });\r\n        }\r\n\r\n        await main.prisma.userWarn.delete({ where: { id: warnId } });\r\n\r\n        message.reply({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"Warn Removed\")\r\n              .setDescription(`Successfully removed the warn with ID \\`${warnId}\\`.`),\r\n          ],\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nexport = warnAdminCommand;\r\n"],"names":[],"mappings":"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","debug_id":"f70b38ac-489f-55ee-a9cb-e42e462964e1"}