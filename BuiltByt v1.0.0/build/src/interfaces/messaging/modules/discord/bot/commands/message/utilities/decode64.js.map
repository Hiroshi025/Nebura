{"version":3,"file":"decode64.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/utilities/decode64.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, ModalBuilder,\r\n\tStringSelectMenuBuilder, TextInputBuilder, TextInputStyle\r\n} from \"discord.js\";\r\n\r\nimport { EmbedCorrect } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst decode64Command: Precommand = {\r\n  name: \"decode64\",\r\n  description: \"Decode Base64 text interactively\",\r\n  examples: [\"decode64\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  cooldown: 30,\r\n  aliases: [\"dec64\", \"base64decode\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n    // Create initial embed\r\n    const embed = new EmbedCorrect()\r\n      .setTitle(\"Base64 Decoder\")\r\n      .setDescription(\"Choose how you want to provide the Base64 text to decode:\")\r\n      .addFields({\r\n        name: \"Options\",\r\n        value:\r\n          \"üîò **Button**: Open a modal to input text\\nüìù **Menu**: Select from recent messages\\nüìã **Paste**: Decode directly from this message\",\r\n      });\r\n\r\n    // Create action row with buttons\r\n    const buttonRow = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n      new ButtonBuilder()\r\n        .setCustomId(\"decode64_modal\")\r\n        .setLabel(\"Use Modal\")\r\n        .setStyle(ButtonStyle.Primary)\r\n        .setEmoji(\"üîò\"),\r\n      new ButtonBuilder()\r\n        .setCustomId(\"decode64_paste\")\r\n        .setLabel(\"Paste Here\")\r\n        .setStyle(ButtonStyle.Secondary)\r\n        .setEmoji(\"üìã\"),\r\n    );\r\n\r\n    // Create select menu with recent messages\r\n    const recentMessages = await message.channel.messages.fetch({ limit: 10 });\r\n    const menuOptions = recentMessages.map((msg) => ({\r\n      label: msg.content.slice(0, 50) + (msg.content.length > 50 ? \"...\" : \"\"),\r\n      value: msg.id,\r\n      description: `Message from ${msg.author.username}`,\r\n      emoji: \"üí¨\",\r\n    }));\r\n\r\n    const menuRow = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(\r\n      new StringSelectMenuBuilder()\r\n        .setCustomId(\"decode64_menu\")\r\n        .setPlaceholder(\"Select a message to decode\")\r\n        .addOptions(menuOptions.slice(0, 25)) // Discord allows max 25 options\r\n        .setMinValues(1)\r\n        .setMaxValues(1),\r\n    );\r\n\r\n    // Send the message with all components\r\n    const response = await message.channel.send({\r\n      embeds: [embed],\r\n      components: [menuRow, buttonRow],\r\n    });\r\n\r\n    // Create collector for interactions\r\n    const collector = response.createMessageComponentCollector({ time: 60000 });\r\n\r\n    collector.on(\"collect\", async (interaction) => {\r\n      if (!interaction.isButton() && !interaction.isStringSelectMenu()) return;\r\n      if (message.channel.type !== ChannelType.GuildText) return;\r\n\r\n      try {\r\n        if (interaction.isButton() && interaction.customId === \"decode64_modal\") {\r\n          // Create modal for text input\r\n          const modal = new ModalBuilder().setCustomId(\"decode64_modal_input\").setTitle(\"Base64 Decoder\");\r\n\r\n          const textInput = new TextInputBuilder()\r\n            .setCustomId(\"decode64_text\")\r\n            .setLabel(\"Enter Base64 text to decode\")\r\n            .setStyle(TextInputStyle.Paragraph)\r\n            .setRequired(true)\r\n            .setMinLength(4)\r\n            .setMaxLength(2000);\r\n\r\n          const modalRow = new ActionRowBuilder<TextInputBuilder>().addComponents(textInput);\r\n          modal.addComponents(modalRow);\r\n\r\n          await interaction.showModal(modal);\r\n        } else if (interaction.isButton() && interaction.customId === \"decode64_paste\") {\r\n          // Handle paste option\r\n          await interaction.reply({\r\n            content: \"Please reply to this message with the Base64 text you want to decode.\",\r\n            ephemeral: true,\r\n          });\r\n\r\n          const filter = (m: any) => m.author.id === interaction.user.id;\r\n          const collected = await message.channel.awaitMessages({\r\n            filter,\r\n            max: 1,\r\n            time: 60000,\r\n            errors: [\"time\"],\r\n          });\r\n\r\n          const content = collected.first()?.content;\r\n          if (content) {\r\n            await processDecode64(interaction, content);\r\n          }\r\n        } else if (interaction.isStringSelectMenu() && interaction.customId === \"decode64_menu\") {\r\n          // Handle menu selection\r\n          const messageId = interaction.values[0];\r\n          const selectedMessage = recentMessages.get(messageId);\r\n          if (selectedMessage) {\r\n            await processDecode64(interaction, selectedMessage.content);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error in decode64 interaction:\", error);\r\n        await interaction.reply({\r\n          content: \"An error occurred while processing your request.\",\r\n          ephemeral: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    // Handle modal submissions\r\n    client.on(\"interactionCreate\", async (modalInteraction) => {\r\n      if (!modalInteraction.isModalSubmit() || modalInteraction.customId !== \"decode64_modal_input\") return;\r\n\r\n      try {\r\n        const text = modalInteraction.fields.getTextInputValue(\"decode64_text\");\r\n        await processDecode64(modalInteraction, text);\r\n      } catch (error) {\r\n        console.error(\"Error in modal submission:\", error);\r\n        await modalInteraction.reply({\r\n          content: \"An error occurred while processing your input.\",\r\n          ephemeral: true,\r\n        });\r\n      }\r\n    });\r\n\r\n    async function processDecode64(interaction: any, input: string) {\r\n      try {\r\n        // Check if the input is valid Base64\r\n        if (!/^[A-Za-z0-9+/=]+$/.test(input)) {\r\n          await interaction.reply({\r\n            content: \"The provided text doesn't appear to be valid Base64.\",\r\n            ephemeral: true,\r\n          });\r\n          return;\r\n        }\r\n\r\n        // Decode the Base64\r\n        const decoded = Buffer.from(input, \"base64\").toString(\"utf-8\");\r\n\r\n        // Create result embed\r\n        const resultEmbed = new EmbedCorrect()\r\n          .setTitle(\"Base64 Decoding Result\")\r\n          .addFields(\r\n            { name: \"Original\", value: `\\`\\`\\`${input.slice(0, 1000)}\\`\\`\\``, inline: false },\r\n            { name: \"Decoded\", value: `\\`\\`\\`${decoded.slice(0, 1000)}\\`\\`\\``, inline: false },\r\n          )\r\n          .setFooter({\r\n            text: `Decoded for ${interaction.user.tag}`,\r\n            iconURL: interaction.user.displayAvatarURL(),\r\n          });\r\n\r\n        // Add delete button\r\n        const deleteButton = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n          new ButtonBuilder()\r\n            .setCustomId(`delete_${interaction.user.id}`)\r\n            .setLabel(\"Delete\")\r\n            .setStyle(ButtonStyle.Danger),\r\n        );\r\n\r\n        // Reply with the result\r\n        if (interaction.replied || interaction.deferred) {\r\n          await interaction.followUp({\r\n            embeds: [resultEmbed],\r\n            components: [deleteButton],\r\n            ephemeral: true,\r\n          });\r\n        } else {\r\n          await interaction.reply({\r\n            embeds: [resultEmbed],\r\n            components: [deleteButton],\r\n            ephemeral: true,\r\n          });\r\n        }\r\n\r\n        // Handle delete button\r\n        const collector = (await interaction.fetchReply()).createMessageComponentCollector({\r\n          filter: (i: any) => i.customId === `delete_${interaction.user.id}` && i.user.id === interaction.user.id,\r\n          time: 60000,\r\n        });\r\n\r\n        collector.on(\"collect\", async (i: any) => {\r\n          if (i.customId === `delete_${interaction.user.id}`) {\r\n            await i.deferUpdate();\r\n            await i.deleteReply();\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error decoding Base64:\", error);\r\n        await interaction.reply({\r\n          content: \"An error occurred while decoding the Base64 text. Please make sure it's valid Base64.\",\r\n          ephemeral: true,\r\n        });\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport = decode64Command;\r\n"],"names":[],"mappings":"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","debug_id":"0ccff7b9-35a1-5f57-b45e-3dd0a69b9f62"}