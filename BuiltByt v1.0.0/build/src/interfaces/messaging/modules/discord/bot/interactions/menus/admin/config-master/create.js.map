{"version":3,"file":"create.js","sources":["src/interfaces/messaging/modules/discord/bot/interactions/menus/admin/config-master/create.ts"],"sourceRoot":"/","sourcesContent":["import { TextChannel } from \"discord.js\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { Menus } from \"@typings/modules/discord\";\r\n\r\nconst menuName: Menus = {\r\n  id: \"select-webhook-channel\",\r\n  maintenance: false,\r\n  tickets: false,\r\n  owner: true,\r\n  permissions: [\"SendMessages\"],\r\n  botpermissions: [\"SendMessages\"],\r\n  async execute(interaction, client) {\r\n    if (!interaction.guild || !interaction.channel || !interaction.member) return;\r\n    const i = interaction;\r\n\r\n    await i.deferUpdate(); // Deferir la interacción para poder editar luego\r\n\r\n    const channel = i.values[0];\r\n    const guild = await client.guilds.fetch(interaction.guildId as string);\r\n    const channelData: TextChannel = (await guild.channels.fetch(channel)) as TextChannel;\r\n    if (!channelData) {\r\n      await i.followUp({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Error\")\r\n            .setDescription(\r\n              `${client.getEmoji(interaction.guildId as string, \"error\")} **Error**\\n` +\r\n                `The selected channel does not exist or is not a text channel.`,\r\n            ),\r\n        ],\r\n        flags: \"Ephemeral\",\r\n      });\r\n      return; // Termina aquí para evitar doble respuesta\r\n    }\r\n\r\n    await new Promise((res) => setTimeout(res, 1000));\r\n    const webhook = await channelData.createWebhook({\r\n      name: \"Error Logs\",\r\n      avatar: client.user?.displayAvatarURL(),\r\n    });\r\n    await main.prisma.discord.update({\r\n      where: { clientId: client.user?.id as string },\r\n      data: { webhookURL: webhook.url },\r\n    });\r\n    await new Promise((res) => setTimeout(res, 1000));\r\n    await i.editReply({\r\n      embeds: [\r\n        new EmbedCorrect()\r\n          .setTitle(\"Configuration\")\r\n          .setDescription(\r\n            `${client.getEmoji(interaction.guildId as string, \"correct\")} **Configuration**\\n` +\r\n              `The webhook has been created in <#${channel}>`,\r\n          ),\r\n      ],\r\n      components: [],\r\n    });\r\n  },\r\n};\r\n\r\nexport = menuName;\r\n"],"names":[],"mappings":";;;AAEA,iCAA8B;AAC9B,2EAAmF;AAGnF,MAAM,QAAQ,GAAU;IACtB,EAAE,EAAE,wBAAwB;IAC5B,WAAW,EAAE,KAAK;IAClB,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;IACX,WAAW,EAAE,CAAC,cAAc,CAAC;IAC7B,cAAc,EAAE,CAAC,cAAc,CAAC;IAChC,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,MAAM;QAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM;YAAE,OAAO;QAC9E,MAAM,CAAC,GAAG,WAAW,CAAC;QAEtB,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,iDAAiD;QAExE,MAAM,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,OAAiB,CAAC,CAAC;QACvE,MAAM,WAAW,GAAgB,CAAC,MAAM,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAgB,CAAC;QACtF,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,MAAM,CAAC,CAAC,QAAQ,CAAC;gBACf,MAAM,EAAE;oBACN,IAAI,0BAAU,EAAE;yBACb,QAAQ,CAAC,OAAO,CAAC;yBACjB,cAAc,CACb,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAiB,EAAE,OAAO,CAAC,cAAc;wBACtE,+DAA+D,CAClE;iBACJ;gBACD,KAAK,EAAE,WAAW;aACnB,CAAC,CAAC;YACH,OAAO,CAAC,2CAA2C;QACrD,CAAC;QAED,MAAM,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,aAAa,CAAC;YAC9C,IAAI,EAAE,YAAY;YAClB,MAAM,EAAE,MAAM,CAAC,IAAI,EAAE,gBAAgB,EAAE;SACxC,CAAC,CAAC;QACH,MAAM,WAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,EAAY,EAAE;YAC9C,IAAI,EAAE,EAAE,UAAU,EAAE,OAAO,CAAC,GAAG,EAAE;SAClC,CAAC,CAAC;QACH,MAAM,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,CAAC,SAAS,CAAC;YAChB,MAAM,EAAE;gBACN,IAAI,4BAAY,EAAE;qBACf,QAAQ,CAAC,eAAe,CAAC;qBACzB,cAAc,CACb,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAiB,EAAE,SAAS,CAAC,sBAAsB;oBAChF,qCAAqC,OAAO,GAAG,CAClD;aACJ;YACD,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,iBAAS,QAAQ,CAAC","debug_id":"5e9b9d4b-e26f-58c4-808f-c608e80e48a8"}