{"version":3,"file":"warn.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/admin/warn.ts"],"sourceRoot":"/","sourcesContent":["import { PermissionFlagsBits, SlashCommandBuilder, TextChannel, time } from \"discord.js\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setDefaultMemberPermissions(PermissionFlagsBits.ModerateMembers)\r\n    .setName(\"warn\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"advertir\",\r\n    })\r\n    .setDescription(\"Warn a user or remove a warn\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"Advertir a un usuario o eliminar una advertencia\",\r\n    })\r\n    .addSubcommand((subCmd) =>\r\n      subCmd\r\n        .setName(\"add\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"agregar\",\r\n        })\r\n        .setDescription(\"Warn a user\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"Advertir a un usuario\",\r\n        })\r\n        .addUserOption((option) => {\r\n          return option\r\n            .setName(\"user\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"usuario\",\r\n            })\r\n            .setDescription(\"The user to warn\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"El usuario a advertir\",\r\n            })\r\n            .setRequired(true);\r\n        })\r\n        .addStringOption((option) => {\r\n          return option\r\n            .setName(\"reason\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"razón\",\r\n            })\r\n            .setDescription(\"The reason for the warn\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"La razón de la advertencia\",\r\n            })\r\n            .setRequired(true)\r\n            .setMinLength(5)\r\n            .setMaxLength(500);\r\n        }),\r\n    )\r\n    .addSubcommand((subCmd) =>\r\n      subCmd\r\n        .setName(\"remove\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"eliminar\",\r\n        })\r\n        .setDescription(\"Remove a warn from a user\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"Eliminar una advertencia de un usuario\",\r\n        })\r\n        .addStringOption((option) => {\r\n          return option\r\n            .setName(\"warn_id\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"id_advertencia\",\r\n            })\r\n            .setDescription(\"The id of the warn to remove\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"El id de la advertencia a eliminar\",\r\n            })\r\n            .setRequired(true);\r\n        }),\r\n    ),\r\n  async (client, interaction) => {\r\n    switch (interaction.options.getSubcommand()) {\r\n      case \"add\":\r\n        {\r\n          const { options, guild, member } = interaction;\r\n          const user = options.getUser(\"user\");\r\n          const reason = options.getString(\"reason\") || \"Not provided reason the warn\";\r\n          const warnTime = time();\r\n\r\n          if (!guild || !member || !user)\r\n            return interaction.reply({\r\n              embeds: [\r\n                new ErrorEmbed().setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guildId as string, \"error\")} Warn Error Options`,\r\n                    `Check the data entered and where you are executing the command`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n              ],\r\n            });\r\n\r\n          await main.prisma.userWarn.create({\r\n            data: {\r\n              guildId: guild.id,\r\n              userId: user.id,\r\n              warnReason: reason,\r\n              moderator: member.user.id,\r\n              warnDate: warnTime,\r\n            },\r\n          });\r\n\r\n          await interaction.reply({\r\n            embeds: [\r\n              new EmbedCorrect()\r\n                .setTitle(\"User warned!\")\r\n                .setDescription(`<@${user.id}> has been warned for \\`${reason}\\`!`),\r\n            ],\r\n            flags: \"Ephemeral\",\r\n          });\r\n\r\n          const modData = await main.prisma.serverModlog.findFirst({\r\n            where: { guildId: guild.id },\r\n          });\r\n          const data = await main.prisma.userWarn.findFirst({\r\n            where: {\r\n              guildId: guild.id,\r\n              userId: user.id,\r\n            },\r\n          });\r\n\r\n          if (modData) {\r\n            const channel = client.channels.cache.get(modData.channelId) as TextChannel;\r\n            channel.send({\r\n              embeds: [\r\n                new EmbedCorrect().setTitle(\"New user warned\").addFields(\r\n                  {\r\n                    name: \"User warned\",\r\n                    value: `<@${user.id}>`,\r\n                    inline: true,\r\n                  },\r\n                  {\r\n                    name: \"Warned by\",\r\n                    value: `<@${member.user.id}>`,\r\n                    inline: true,\r\n                  },\r\n                  {\r\n                    name: \"Warned at\",\r\n                    value: `${warnTime}`,\r\n                    inline: true,\r\n                  },\r\n                  {\r\n                    name: \"Warn ID\",\r\n                    value: `\\`${data?.id ? data.id : \"Not ID\"}\\``,\r\n                    inline: true,\r\n                  },\r\n                  {\r\n                    name: \"Warn Reason\",\r\n                    value: `\\`\\`\\`${reason}\\`\\`\\``,\r\n                  },\r\n                ),\r\n              ],\r\n            });\r\n          }\r\n\r\n          user\r\n            .send({\r\n              embeds: [\r\n                new EmbedCorrect()\r\n                  .setTitle(`You have been warned in: ${guild.name}`)\r\n                  .addFields(\r\n                    {\r\n                      name: \"Warned for\",\r\n                      value: `\\`${reason}\\``,\r\n                      inline: true,\r\n                    },\r\n                    {\r\n                      name: \"Warned at\",\r\n                      value: `${warnTime}`,\r\n                      inline: true,\r\n                    },\r\n                  )\r\n                  .setColor(\"#2f3136\"),\r\n              ],\r\n            })\r\n            .catch(async () => {\r\n              await interaction.followUp({\r\n                embeds: [\r\n                  new ErrorEmbed()\r\n                    .setTitle(\"DM Notification Failed\")\r\n                    .setDescription(\"The user has DMs disabled, so no notification was sent.\"),\r\n                ],\r\n                flags: \"Ephemeral\",\r\n              });\r\n            });\r\n        }\r\n        break;\r\n\r\n      case \"remove\": {\r\n        const warnId = interaction.options.getString(\"warn_id\");\r\n        if (!warnId)\r\n          return interaction.reply({\r\n            embeds: [\r\n              new ErrorEmbed().setDescription(\r\n                [\r\n                  `${client.getEmoji(interaction.guildId as string, \"error\")} Warn Error Options`,\r\n                  `Check the data entered and where you are executing the command`,\r\n                ].join(\"\\n\"),\r\n              ),\r\n            ],\r\n          });\r\n\r\n        const data = await main.prisma.userWarn.findUnique({ where: { id: warnId } });\r\n\r\n        const err = new EmbedCorrect().setDescription(`No warn Id watching \\`${warnId}\\` was found!`);\r\n\r\n        if (!data) return await interaction.reply({ embeds: [err] });\r\n\r\n        await main.prisma.userWarn.delete({ where: { id: warnId } });\r\n\r\n        const embed = new EmbedCorrect()\r\n          .setTitle(\"Remove Infraction\")\r\n          .setDescription(`Successfully removed the warn with the ID matching ${warnId}`);\r\n        return await interaction.reply({ embeds: [embed] });\r\n      }\r\n    }\r\n\r\n    return;\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"4cfd5ce3-979a-5905-be1b-c3f58082cb45"}