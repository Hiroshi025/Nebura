{"version":3,"file":"creator-embed.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/devs/creator-embed.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, EmbedBuilder, PermissionFlagsBits,\r\n\tSlashCommandBuilder, StringSelectMenuBuilder, TextChannel\r\n} from \"discord.js\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport {\r\n\tcreateButton, disableComponents, enableComponents, getMenuOptions, updateEmbedField\r\n} from \"@/interfaces/messaging/modules/discord/structure/utils/functions\";\r\n\r\n/**\r\n * Slash command for creating custom embeds interactively.\r\n * Allows administrators to build and send embeds to a selected channel using Discord components.\r\n *\r\n * @module creator-embed\r\n */\r\nexport default new Command(\r\n  /**\r\n   * Command builder for the embed creator.\r\n   */\r\n  new SlashCommandBuilder()\r\n    .setName(\"embed-creator\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"creador-embed\",\r\n    })\r\n    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\r\n    .setDescription(\"Create custom embeds\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"Crea embeds personalizados\",\r\n    })\r\n    .addChannelOption((opt) =>\r\n      opt\r\n        .setName(\"channel\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"canal\",\r\n        })\r\n        .setDescription(\"Send the embed to a different channel\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"Enviar el embed a un canal diferente\",\r\n        }),\r\n    ),\r\n  /**\r\n   * Command execution handler.\r\n   * @param _client - The Discord client instance.\r\n   * @param interaction - The command interaction.\r\n   */\r\n  async (_client, interaction) => {\r\n    const { options, member } = interaction;\r\n    const channel = options.getChannel(\"channel\") || interaction.channel;\r\n\r\n    /**\r\n     * Preview embed shown to the user for live editing.\r\n     */\r\n    const previewEmbed = new EmbedBuilder().setDescription(\r\n      \"Preview Embeds. Start editing to see changes~\",\r\n    );\r\n    /**\r\n     * Embed containing the settings and instructions.\r\n     */\r\n    const setupEmbed = new EmbedBuilder()\r\n      .setColor(\"#7700ff\")\r\n      .setTitle(\"Settings\")\r\n      .setDescription(\"Use Select Menu below to edit preview\");\r\n\r\n    /**\r\n     * Collection of interactive buttons used in the embed creator.\r\n     */\r\n    const buttons = {\r\n      /** Button to send the embed. */\r\n      send: createButton(\"@Send\", \"Send\", ButtonStyle.Success),\r\n      /** Button to cancel the embed creation. */\r\n      cancel: createButton(\"@Cancel\", \"Cancel\", ButtonStyle.Danger),\r\n      /** Button to return from field editing. */\r\n      return: createButton(\"@fieldReturn\", \"Return\", ButtonStyle.Secondary),\r\n      /** Button to add a field to the embed. */\r\n      addField: createButton(\"@remField\", \"Add\", ButtonStyle.Success),\r\n      /** Button to remove a field from the embed. */\r\n      removeField: createButton(\"@addField\", \"Remove\", ButtonStyle.Danger),\r\n    };\r\n\r\n    /**\r\n     * Select menu for editing embed properties.\r\n     */\r\n    const menu = new StringSelectMenuBuilder()\r\n      .setCustomId(\"@Menu\")\r\n      .setPlaceholder(\"Edit Preview\")\r\n      .setMaxValues(1)\r\n      .setMinValues(1)\r\n      .setOptions(getMenuOptions());\r\n\r\n    /**\r\n     * Action row containing the select menu.\r\n     */\r\n    const setupComponent = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(menu);\r\n    /**\r\n     * Action row containing the main action buttons.\r\n     */\r\n    const buttonComponent = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n      buttons.cancel,\r\n      buttons.send,\r\n    );\r\n    /**\r\n     * Action row for field editing buttons.\r\n     */\r\n    const fieldSetupComponent = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n      buttons.removeField,\r\n      buttons.addField,\r\n    );\r\n    /**\r\n     * Action row for returning from field editing.\r\n     */\r\n    const fieldMenuComponent = new ActionRowBuilder<ButtonBuilder>().addComponents(buttons.return);\r\n\r\n    /**\r\n     * Sends the initial reply with the preview and setup embeds and components.\r\n     */\r\n    const replies = await interaction.reply({\r\n      embeds: [previewEmbed, setupEmbed],\r\n      components: [setupComponent, buttonComponent],\r\n    });\r\n\r\n    /**\r\n     * Filter for component collectors to only allow the command invoker.\r\n     * @param i - The interaction to filter.\r\n     * @returns True if the user is the command invoker.\r\n     */\r\n    const filter = (i: any) => !!member && i.user.id === member.user.id;\r\n    /**\r\n     * Collector for handling component interactions.\r\n     */\r\n    const collector = replies.createMessageComponentCollector({\r\n      filter,\r\n      idle: 1000 * 60 * 10,\r\n    });\r\n\r\n    /**\r\n     * Flag to force stop the collector.\r\n     */\r\n    let forceStop = false;\r\n\r\n    collector.on(\"collect\", async (i: any) => {\r\n      if (forceStop) return;\r\n\r\n      /** The current preview embed. */\r\n      const embeds: any = i.message.embeds[0] as any;\r\n      /** The current setup embed. */\r\n      const setup: any = i.message.embeds[1] as any;\r\n\r\n      switch (i.customId) {\r\n        case \"@Cancel\":\r\n          // Cancel the embed creation process.\r\n          forceStop = true;\r\n          return collector.stop();\r\n        case \"@Send\":\r\n          // Send the created embed to the selected channel.\r\n          if (embeds.data.description === \"Preview Embeds. Start editing to see changes~\") {\r\n            return i.reply({\r\n              content: \"Cannot send empty embed or without description!\",\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n          if (!channel) {\r\n            return i.reply({\r\n              content: \"Channel not found. Cannot send the embed.\",\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n\r\n          if (channel.type !== ChannelType.GuildText) {\r\n            return i.reply({\r\n              content: \"Please select a text channel to send the embed.\",\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n          await (channel as TextChannel).send({ embeds: [embeds] });\r\n          await i.reply({ content: \"Embed Sent!\", flags: \"Ephemeral\" });\r\n          forceStop = true;\r\n          return collector.stop();\r\n        case \"@fieldReturn\":\r\n          // Return from field editing to main menu.\r\n          enableComponents(setupComponent, buttonComponent);\r\n          await i.update({\r\n            embeds: [embeds, setupEmbed],\r\n            components: [setupComponent, buttonComponent],\r\n          });\r\n          break;\r\n        case \"@remField\":\r\n          // Remove the last field from the embed.\r\n          if (!embeds.data.fields || embeds.data.fields.length === 0) {\r\n            return i.reply({\r\n              content: \"No Fields Detected\",\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n          embeds.data.fields.pop();\r\n          await i.update({\r\n            embeds: [embeds, setup],\r\n            components: [fieldSetupComponent, fieldMenuComponent],\r\n          });\r\n          break;\r\n        case \"@addField\":\r\n          // Add a new field to the embed by collecting user input.\r\n          setup.data.description = \"Input Fields.\\nSend field Name > Value > Inline: true | false\";\r\n          disableComponents(fieldSetupComponent, fieldMenuComponent);\r\n          await i.update({\r\n            embeds: [embeds, setup],\r\n            components: [fieldSetupComponent, fieldMenuComponent],\r\n          });\r\n\r\n          let msgArr;\r\n          try {\r\n            msgArr = (\r\n              await (i.channel as TextChannel).awaitMessages({\r\n                filter: (m) => m.author.id === i.user.id,\r\n                max: 3,\r\n                time: 60000, // <-- Timeout for user input\r\n                errors: [\"time\"],\r\n              })\r\n            ).first(3);\r\n          } catch {\r\n            await i.followUp({ content: \"No se recibieron los campos a tiempo.\" });\r\n            enableComponents(fieldSetupComponent, fieldMenuComponent);\r\n            return;\r\n          }\r\n          if (!msgArr || msgArr.length < 3) {\r\n            await i.followUp({ content: \"Debes enviar los 3 campos.\" });\r\n            enableComponents(fieldSetupComponent, fieldMenuComponent);\r\n            return;\r\n          }\r\n\r\n          const fields = {\r\n            name: msgArr[0].content,\r\n            value: msgArr[1].content,\r\n            inline: msgArr[2].content === \"true\",\r\n          };\r\n\r\n          if (!embeds.data.fields) {\r\n            embeds.data.fields = [fields];\r\n          } else {\r\n            embeds.data.fields.push(fields);\r\n          }\r\n\r\n          enableComponents(fieldSetupComponent, fieldMenuComponent);\r\n          setup.data.description = \"Use the button below to add or remove fields\";\r\n          await replies.edit({\r\n            embeds: [embeds, setup],\r\n            components: [fieldSetupComponent, fieldMenuComponent],\r\n          });\r\n\r\n          msgArr.forEach((m) => m.deletable && m.delete());\r\n          break;\r\n        case \"@Menu\":\r\n          // Handle select menu options for editing embed properties.\r\n          setupComponent.components[0].setDisabled(true);\r\n          buttonComponent.components[1].setDisabled(true);\r\n          const selectedOption = i.values[0];\r\n          if (selectedOption === \"timestamp\") {\r\n            embeds.data.timestamp = embeds.data.timestamp\r\n              ? undefined\r\n              : new Date(Date.now()).toISOString();\r\n            i.update({\r\n              embeds: [embeds, setupEmbed],\r\n            });\r\n          } else if (selectedOption === \"fields\") {\r\n            setup.data.description = \"Use the button below to add or remove fields\";\r\n            await i.update({\r\n              embeds: [embeds, setup],\r\n              components: [fieldSetupComponent, fieldMenuComponent],\r\n            });\r\n          } else {\r\n            setup.data.description =\r\n              \"Modify by sending message to the channel\\n-# For image you can upload image directly or use direct url\";\r\n\r\n            await i.update({\r\n              embeds: [embeds, setup],\r\n              components: [setupComponent, buttonComponent],\r\n            });\r\n            const msg = (\r\n              await (i.channel as TextChannel).awaitMessages({\r\n                filter: (m) => m.author.id === i.user.id,\r\n                max: 1,\r\n              })\r\n            ).first();\r\n            if (!msg) return;\r\n\r\n            const attachment = msg.attachments.first();\r\n            updateEmbedField(embeds, selectedOption, msg.content, attachment);\r\n\r\n            setupComponent.components[0].setDisabled(false);\r\n            buttonComponent.components[1].setDisabled(false);\r\n            await replies.edit({\r\n              embeds: [embeds, setupEmbed],\r\n              components: [setupComponent, buttonComponent],\r\n            });\r\n            setTimeout(() => msg.delete(), 2500);\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    collector.on(\"end\", (_c) => {\r\n      // Handle collector end (timeout or manual stop).\r\n      if (!forceStop && replies) {\r\n        interaction.followUp({\r\n          content: \"Embed Editor closed due to inactivity.\",\r\n          flags: \"Ephemeral\",\r\n        });\r\n      }\r\n      replies.delete();\r\n    });\r\n  },\r\n);\r\n"],"names":[],"mappings":";;;;AAAA,2CAGoB;AAEpB,8FAA0F;AAC1F,gGAE0E;AAE1E;;;;;GAKG;AACH,kBAAe,IAAI,kBAAO;AACxB;;GAEG;AACH,IAAI,gCAAmB,EAAE;KACtB,OAAO,CAAC,eAAe,CAAC;KACxB,oBAAoB,CAAC;IACpB,OAAO,EAAE,eAAe;CACzB,CAAC;KACD,2BAA2B,CAAC,gCAAmB,CAAC,aAAa,CAAC;KAC9D,cAAc,CAAC,sBAAsB,CAAC;KACtC,2BAA2B,CAAC;IAC3B,OAAO,EAAE,4BAA4B;CACtC,CAAC;KACD,gBAAgB,CAAC,CAAC,GAAG,EAAE,EAAE,CACxB,GAAG;KACA,OAAO,CAAC,SAAS,CAAC;KAClB,oBAAoB,CAAC;IACpB,OAAO,EAAE,OAAO;CACjB,CAAC;KACD,cAAc,CAAC,uCAAuC,CAAC;KACvD,2BAA2B,CAAC;IAC3B,OAAO,EAAE,sCAAsC;CAChD,CAAC,CACL;AACH;;;;GAIG;AACH,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,EAAE;IAC7B,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,WAAW,CAAC;IACxC,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,WAAW,CAAC,OAAO,CAAC;IAErE;;OAEG;IACH,MAAM,YAAY,GAAG,IAAI,yBAAY,EAAE,CAAC,cAAc,CACpD,+CAA+C,CAChD,CAAC;IACF;;OAEG;IACH,MAAM,UAAU,GAAG,IAAI,yBAAY,EAAE;SAClC,QAAQ,CAAC,SAAS,CAAC;SACnB,QAAQ,CAAC,UAAU,CAAC;SACpB,cAAc,CAAC,uCAAuC,CAAC,CAAC;IAE3D;;OAEG;IACH,MAAM,OAAO,GAAG;QACd,gCAAgC;QAChC,IAAI,EAAE,IAAA,wBAAY,EAAC,OAAO,EAAE,MAAM,EAAE,wBAAW,CAAC,OAAO,CAAC;QACxD,2CAA2C;QAC3C,MAAM,EAAE,IAAA,wBAAY,EAAC,SAAS,EAAE,QAAQ,EAAE,wBAAW,CAAC,MAAM,CAAC;QAC7D,2CAA2C;QAC3C,MAAM,EAAE,IAAA,wBAAY,EAAC,cAAc,EAAE,QAAQ,EAAE,wBAAW,CAAC,SAAS,CAAC;QACrE,0CAA0C;QAC1C,QAAQ,EAAE,IAAA,wBAAY,EAAC,WAAW,EAAE,KAAK,EAAE,wBAAW,CAAC,OAAO,CAAC;QAC/D,+CAA+C;QAC/C,WAAW,EAAE,IAAA,wBAAY,EAAC,WAAW,EAAE,QAAQ,EAAE,wBAAW,CAAC,MAAM,CAAC;KACrE,CAAC;IAEF;;OAEG;IACH,MAAM,IAAI,GAAG,IAAI,oCAAuB,EAAE;SACvC,WAAW,CAAC,OAAO,CAAC;SACpB,cAAc,CAAC,cAAc,CAAC;SAC9B,YAAY,CAAC,CAAC,CAAC;SACf,YAAY,CAAC,CAAC,CAAC;SACf,UAAU,CAAC,IAAA,0BAAc,GAAE,CAAC,CAAC;IAEhC;;OAEG;IACH,MAAM,cAAc,GAAG,IAAI,6BAAgB,EAA2B,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC3F;;OAEG;IACH,MAAM,eAAe,GAAG,IAAI,6BAAgB,EAAiB,CAAC,aAAa,CACzE,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,IAAI,CACb,CAAC;IACF;;OAEG;IACH,MAAM,mBAAmB,GAAG,IAAI,6BAAgB,EAAiB,CAAC,aAAa,CAC7E,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,QAAQ,CACjB,CAAC;IACF;;OAEG;IACH,MAAM,kBAAkB,GAAG,IAAI,6BAAgB,EAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAE/F;;OAEG;IACH,MAAM,OAAO,GAAG,MAAM,WAAW,CAAC,KAAK,CAAC;QACtC,MAAM,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;QAClC,UAAU,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;KAC9C,CAAC,CAAC;IAEH;;;;OAIG;IACH,MAAM,MAAM,GAAG,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACpE;;OAEG;IACH,MAAM,SAAS,GAAG,OAAO,CAAC,+BAA+B,CAAC;QACxD,MAAM;QACN,IAAI,EAAE,IAAI,GAAG,EAAE,GAAG,EAAE;KACrB,CAAC,CAAC;IAEH;;OAEG;IACH,IAAI,SAAS,GAAG,KAAK,CAAC;IAEtB,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,CAAM,EAAE,EAAE;QACvC,IAAI,SAAS;YAAE,OAAO;QAEtB,iCAAiC;QACjC,MAAM,MAAM,GAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAQ,CAAC;QAC/C,+BAA+B;QAC/B,MAAM,KAAK,GAAQ,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAQ,CAAC;QAE9C,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;YACnB,KAAK,SAAS;gBACZ,qCAAqC;gBACrC,SAAS,GAAG,IAAI,CAAC;gBACjB,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC;YAC1B,KAAK,OAAO;gBACV,kDAAkD;gBAClD,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,+CAA+C,EAAE,CAAC;oBAChF,OAAO,CAAC,CAAC,KAAK,CAAC;wBACb,OAAO,EAAE,iDAAiD;wBAC1D,KAAK,EAAE,WAAW;qBACnB,CAAC,CAAC;gBACL,CAAC;gBACD,IAAI,CAAC,OAAO,EAAE,CAAC;oBACb,OAAO,CAAC,CAAC,KAAK,CAAC;wBACb,OAAO,EAAE,2CAA2C;wBACpD,KAAK,EAAE,WAAW;qBACnB,CAAC,CAAC;gBACL,CAAC;gBAED,IAAI,OAAO,CAAC,IAAI,KAAK,wBAAW,CAAC,SAAS,EAAE,CAAC;oBAC3C,OAAO,CAAC,CAAC,KAAK,CAAC;wBACb,OAAO,EAAE,iDAAiD;wBAC1D,KAAK,EAAE,WAAW;qBACnB,CAAC,CAAC;gBACL,CAAC;gBACD,MAAO,OAAuB,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBAC1D,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;gBAC9D,SAAS,GAAG,IAAI,CAAC;gBACjB,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC;YAC1B,KAAK,cAAc;gBACjB,0CAA0C;gBAC1C,IAAA,4BAAgB,EAAC,cAAc,EAAE,eAAe,CAAC,CAAC;gBAClD,MAAM,CAAC,CAAC,MAAM,CAAC;oBACb,MAAM,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;oBAC5B,UAAU,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;iBAC9C,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,WAAW;gBACd,wCAAwC;gBACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;oBAC3D,OAAO,CAAC,CAAC,KAAK,CAAC;wBACb,OAAO,EAAE,oBAAoB;wBAC7B,KAAK,EAAE,WAAW;qBACnB,CAAC,CAAC;gBACL,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBACzB,MAAM,CAAC,CAAC,MAAM,CAAC;oBACb,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;oBACvB,UAAU,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;iBACtD,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,WAAW;gBACd,yDAAyD;gBACzD,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,+DAA+D,CAAC;gBACzF,IAAA,6BAAiB,EAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;gBAC3D,MAAM,CAAC,CAAC,MAAM,CAAC;oBACb,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;oBACvB,UAAU,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;iBACtD,CAAC,CAAC;gBAEH,IAAI,MAAM,CAAC;gBACX,IAAI,CAAC;oBACH,MAAM,GAAG,CACP,MAAO,CAAC,CAAC,OAAuB,CAAC,aAAa,CAAC;wBAC7C,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;wBACxC,GAAG,EAAE,CAAC;wBACN,IAAI,EAAE,KAAK,EAAE,6BAA6B;wBAC1C,MAAM,EAAE,CAAC,MAAM,CAAC;qBACjB,CAAC,CACH,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC;gBAAC,MAAM,CAAC;oBACP,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,uCAAuC,EAAE,CAAC,CAAC;oBACvE,IAAA,4BAAgB,EAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;oBAC1D,OAAO;gBACT,CAAC;gBACD,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;oBACjC,MAAM,CAAC,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,CAAC;oBAC5D,IAAA,4BAAgB,EAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;oBAC1D,OAAO;gBACT,CAAC;gBAED,MAAM,MAAM,GAAG;oBACb,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;oBACvB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO;oBACxB,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM;iBACrC,CAAC;gBAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;oBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;gBAChC,CAAC;qBAAM,CAAC;oBACN,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAClC,CAAC;gBAED,IAAA,4BAAgB,EAAC,mBAAmB,EAAE,kBAAkB,CAAC,CAAC;gBAC1D,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,8CAA8C,CAAC;gBACxE,MAAM,OAAO,CAAC,IAAI,CAAC;oBACjB,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;oBACvB,UAAU,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;iBACtD,CAAC,CAAC;gBAEH,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;gBACjD,MAAM;YACR,KAAK,OAAO;gBACV,2DAA2D;gBAC3D,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC/C,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAChD,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,cAAc,KAAK,WAAW,EAAE,CAAC;oBACnC,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS;wBAC3C,CAAC,CAAC,SAAS;wBACX,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;oBACvC,CAAC,CAAC,MAAM,CAAC;wBACP,MAAM,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;qBAC7B,CAAC,CAAC;gBACL,CAAC;qBAAM,IAAI,cAAc,KAAK,QAAQ,EAAE,CAAC;oBACvC,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,8CAA8C,CAAC;oBACxE,MAAM,CAAC,CAAC,MAAM,CAAC;wBACb,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;wBACvB,UAAU,EAAE,CAAC,mBAAmB,EAAE,kBAAkB,CAAC;qBACtD,CAAC,CAAC;gBACL,CAAC;qBAAM,CAAC;oBACN,KAAK,CAAC,IAAI,CAAC,WAAW;wBACpB,wGAAwG,CAAC;oBAE3G,MAAM,CAAC,CAAC,MAAM,CAAC;wBACb,MAAM,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;wBACvB,UAAU,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;qBAC9C,CAAC,CAAC;oBACH,MAAM,GAAG,GAAG,CACV,MAAO,CAAC,CAAC,OAAuB,CAAC,aAAa,CAAC;wBAC7C,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE;wBACxC,GAAG,EAAE,CAAC;qBACP,CAAC,CACH,CAAC,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,GAAG;wBAAE,OAAO;oBAEjB,MAAM,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;oBAC3C,IAAA,4BAAgB,EAAC,MAAM,EAAE,cAAc,EAAE,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;oBAElE,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBAChD,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACjD,MAAM,OAAO,CAAC,IAAI,CAAC;wBACjB,MAAM,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;wBAC5B,UAAU,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;qBAC9C,CAAC,CAAC;oBACH,UAAU,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;gBACvC,CAAC;gBACD,MAAM;QACV,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE;QACzB,iDAAiD;QACjD,IAAI,CAAC,SAAS,IAAI,OAAO,EAAE,CAAC;YAC1B,WAAW,CAAC,QAAQ,CAAC;gBACnB,OAAO,EAAE,wCAAwC;gBACjD,KAAK,EAAE,WAAW;aACnB,CAAC,CAAC;QACL,CAAC;QACD,OAAO,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CACF,CAAC","debug_id":"42c47f17-324e-5e63-af33-6e7b6dd94197"}