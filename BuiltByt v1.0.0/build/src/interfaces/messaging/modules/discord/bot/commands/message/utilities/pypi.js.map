{"version":3,"file":"pypi.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/utilities/pypi.ts"],"sourceRoot":"/","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, ComponentType, EmbedBuilder,\r\n\tStringSelectMenuBuilder\r\n} from \"discord.js\";\r\n\r\nimport { Precommand, PyPIPackage } from \"@typings/modules/discord\";\r\n\r\nconst commandPyPI: Precommand = {\r\n  name: \"pypi\",\r\n  description: \"Get detailed information about a Python package from PyPI\",\r\n  examples: [\"pypi <package-name>\", \"pypi requests\", \"pypi numpy\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  aliases: [\"pypi-info\", \"python-package\", \"pip-package\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message, args, prefix) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText)\r\n      return;\r\n\r\n    if (!args[0]) {\r\n      return message.reply({\r\n        embeds: [\r\n          {\r\n            title: \"Error - PyPI Package\",\r\n            description: [\r\n              `${client.getEmoji(message.guild.id, \"error\")} Please provide a package name.`,\r\n              `Usage: \\`${prefix}${this.name} <package-name>\\``,\r\n            ].join(\"\\n\"),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    const packageName = args[0];\r\n    let pkgData: PyPIPackage;\r\n\r\n    try {\r\n      const response = await axios.get(`https://pypi.org/pypi/${packageName}/json`);\r\n      pkgData = response.data;\r\n    } catch (error) {\r\n      if (axios.isAxiosError(error)) {\r\n        if (error.response?.status === 404) {\r\n          return message.reply({\r\n            embeds: [\r\n              {\r\n                title: \"Error - PyPI Package\",\r\n                description: [\r\n                  `${client.getEmoji(message.guild.id, \"error\")} Package not found on PyPI.`,\r\n                  `Please check the package name and try again.`,\r\n                ].join(\"\\n\"),\r\n              },\r\n            ],\r\n          });\r\n        }\r\n      }\r\n      console.error(\"Error fetching PyPI package:\", error);\r\n      return message.reply({\r\n        embeds: [\r\n          {\r\n            title: \"Error - PyPI Package\",\r\n            description: [\r\n              `${client.getEmoji(message.guild.id, \"error\")} An error occurred while fetching the package data.`,\r\n              `Please try again later or check the package name.`,\r\n            ].join(\"\\n\"),\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    // Main embed with basic info\r\n    const mainEmbed = new EmbedBuilder()\r\n      .setTitle(`PyPI Package: ${pkgData.info.name}`)\r\n      .setColor(0x3776ab) // PyPI blue color\r\n      .setDescription(pkgData.info.summary || \"No summary provided\")\r\n      .addFields(\r\n        { name: \"Latest Version\", value: pkgData.info.version, inline: true },\r\n        { name: \"License\", value: pkgData.info.license || \"Unknown\", inline: true },\r\n        {\r\n          name: \"Author\",\r\n          value: pkgData.info.author || pkgData.info.author_email || \"Unknown\",\r\n          inline: true,\r\n        },\r\n      );\r\n\r\n    // Add homepage if available\r\n    if (pkgData.info.home_page) {\r\n      mainEmbed.addFields({\r\n        name: \"Homepage\",\r\n        value: `[Visit Website](${pkgData.info.home_page})`,\r\n        inline: true,\r\n      });\r\n    }\r\n\r\n    // Add project URLs if available\r\n    if (pkgData.info.project_urls) {\r\n      const urls = Object.entries(pkgData.info.project_urls)\r\n        .map(([name, url]) => `[${name}](${url})`)\r\n        .join(\" • \");\r\n\r\n      mainEmbed.addFields({\r\n        name: \"Project Links\",\r\n        value: urls,\r\n      });\r\n    }\r\n\r\n    // Add Python version requirement if specified\r\n    if (pkgData.info.requires_python) {\r\n      mainEmbed.addFields({\r\n        name: \"Python Version\",\r\n        value: pkgData.info.requires_python,\r\n        inline: true,\r\n      });\r\n    }\r\n\r\n    // Create buttons\r\n    const buttons = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n      new ButtonBuilder()\r\n        .setLabel(\"View on PyPI\")\r\n        .setURL(`https://pypi.org/project/${pkgData.info.name}/`)\r\n        .setStyle(ButtonStyle.Link),\r\n      new ButtonBuilder()\r\n        .setLabel(\"View Dependencies\")\r\n        .setCustomId(\"view_deps\")\r\n        .setStyle(ButtonStyle.Primary),\r\n      new ButtonBuilder()\r\n        .setLabel(\"View Versions\")\r\n        .setCustomId(\"view_versions\")\r\n        .setStyle(ButtonStyle.Primary),\r\n      new ButtonBuilder()\r\n        .setLabel(\"View Classifiers\")\r\n        .setCustomId(\"view_classifiers\")\r\n        .setStyle(ButtonStyle.Secondary),\r\n    );\r\n\r\n    // Create versions select menu\r\n    const versions = Object.keys(pkgData.releases || {})\r\n      .sort((a, b) => {\r\n        const aParts = a.split(\".\").map(Number);\r\n        const bParts = b.split(\".\").map(Number);\r\n        for (let i = 0; i < Math.max(aParts.length, bParts.length); i++) {\r\n          const aVal = aParts[i] || 0;\r\n          const bVal = bParts[i] || 0;\r\n          if (aVal !== bVal) return bVal - aVal;\r\n        }\r\n        return 0;\r\n      })\r\n      .slice(0, 25);\r\n\r\n    const versionSelect = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(\r\n      new StringSelectMenuBuilder()\r\n        .setCustomId(\"select_version\")\r\n        .setPlaceholder(\"Select a version to view details\")\r\n        .addOptions(\r\n          versions.map((version) => ({\r\n            label: version,\r\n            value: version,\r\n            description: `${pkgData.releases[version]?.length || 0} release files`,\r\n            default: version === pkgData.info.version,\r\n          })),\r\n        ),\r\n    );\r\n\r\n    // Send initial message\r\n    const msg = await message.reply({\r\n      embeds: [mainEmbed],\r\n      components: [buttons, versionSelect],\r\n    });\r\n\r\n    // Collector for button interactions\r\n    const collector = msg.createMessageComponentCollector({\r\n      time: 60000, // 1 minute\r\n      componentType: ComponentType.Button,\r\n    });\r\n\r\n    collector.on(\r\n      \"collect\",\r\n      async (interaction: {\r\n        isButton: () => any;\r\n        deferUpdate: () => any;\r\n        customId: any;\r\n        editReply: (arg0: { embeds: EmbedBuilder[] }) => any;\r\n      }) => {\r\n        if (!interaction.isButton()) return;\r\n\r\n        await interaction.deferUpdate();\r\n\r\n        switch (interaction.customId) {\r\n          case \"view_deps\": {\r\n            const dependencies = pkgData.info.requires_dist || [];\r\n\r\n            const depsEmbed = new EmbedBuilder()\r\n              .setTitle(`Dependencies for ${pkgData.info.name}`)\r\n              .setColor(0x3776ab);\r\n\r\n            if (dependencies.length > 0) {\r\n              // Group dependencies by type (required vs optional)\r\n              const requiredDeps = dependencies.filter((d) => !d.includes(\"extra ==\"));\r\n              const optionalDeps = dependencies.filter((d) => d.includes(\"extra ==\"));\r\n\r\n              if (requiredDeps.length > 0) {\r\n                depsEmbed.addFields({\r\n                  name: \"Required Dependencies\",\r\n                  value: requiredDeps\r\n                    .map((dep) => {\r\n                      // Clean up version specifications\r\n                      return dep\r\n                        .replace(/[;].*$/, \"\") // Remove environment markers\r\n                        .replace(/\\s*\\(.*?\\)\\s*/g, \" \") // Remove parentheses with spaces\r\n                        .trim();\r\n                    })\r\n                    .map((dep) => `• ${dep}`)\r\n                    .join(\"\\n\"),\r\n                });\r\n              }\r\n\r\n              if (optionalDeps.length > 0) {\r\n                // Group optional dependencies by their extra name\r\n                const extrasMap = new Map<string, string[]>();\r\n\r\n                optionalDeps.forEach((dep) => {\r\n                  const extraMatch = dep.match(/extra == ['\"](.*?)['\"]/);\r\n                  if (extraMatch) {\r\n                    const extraName = extraMatch[1];\r\n                    const cleanDep = dep.replace(/;\\s*extra == ['\"].*?['\"]/, \"\");\r\n\r\n                    if (!extrasMap.has(extraName)) {\r\n                      extrasMap.set(extraName, []);\r\n                    }\r\n                    extrasMap.get(extraName)?.push(cleanDep);\r\n                  }\r\n                });\r\n\r\n                extrasMap.forEach((deps, extraName) => {\r\n                  depsEmbed.addFields({\r\n                    name: `Optional: ${extraName}`,\r\n                    value: deps.map((dep) => `• ${dep}`).join(\"\\n\"),\r\n                  });\r\n                });\r\n              }\r\n            } else {\r\n              depsEmbed.setDescription(\"This package has no dependencies.\");\r\n            }\r\n\r\n            await interaction.editReply({ embeds: [mainEmbed, depsEmbed] });\r\n            break;\r\n          }\r\n\r\n          case \"view_versions\": {\r\n            const versionsEmbed = new EmbedBuilder()\r\n              .setTitle(`Available Versions for ${pkgData.info.name}`)\r\n              .setColor(0x3776ab)\r\n              .setDescription(\r\n                versions\r\n                  .map(\r\n                    (version) => `• ${version} (${pkgData.releases[version]?.length || 0} files)`,\r\n                  )\r\n                  .join(\"\\n\")\r\n                  .slice(0, 2000), // Discord embed limit\r\n              );\r\n\r\n            await interaction.editReply({ embeds: [mainEmbed, versionsEmbed] });\r\n            break;\r\n          }\r\n\r\n          case \"view_classifiers\": {\r\n            const classifiers = pkgData.info.classifiers || [];\r\n\r\n            const classifiersEmbed = new EmbedBuilder()\r\n              .setTitle(`Classifiers for ${pkgData.info.name}`)\r\n              .setColor(0x3776ab);\r\n\r\n            if (classifiers.length > 0) {\r\n              // Group classifiers by type\r\n              const classifierGroups: Record<string, string[]> = {};\r\n\r\n              classifiers.forEach((classifier) => {\r\n                const [type, ...rest] = classifier.split(\" :: \");\r\n                if (!classifierGroups[type]) {\r\n                  classifierGroups[type] = [];\r\n                }\r\n                classifierGroups[type].push(rest.join(\" :: \"));\r\n              });\r\n\r\n              for (const [type, items] of Object.entries(classifierGroups)) {\r\n                classifiersEmbed.addFields({\r\n                  name: type,\r\n                  value: items.map((item) => `• ${item}`).join(\"\\n\"),\r\n                });\r\n              }\r\n            } else {\r\n              classifiersEmbed.setDescription(\"No classifiers available for this package.\");\r\n            }\r\n\r\n            await interaction.editReply({ embeds: [mainEmbed, classifiersEmbed] });\r\n            break;\r\n          }\r\n        }\r\n      },\r\n    );\r\n\r\n    // Handle version selection\r\n    const selectCollector = msg.createMessageComponentCollector({\r\n      time: 60000,\r\n      componentType: ComponentType.StringSelect,\r\n    });\r\n\r\n    selectCollector.on(\r\n      \"collect\",\r\n      async (interaction: {\r\n        isStringSelectMenu: () => any;\r\n        deferUpdate: () => any;\r\n        values: any[];\r\n        editReply: (arg0: { embeds: EmbedBuilder[] }) => any;\r\n      }) => {\r\n        if (!interaction.isStringSelectMenu()) return;\r\n\r\n        await interaction.deferUpdate();\r\n\r\n        const selectedVersion = interaction.values[0];\r\n        const releaseFiles = pkgData.releases?.[selectedVersion] || [];\r\n\r\n        const versionEmbed = new EmbedBuilder()\r\n          .setTitle(`Version ${selectedVersion} of ${pkgData.info.name}`)\r\n          .setColor(0x3776ab)\r\n          .addFields({\r\n            name: \"Release Files\",\r\n            value:\r\n              releaseFiles.length > 0\r\n                ? releaseFiles\r\n                    .map((file) => `• [${file.filename}](${file.url}) (${file.size} bytes)`)\r\n                    .join(\"\\n\")\r\n                    .slice(0, 1024)\r\n                : \"No files available for this version\",\r\n          });\r\n\r\n        await interaction.editReply({ embeds: [mainEmbed, versionEmbed] });\r\n      },\r\n    );\r\n\r\n    // Clean up when collector ends\r\n    collector.on(\"end\", () => {\r\n      msg.edit({ components: [] }).catch(console.error);\r\n    });\r\n\r\n    selectCollector.on(\"end\", () => {\r\n      msg.edit({ components: [] }).catch(console.error);\r\n    });\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nexport = commandPyPI;\r\n"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,2CAGoB;AAIpB,MAAM,WAAW,GAAe;IAC9B,IAAI,EAAE,MAAM;IACZ,WAAW,EAAE,2DAA2D;IACxE,QAAQ,EAAE,CAAC,qBAAqB,EAAE,eAAe,EAAE,YAAY,CAAC;IAChE,IAAI,EAAE,KAAK;IACX,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,CAAC,WAAW,EAAE,gBAAgB,EAAE,aAAa,CAAC;IACvD,cAAc,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC;IAC9C,WAAW,EAAE,CAAC,cAAc,CAAC;IAC7B,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM;QACzC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,KAAK,wBAAW,CAAC,SAAS;YACtF,OAAO;QAET,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACb,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,sBAAsB;wBAC7B,WAAW,EAAE;4BACX,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,iCAAiC;4BAC9E,YAAY,MAAM,GAAG,IAAI,CAAC,IAAI,mBAAmB;yBAClD,CAAC,IAAI,CAAC,IAAI,CAAC;qBACb;iBACF;aACF,CAAC,CAAC;QACL,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,OAAoB,CAAC;QAEzB,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,yBAAyB,WAAW,OAAO,CAAC,CAAC;YAC9E,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,eAAK,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC9B,IAAI,KAAK,CAAC,QAAQ,EAAE,MAAM,KAAK,GAAG,EAAE,CAAC;oBACnC,OAAO,OAAO,CAAC,KAAK,CAAC;wBACnB,MAAM,EAAE;4BACN;gCACE,KAAK,EAAE,sBAAsB;gCAC7B,WAAW,EAAE;oCACX,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,6BAA6B;oCAC1E,8CAA8C;iCAC/C,CAAC,IAAI,CAAC,IAAI,CAAC;6BACb;yBACF;qBACF,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;YACD,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;YACrD,OAAO,OAAO,CAAC,KAAK,CAAC;gBACnB,MAAM,EAAE;oBACN;wBACE,KAAK,EAAE,sBAAsB;wBAC7B,WAAW,EAAE;4BACX,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,CAAC,qDAAqD;4BAClG,mDAAmD;yBACpD,CAAC,IAAI,CAAC,IAAI,CAAC;qBACb;iBACF;aACF,CAAC,CAAC;QACL,CAAC;QAED,6BAA6B;QAC7B,MAAM,SAAS,GAAG,IAAI,yBAAY,EAAE;aACjC,QAAQ,CAAC,iBAAiB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aAC9C,QAAQ,CAAC,QAAQ,CAAC,CAAC,kBAAkB;aACrC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,qBAAqB,CAAC;aAC7D,SAAS,CACR,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,EACrE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,EAC3E;YACE,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,IAAI,SAAS;YACpE,MAAM,EAAE,IAAI;SACb,CACF,CAAC;QAEJ,4BAA4B;QAC5B,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAC3B,SAAS,CAAC,SAAS,CAAC;gBAClB,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,mBAAmB,OAAO,CAAC,IAAI,CAAC,SAAS,GAAG;gBACnD,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;QACL,CAAC;QAED,gCAAgC;QAChC,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YAC9B,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;iBACnD,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC;iBACzC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEf,SAAS,CAAC,SAAS,CAAC;gBAClB,IAAI,EAAE,eAAe;gBACrB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC;QAED,8CAA8C;QAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YACjC,SAAS,CAAC,SAAS,CAAC;gBAClB,IAAI,EAAE,gBAAgB;gBACtB,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,eAAe;gBACnC,MAAM,EAAE,IAAI;aACb,CAAC,CAAC;QACL,CAAC;QAED,iBAAiB;QACjB,MAAM,OAAO,GAAG,IAAI,6BAAgB,EAAiB,CAAC,aAAa,CACjE,IAAI,0BAAa,EAAE;aAChB,QAAQ,CAAC,cAAc,CAAC;aACxB,MAAM,CAAC,4BAA4B,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;aACxD,QAAQ,CAAC,wBAAW,CAAC,IAAI,CAAC,EAC7B,IAAI,0BAAa,EAAE;aAChB,QAAQ,CAAC,mBAAmB,CAAC;aAC7B,WAAW,CAAC,WAAW,CAAC;aACxB,QAAQ,CAAC,wBAAW,CAAC,OAAO,CAAC,EAChC,IAAI,0BAAa,EAAE;aAChB,QAAQ,CAAC,eAAe,CAAC;aACzB,WAAW,CAAC,eAAe,CAAC;aAC5B,QAAQ,CAAC,wBAAW,CAAC,OAAO,CAAC,EAChC,IAAI,0BAAa,EAAE;aAChB,QAAQ,CAAC,kBAAkB,CAAC;aAC5B,WAAW,CAAC,kBAAkB,CAAC;aAC/B,QAAQ,CAAC,wBAAW,CAAC,SAAS,CAAC,CACnC,CAAC;QAEF,8BAA8B;QAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;aACjD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACb,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChE,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC5B,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,IAAI,KAAK,IAAI;oBAAE,OAAO,IAAI,GAAG,IAAI,CAAC;YACxC,CAAC;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEhB,MAAM,aAAa,GAAG,IAAI,6BAAgB,EAA2B,CAAC,aAAa,CACjF,IAAI,oCAAuB,EAAE;aAC1B,WAAW,CAAC,gBAAgB,CAAC;aAC7B,cAAc,CAAC,kCAAkC,CAAC;aAClD,UAAU,CACT,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YACzB,KAAK,EAAE,OAAO;YACd,KAAK,EAAE,OAAO;YACd,WAAW,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,IAAI,CAAC,gBAAgB;YACtE,OAAO,EAAE,OAAO,KAAK,OAAO,CAAC,IAAI,CAAC,OAAO;SAC1C,CAAC,CAAC,CACJ,CACJ,CAAC;QAEF,uBAAuB;QACvB,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC;YAC9B,MAAM,EAAE,CAAC,SAAS,CAAC;YACnB,UAAU,EAAE,CAAC,OAAO,EAAE,aAAa,CAAC;SACrC,CAAC,CAAC;QAEH,oCAAoC;QACpC,MAAM,SAAS,GAAG,GAAG,CAAC,+BAA+B,CAAC;YACpD,IAAI,EAAE,KAAK,EAAE,WAAW;YACxB,aAAa,EAAE,0BAAa,CAAC,MAAM;SACpC,CAAC,CAAC;QAEH,SAAS,CAAC,EAAE,CACV,SAAS,EACT,KAAK,EAAE,WAKN,EAAE,EAAE;YACH,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;gBAAE,OAAO;YAEpC,MAAM,WAAW,CAAC,WAAW,EAAE,CAAC;YAEhC,QAAQ,WAAW,CAAC,QAAQ,EAAE,CAAC;gBAC7B,KAAK,WAAW,CAAC,CAAC,CAAC;oBACjB,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,EAAE,CAAC;oBAEtD,MAAM,SAAS,GAAG,IAAI,yBAAY,EAAE;yBACjC,QAAQ,CAAC,oBAAoB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;yBACjD,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAEtB,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC5B,oDAAoD;wBACpD,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;wBACzE,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;wBAExE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;4BAC5B,SAAS,CAAC,SAAS,CAAC;gCAClB,IAAI,EAAE,uBAAuB;gCAC7B,KAAK,EAAE,YAAY;qCAChB,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;oCACX,kCAAkC;oCAClC,OAAO,GAAG;yCACP,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,6BAA6B;yCACnD,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,iCAAiC;yCAChE,IAAI,EAAE,CAAC;gCACZ,CAAC,CAAC;qCACD,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;qCACxB,IAAI,CAAC,IAAI,CAAC;6BACd,CAAC,CAAC;wBACL,CAAC;wBAED,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;4BAC5B,kDAAkD;4BAClD,MAAM,SAAS,GAAG,IAAI,GAAG,EAAoB,CAAC;4BAE9C,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;gCAC3B,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;gCACvD,IAAI,UAAU,EAAE,CAAC;oCACf,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;oCAChC,MAAM,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;oCAE7D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;wCAC9B,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;oCAC/B,CAAC;oCACD,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gCAC3C,CAAC;4BACH,CAAC,CAAC,CAAC;4BAEH,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,EAAE;gCACpC,SAAS,CAAC,SAAS,CAAC;oCAClB,IAAI,EAAE,aAAa,SAAS,EAAE;oCAC9B,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;iCAChD,CAAC,CAAC;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;yBAAM,CAAC;wBACN,SAAS,CAAC,cAAc,CAAC,mCAAmC,CAAC,CAAC;oBAChE,CAAC;oBAED,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;oBAChE,MAAM;gBACR,CAAC;gBAED,KAAK,eAAe,CAAC,CAAC,CAAC;oBACrB,MAAM,aAAa,GAAG,IAAI,yBAAY,EAAE;yBACrC,QAAQ,CAAC,0BAA0B,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;yBACvD,QAAQ,CAAC,QAAQ,CAAC;yBAClB,cAAc,CACb,QAAQ;yBACL,GAAG,CACF,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,OAAO,KAAK,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,IAAI,CAAC,SAAS,CAC9E;yBACA,IAAI,CAAC,IAAI,CAAC;yBACV,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAClB,CAAC;oBAEJ,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC;oBACpE,MAAM;gBACR,CAAC;gBAED,KAAK,kBAAkB,CAAC,CAAC,CAAC;oBACxB,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;oBAEnD,MAAM,gBAAgB,GAAG,IAAI,yBAAY,EAAE;yBACxC,QAAQ,CAAC,mBAAmB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;yBAChD,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAEtB,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBAC3B,4BAA4B;wBAC5B,MAAM,gBAAgB,GAA6B,EAAE,CAAC;wBAEtD,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;4BACjC,MAAM,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;4BACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC;gCAC5B,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAC9B,CAAC;4BACD,gBAAgB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;wBACjD,CAAC,CAAC,CAAC;wBAEH,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,CAAC;4BAC7D,gBAAgB,CAAC,SAAS,CAAC;gCACzB,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;6BACnD,CAAC,CAAC;wBACL,CAAC;oBACH,CAAC;yBAAM,CAAC;wBACN,gBAAgB,CAAC,cAAc,CAAC,4CAA4C,CAAC,CAAC;oBAChF,CAAC;oBAED,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC,EAAE,CAAC,CAAC;oBACvE,MAAM;gBACR,CAAC;YACH,CAAC;QACH,CAAC,CACF,CAAC;QAEF,2BAA2B;QAC3B,MAAM,eAAe,GAAG,GAAG,CAAC,+BAA+B,CAAC;YAC1D,IAAI,EAAE,KAAK;YACX,aAAa,EAAE,0BAAa,CAAC,YAAY;SAC1C,CAAC,CAAC;QAEH,eAAe,CAAC,EAAE,CAChB,SAAS,EACT,KAAK,EAAE,WAKN,EAAE,EAAE;YACH,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE;gBAAE,OAAO;YAE9C,MAAM,WAAW,CAAC,WAAW,EAAE,CAAC;YAEhC,MAAM,eAAe,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC9C,MAAM,YAAY,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAE/D,MAAM,YAAY,GAAG,IAAI,yBAAY,EAAE;iBACpC,QAAQ,CAAC,WAAW,eAAe,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAC9D,QAAQ,CAAC,QAAQ,CAAC;iBAClB,SAAS,CAAC;gBACT,IAAI,EAAE,eAAe;gBACrB,KAAK,EACH,YAAY,CAAC,MAAM,GAAG,CAAC;oBACrB,CAAC,CAAC,YAAY;yBACT,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC;yBACvE,IAAI,CAAC,IAAI,CAAC;yBACV,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;oBACnB,CAAC,CAAC,qCAAqC;aAC5C,CAAC,CAAC;YAEL,MAAM,WAAW,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC;QACrE,CAAC,CACF,CAAC;QAEF,+BAA+B;QAC/B,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YACvB,GAAG,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,OAAO;IACT,CAAC;CACF,CAAC;AAEF,iBAAS,WAAW,CAAC","debug_id":"2add5007-9223-5755-b5e2-f09844e7333c"}