{"version":3,"file":"dns.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/utilities/dns.ts"],"sourceRoot":"/","sourcesContent":["import { exec } from \"child_process\";\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder, ModalBuilder,\r\n\tStringSelectMenuBuilder, TextInputBuilder, TextInputStyle\r\n} from \"discord.js\";\r\nimport { MxRecord, SoaRecord, SrvRecord } from \"dns\";\r\nimport { lookup } from \"dns/promises\";\r\nimport { ping } from \"tcp-ping\";\r\nimport { promisify } from \"util\";\r\n\r\nimport { ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport emojis from \"@config/json/emojis.json\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst execPromise = promisify(exec);\r\n\r\nconst dnsCommand: Precommand = {\r\n  name: \"dns\",\r\n  description: \"Perform DNS lookups and website status checks\",\r\n  examples: [\"dns [website]\", \"dns lookup google.com\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  cooldown: 10,\r\n  aliases: [\"dnslookup\", \"websiteinfo\", \"checkwebsite\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(_client, message, args, prefix) {\r\n    try {\r\n      if (!message.guild) return;\r\n\r\n      // If no arguments provided, show the main menu\r\n      if (!args.length) {\r\n        return showMainMenu(message, prefix);\r\n      }\r\n\r\n      // If domain provided directly, show quick info\r\n      const domain = args[0].replace(/^https?:\\/\\//, \"\").split(\"/\")[0];\r\n      return showQuickLookup(message, domain);\r\n    } catch (e: any) {\r\n      return message.reply({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setFooter({\r\n              text: `Requested by: ${message.author.tag}`,\r\n              iconURL: message.author.displayAvatarURL(),\r\n            })\r\n            .setDescription(\r\n              [\r\n                `${emojis.error} An error occurred while executing this command!`,\r\n                `Please try again later or join our support server for help!`,\r\n              ].join(\"\\n\"),\r\n            )\r\n            .setErrorFormat(e.stack),\r\n        ],\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\n// Show main menu with options\r\nasync function showMainMenu(message: any, prefix: string) {\r\n  const embed = new EmbedBuilder()\r\n    .setColor(\"#0099ff\")\r\n    .setTitle(\"DNS & Website Analysis Tool\")\r\n    .setDescription(\"Please select an option from the menu below to analyze a website\")\r\n    .addFields(\r\n      { name: \"Quick Lookup\", value: `\\`${prefix}dns [domain]\\``, inline: true },\r\n      { name: \"Full Analysis\", value: \"Use the button below\", inline: true },\r\n      { name: \"Available Checks\", value: \"DNS Records, Ping, Traceroute, SSL Info, HTTP Status\" },\r\n    )\r\n    .setFooter({ text: \"Powered by Node.js DNS module\" });\r\n\r\n  const row = new ActionRowBuilder().addComponents(\r\n    new ButtonBuilder().setCustomId(\"full_analysis\").setLabel(\"Start Full Analysis\").setStyle(ButtonStyle.Primary),\r\n    new ButtonBuilder().setCustomId(\"dns_examples\").setLabel(\"Show Examples\").setStyle(ButtonStyle.Secondary),\r\n  );\r\n\r\n  const msg = await message.reply({\r\n    embeds: [embed],\r\n    components: [row],\r\n  });\r\n\r\n  // Collector for button interactions\r\n  const collector = msg.createMessageComponentCollector({ time: 60000 });\r\n\r\n  collector.on(\"collect\", async (interaction: any) => {\r\n    if (!interaction.isButton()) return;\r\n\r\n    if (interaction.customId === \"full_analysis\") {\r\n      await interaction.showModal(\r\n        new ModalBuilder()\r\n          .setCustomId(\"dns_modal\")\r\n          .setTitle(\"Website Analysis\")\r\n          .addComponents(\r\n            new ActionRowBuilder<TextInputBuilder>().addComponents(\r\n              new TextInputBuilder()\r\n                .setCustomId(\"website_url\")\r\n                .setLabel(\"Enter website URL or IP\")\r\n                .setStyle(TextInputStyle.Short)\r\n                .setRequired(true)\r\n                .setPlaceholder(\"example.com\"),\r\n            ),\r\n          ),\r\n      );\r\n    } else if (interaction.customId === \"dns_examples\") {\r\n      const examplesEmbed = new EmbedBuilder()\r\n        .setColor(\"#4CAF50\")\r\n        .setTitle(\"DNS Lookup Examples\")\r\n        .setDescription(\"Here are some usage examples:\")\r\n        .addFields(\r\n          { name: \"Quick DNS Lookup\", value: `\\`${prefix}dns google.com\\`` },\r\n          { name: \"Check All Records\", value: `\\`${prefix}dns records example.com\\`` },\r\n          { name: \"Ping Test\", value: `\\`${prefix}dns ping github.com\\`` },\r\n          { name: \"HTTP Status\", value: `\\`${prefix}dns status discord.com\\`` },\r\n        );\r\n\r\n      await interaction.reply({ embeds: [examplesEmbed], ephemeral: true });\r\n    }\r\n  });\r\n\r\n  collector.on(\"end\", () => {\r\n    msg.edit({ components: [] }).catch(() => {});\r\n  });\r\n}\r\n\r\n// Show quick lookup results\r\nasync function showQuickLookup(message: any, domain: string) {\r\n  try {\r\n    // Initial response with loading state\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Analyzing ${domain}`)\r\n      .setDescription(\"Gathering information...\")\r\n      .setFooter({ text: \"This may take a few seconds\" });\r\n\r\n    const msg = await message.reply({ embeds: [loadingEmbed] });\r\n\r\n    // Perform DNS lookups in parallel\r\n    const { resolveMx, resolveTxt, resolveCname } = await import(\"dns/promises\");\r\n    const [aRecords, mxRecords, txtRecords, _cnameRecords, _pingResult] = await Promise.all([\r\n      lookup(domain, 4).catch(() => ({ address: \"Not found\" })),\r\n      resolveMx(domain).catch(() => []),\r\n      resolveTxt(domain).catch(() => []),\r\n      resolveCname(domain).catch(() => []),\r\n      pingDomain(domain),\r\n    ]);\r\n\r\n    // Build results embed\r\n    const resultEmbed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`DNS Results for ${domain}`)\r\n      .addFields(\r\n        { name: \"IP Address (A Record)\", value: aRecords.address || \"Not found\", inline: true },\r\n        {\r\n          name: \"MX Records\",\r\n          value: mxRecords.length ? mxRecords.map((r: any) => r.exchange).join(\"\\n\") : \"None\",\r\n          inline: false,\r\n        },\r\n        {\r\n          name: \"TXT Records\",\r\n          value: txtRecords.length\r\n            ? txtRecords\r\n                .map((arr: string[]) => arr.join(\"\"))\r\n                .join(\"\\n\")\r\n                .slice(0, 1024)\r\n            : \"None\",\r\n          inline: false,\r\n        },\r\n      )\r\n      .setFooter({\r\n        text: `Requested by: ${message.author.tag}`,\r\n        iconURL: message.author.displayAvatarURL(),\r\n      });\r\n\r\n    // Create action buttons\r\n    const row = new ActionRowBuilder().addComponents(\r\n      new ButtonBuilder().setCustomId(`dns_full_${domain}`).setLabel(\"Full Analysis\").setStyle(ButtonStyle.Primary),\r\n      new ButtonBuilder().setCustomId(`dns_ping_${domain}`).setLabel(\"Detailed Ping\").setStyle(ButtonStyle.Secondary),\r\n      new ButtonBuilder()\r\n        .setCustomId(`dns_records_${domain}`)\r\n        .setLabel(\"All DNS Records\")\r\n        .setStyle(ButtonStyle.Secondary),\r\n    );\r\n\r\n    await msg.edit({ embeds: [resultEmbed], components: [row] });\r\n\r\n    // Collector for button interactions\r\n    const collector = msg.createMessageComponentCollector({ time: 60000 });\r\n\r\n    collector.on(\"collect\", async (interaction: any) => {\r\n      if (!interaction.isButton()) return;\r\n\r\n      const [action, targetDomain] = interaction.customId.split(\"_\").slice(1);\r\n\r\n      switch (action) {\r\n        case \"full\":\r\n          await showFullAnalysis(interaction, targetDomain);\r\n          break;\r\n        case \"ping\":\r\n          await showDetailedPing(interaction, targetDomain);\r\n          break;\r\n        case \"records\":\r\n          await showAllDNSRecords(interaction, targetDomain);\r\n          break;\r\n      }\r\n    });\r\n\r\n    collector.on(\"end\", () => {\r\n      msg.edit({ components: [] }).catch(() => {});\r\n    });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Error Analyzing Domain\")\r\n      .setDescription(`Failed to analyze ${domain}. Please check the domain and try again.`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    message.reply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Show full analysis with select menu\r\nasync function showFullAnalysis(interaction: any, domain: string) {\r\n  const embed = new EmbedBuilder()\r\n    .setColor(\"#0099ff\")\r\n    .setTitle(`Full Analysis Options for ${domain}`)\r\n    .setDescription(\"Select the type of analysis you want to perform\");\r\n\r\n  const selectMenu = new StringSelectMenuBuilder()\r\n    .setCustomId(`dns_analysis_select_${domain}`)\r\n    .setPlaceholder(\"Select analysis type\")\r\n    .addOptions(\r\n      { label: \"DNS Records\", value: \"dns_records\", description: \"View all DNS records\" },\r\n      { label: \"Network Ping\", value: \"network_ping\", description: \"Detailed ping statistics\" },\r\n      { label: \"Traceroute\", value: \"traceroute\", description: \"View network path to server\" },\r\n      { label: \"HTTP Headers\", value: \"http_headers\", description: \"View website HTTP headers\" },\r\n      { label: \"SSL Certificate\", value: \"ssl_cert\", description: \"View SSL certificate details\" },\r\n    );\r\n\r\n  const row = new ActionRowBuilder().addComponents(selectMenu);\r\n\r\n  await interaction.reply({\r\n    embeds: [embed],\r\n    components: [row],\r\n    ephemeral: true,\r\n  });\r\n\r\n  // Handle select menu interaction\r\n  const collector = interaction.channel.createMessageComponentCollector({\r\n    filter: (i: any) => i.customId === `dns_analysis_select_${domain}`,\r\n    time: 60000,\r\n  });\r\n\r\n  collector.on(\"collect\", async (menuInteraction: any) => {\r\n    const analysisType = menuInteraction.values[0];\r\n\r\n    switch (analysisType) {\r\n      case \"dns_records\":\r\n        await showAllDNSRecords(menuInteraction, domain);\r\n        break;\r\n      case \"network_ping\":\r\n        await showDetailedPing(menuInteraction, domain);\r\n        break;\r\n      case \"traceroute\":\r\n        await showTraceroute(menuInteraction, domain);\r\n        break;\r\n      case \"http_headers\":\r\n        await showHTTPHeaders(menuInteraction, domain);\r\n        break;\r\n      case \"ssl_cert\":\r\n        await showSSLCertificate(menuInteraction, domain);\r\n        break;\r\n    }\r\n  });\r\n}\r\n\r\n// Show all DNS records\r\nasync function showAllDNSRecords(interaction: any, domain: string) {\r\n  const recordTypes = [\"A\", \"AAAA\", \"MX\", \"TXT\", \"CNAME\", \"NS\", \"SOA\", \"SRV\"];\r\n\r\n  try {\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Fetching all DNS records for ${domain}`)\r\n      .setDescription(\"This may take a moment...\");\r\n\r\n    await interaction.reply({ embeds: [loadingEmbed], ephemeral: true });\r\n\r\n    const records: any = {};\r\n\r\n    // Import DNS resolver functions\r\n    const { resolve4, resolve6, resolveMx, resolveTxt, resolveCname, resolveNs, resolveSoa, resolveSrv } = await import(\r\n      \"dns/promises\"\r\n    );\r\n\r\n    // Fetch all record types in parallel\r\n    await Promise.all(\r\n      recordTypes.map(async (type) => {\r\n        try {\r\n          let result: string[] | MxRecord[] | string[][] | SoaRecord[] | SrvRecord[];\r\n          switch (type) {\r\n            case \"A\":\r\n              result = await resolve4(domain);\r\n              break;\r\n            case \"AAAA\":\r\n              result = await resolve6(domain);\r\n              break;\r\n            case \"MX\":\r\n              result = await resolveMx(domain);\r\n              break;\r\n            case \"TXT\":\r\n              result = await resolveTxt(domain);\r\n              break;\r\n            case \"CNAME\":\r\n              result = await resolveCname(domain);\r\n              break;\r\n            case \"NS\":\r\n              result = await resolveNs(domain);\r\n              break;\r\n            case \"SOA\":\r\n              result = [await resolveSoa(domain)];\r\n              break;\r\n            case \"SRV\":\r\n              result = await resolveSrv(domain);\r\n              break;\r\n            default:\r\n              result = [];\r\n          }\r\n          records[type] = Array.isArray(result) ? result : [result];\r\n        } catch {\r\n          records[type] = [];\r\n        }\r\n      }),\r\n    );\r\n\r\n    // Format results\r\n    const fields = [];\r\n    for (const [type, values] of Object.entries(records)) {\r\n      if (Array.isArray(values) && values.length > 0) {\r\n        let valueStr = \"\";\r\n\r\n        if (type === \"MX\") {\r\n          valueStr = (values as any[]).map((r: any) => `${r.exchange} (priority ${r.priority})`).join(\"\\n\");\r\n        } else if (type === \"SOA\") {\r\n          const soa = values[0] as any;\r\n          valueStr = `Primary NS: ${soa.nsname}\\nAdmin: ${soa.hostmaster}\\nSerial: ${soa.serial}\\nRefresh: ${soa.refresh}\\nRetry: ${soa.retry}\\nExpire: ${soa.expire}\\nTTL: ${soa.minttl}`;\r\n        } else if (type === \"TXT\") {\r\n          valueStr = (values as string[][]).flat().join(\"\\n\");\r\n        } else {\r\n          valueStr = (values as any[]).map((r: any) => r.address || r.value || r).join(\"\\n\");\r\n        }\r\n\r\n        fields.push({\r\n          name: type,\r\n          value: valueStr.slice(0, 1024) || \"None\",\r\n          inline: type !== \"SOA\" && type !== \"TXT\",\r\n        });\r\n      }\r\n    }\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`All DNS Records for ${domain}`)\r\n      .addFields(fields)\r\n      .setTimestamp()\r\n      .setFooter({ text: `Requested by: ${interaction.user.tag}` });\r\n\r\n    await interaction.editReply({ embeds: [embed] });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Error Fetching DNS Records\")\r\n      .setDescription(`Failed to fetch DNS records for ${domain}`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    await interaction.editReply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Show detailed ping results\r\nasync function showDetailedPing(interaction: any, domain: string) {\r\n  try {\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Pinging ${domain}`)\r\n      .setDescription(\"Measuring network latency...\");\r\n\r\n    await interaction.reply({ embeds: [loadingEmbed], ephemeral: true });\r\n\r\n    const result = await pingDomain(domain, 5); // 5 pings for more accurate results\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`Ping Results for ${domain}`)\r\n      .addFields(\r\n        { name: \"IP Address\", value: result.address || \"Unknown\", inline: true },\r\n        { name: \"Min Latency\", value: `${result.min} ms`, inline: true },\r\n        { name: \"Max Latency\", value: `${result.max} ms`, inline: true },\r\n        { name: \"Average Latency\", value: `${result.avg} ms`, inline: true },\r\n        { name: \"Packet Loss\", value: `${result.packetLoss}%`, inline: true },\r\n        { name: \"Standard Deviation\", value: `${result.stddev} ms`, inline: true },\r\n      )\r\n      .setFooter({ text: `Based on ${result.times.length} pings` });\r\n\r\n    await interaction.editReply({ embeds: [embed] });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Ping Failed\")\r\n      .setDescription(`Could not ping ${domain}`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    await interaction.editReply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Show traceroute results\r\nasync function showTraceroute(interaction: any, domain: string) {\r\n  try {\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Tracing route to ${domain}`)\r\n      .setDescription(\"This may take up to 30 seconds...\");\r\n\r\n    await interaction.reply({ embeds: [loadingEmbed], ephemeral: true });\r\n\r\n    // Note: This uses the system's traceroute command\r\n    const { stdout } = await execPromise(`traceroute ${domain}`);\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`Traceroute to ${domain}`)\r\n      .setDescription(`\\`\\`\\`\\n${stdout.slice(0, 4000)}\\n\\`\\`\\``)\r\n      .setFooter({ text: \"Results from system traceroute command\" });\r\n\r\n    await interaction.editReply({ embeds: [embed] });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Traceroute Failed\")\r\n      .setDescription(`Could not trace route to ${domain}`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    await interaction.editReply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Show HTTP headers\r\nasync function showHTTPHeaders(interaction: any, domain: string) {\r\n  try {\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Fetching HTTP headers for ${domain}`)\r\n      .setDescription(\"Connecting to server...\");\r\n\r\n    await interaction.reply({ embeds: [loadingEmbed], ephemeral: true });\r\n\r\n    const { stdout } = await execPromise(`curl -I https://${domain}`);\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`HTTP Headers for ${domain}`)\r\n      .setDescription(`\\`\\`\\`\\n${stdout.slice(0, 4000)}\\n\\`\\`\\``)\r\n      .setFooter({ text: \"Results from curl command\" });\r\n\r\n    await interaction.editReply({ embeds: [embed] });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Failed to Fetch Headers\")\r\n      .setDescription(`Could not retrieve HTTP headers for ${domain}`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    await interaction.editReply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Show SSL certificate info\r\nasync function showSSLCertificate(interaction: any, domain: string) {\r\n  try {\r\n    const loadingEmbed = new EmbedBuilder()\r\n      .setColor(\"#FFA500\")\r\n      .setTitle(`Fetching SSL certificate for ${domain}`)\r\n      .setDescription(\"Connecting to server...\");\r\n\r\n    await interaction.reply({ embeds: [loadingEmbed], ephemeral: true });\r\n\r\n    const { stdout } = await execPromise(\r\n      `openssl s_client -showcerts -connect ${domain}:443 </dev/null 2>/dev/null | openssl x509 -noout -text`,\r\n    );\r\n\r\n    const embed = new EmbedBuilder()\r\n      .setColor(\"#4CAF50\")\r\n      .setTitle(`SSL Certificate for ${domain}`)\r\n      .setDescription(`\\`\\`\\`\\n${stdout.slice(0, 4000)}\\n\\`\\`\\``)\r\n      .setFooter({ text: \"Results from openssl command\" });\r\n\r\n    await interaction.editReply({ embeds: [embed] });\r\n  } catch (error: any) {\r\n    const errorEmbed = new EmbedBuilder()\r\n      .setColor(\"#FF0000\")\r\n      .setTitle(\"Failed to Fetch SSL Certificate\")\r\n      .setDescription(`Could not retrieve SSL certificate for ${domain}`)\r\n      .setFooter({ text: `Error: ${error.message}` });\r\n\r\n    await interaction.editReply({ embeds: [errorEmbed] });\r\n  }\r\n}\r\n\r\n// Helper function to ping a domain\r\nasync function pingDomain(domain: string, count = 3): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    ping({ address: domain, attempts: count }, (err: any, result: { results: any[] }) => {\r\n      if (err) return reject(err);\r\n\r\n      const times = result.results.filter((r) => r.time !== undefined).map((r) => r.time!);\r\n      const avg = times.reduce((a, b) => a + b, 0) / times.length;\r\n      const min = Math.min(...times);\r\n      const max = Math.max(...times);\r\n\r\n      // Calculate standard deviation\r\n      const squareDiffs = times.map((time) => Math.pow(time - avg, 2));\r\n      const avgSquareDiff = squareDiffs.reduce((a, b) => a + b, 0) / times.length;\r\n      const stddev = Math.sqrt(avgSquareDiff);\r\n\r\n      // Calculate packet loss\r\n      const packetLoss = ((result.results.length - times.length) / result.results.length) * 100;\r\n\r\n      resolve({\r\n        address: result.results[0].addr || domain,\r\n        min,\r\n        max,\r\n        avg,\r\n        stddev,\r\n        packetLoss,\r\n        times,\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nexport = dnsCommand;\r\n"],"names":[],"mappings":"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","debug_id":"455a9967-03c9-501a-92c8-06b1e0008419"}