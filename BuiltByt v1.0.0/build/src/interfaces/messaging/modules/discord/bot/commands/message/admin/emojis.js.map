{"version":3,"file":"emojis.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/admin/emojis.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, Collection, EmbedBuilder, GuildEmoji,\r\n\tMessage, MessageComponentInteraction, TextChannel\r\n} from \"discord.js\";\r\n\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\n// Dummy logger para evitar error de símbolo no encontrado\r\nfunction logWithLabel(label: string, message: string) {\r\n  console.log(`[${label}] ${message}`);\r\n}\r\n\r\nconst emojisCommand: Precommand = {\r\n  name: \"emoji\",\r\n  description: \"Comprehensive emoji management system for your server\",\r\n  aliases: [\"emojis\", \"emojiinfo\", \"emoji-info\", \"emoji-control\"],\r\n  nsfw: false,\r\n  owner: false,\r\n  examples: [\r\n    \"emoji add <emoji> [name]\",\r\n    \"emoji info <emoji>\",\r\n    \"emoji jumbo <emoji>\",\r\n    \"emoji list [page]\",\r\n    \"emoji delete <emoji>\",\r\n    \"emoji rename <emoji> <new_name>\",\r\n  ],\r\n  botpermissions: [\"ManageEmojisAndStickers\", \"AttachFiles\", \"UseExternalEmojis\"],\r\n  subcommands: [\r\n    \"emoji add <emoji> [name]\",\r\n    \"emoji info <emoji>\",\r\n    \"emoji jumbo <emoji>\",\r\n    \"emoji list [page]\",\r\n    \"emoji delete <emoji>\",\r\n    \"emoji rename <emoji> <new_name>\",\r\n  ],\r\n  permissions: [\"ManageEmojisAndStickers\"],\r\n  async execute(client, message, args, prefix) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n    const subcommand = args[0]?.toLowerCase() || \"help\";\r\n\r\n    switch (subcommand) {\r\n      case \"add\":\r\n        await handleEmojiAdd(message, args.slice(1), prefix);\r\n        break;\r\n      case \"info\":\r\n        await handleEmojiInfo(message, args.slice(1), prefix);\r\n        break;\r\n      case \"jumbo\":\r\n        await handleEmojiJumbo(message, args.slice(1), prefix);\r\n        break;\r\n      case \"list\":\r\n        await handleEmojiList(client, message, args.slice(1));\r\n        break;\r\n      case \"delete\":\r\n      case \"remove\":\r\n        await handleEmojiDelete(message, args.slice(1));\r\n        break;\r\n      case \"rename\":\r\n        await handleEmojiRename(message, args.slice(1));\r\n        break;\r\n      default:\r\n        await showEmojiHelp(message, prefix);\r\n        break;\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * Handles adding an emoji to the server\r\n */\r\nasync function handleEmojiAdd(message: Message, args: string[], prefix: string) {\r\n  if (!message.guild || !message.channel || message.author.bot || message.channel.type !== ChannelType.GuildText)\r\n    return;\r\n  const emojiInput = args[0];\r\n  const customName = args[1]; // Optional custom name\r\n\r\n  if (!emojiInput) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Missing Emoji\")\r\n          .setDescription(`Please provide an emoji to add.\\nExample: \\`${prefix}emoji add :thumbsup:\\``),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Regex to match custom emojis\r\n  const emojiRegex = /<?(a)?:?(\\w{2,32}):(\\d{17,19})>?/gi;\r\n  const emojiMatch = emojiInput.match(emojiRegex);\r\n\r\n  if (!emojiMatch) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Invalid Emoji\")\r\n          .setDescription(\"Please provide a valid custom emoji.\")\r\n          .addFields(\r\n            {\r\n              name: \"Correct Format\",\r\n              value: \"`<:name:123456789012345678>` or `:name:`\",\r\n              inline: true,\r\n            },\r\n            { name: \"Example\", value: `\\`${prefix}emoji add :thumbsup:\\``, inline: true },\r\n          ),\r\n      ],\r\n    });\r\n  }\r\n\r\n  const [fullMatch] = emojiMatch;\r\n  const isAnimated = fullMatch.startsWith(\"<a:\");\r\n  const emojiName = fullMatch.split(\":\")[1];\r\n  const emojiId = fullMatch.split(\":\")[2].replace(\">\", \"\");\r\n  const finalName = customName || emojiName;\r\n  const extension = isAnimated ? \"gif\" : \"png\";\r\n  const emojiUrl = `https://cdn.discordapp.com/emojis/${emojiId}.${extension}`;\r\n\r\n  // Check if emoji already exists\r\n  const existingEmoji = message.guild.emojis.cache.find((e: GuildEmoji) => e.name === finalName);\r\n  if (existingEmoji) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Emoji Exists\")\r\n          .setDescription(`An emoji with the name \\`${finalName}\\` already exists.`)\r\n          .addFields(\r\n            { name: \"Existing Emoji\", value: existingEmoji.toString(), inline: true },\r\n            {\r\n              name: \"Created At\",\r\n              value: `<t:${Math.floor(existingEmoji.createdTimestamp / 1000)}:R>`,\r\n              inline: true,\r\n            },\r\n          ),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Check server emoji slots\r\n  const emojiSlots =\r\n    message.guild.premiumTier === 0 // GuildPremiumTier.None\r\n      ? 50\r\n      : message.guild.premiumTier === 1 // GuildPremiumTier.Tier1\r\n        ? 100\r\n        : message.guild.premiumTier === 2 // GuildPremiumTier.Tier2\r\n          ? 150\r\n          : 250;\r\n\r\n  if (message.guild.emojis.cache.size >= emojiSlots) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Emoji Limit Reached\")\r\n          .setDescription(`This server has reached its emoji limit (${emojiSlots}).`)\r\n          .addFields({\r\n            name: \"Possible Solutions\",\r\n            value: \"• Delete unused emojis\\n• Upgrade server boost level\",\r\n          }),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Create confirmation embed\r\n  const confirmationEmbed = new EmbedBuilder()\r\n    .setTitle(\"Confirm Emoji Addition\")\r\n    .setColor(\"Yellow\")\r\n    .setDescription(`You are about to add this emoji to the server`)\r\n    .addFields(\r\n      { name: \"Name\", value: finalName, inline: true },\r\n      { name: \"Type\", value: isAnimated ? \"Animated\" : \"Static\", inline: true },\r\n      { name: \"Preview\", value: `[View Image](${emojiUrl})`, inline: true },\r\n    )\r\n    .setThumbnail(emojiUrl);\r\n\r\n  const confirmationMessage = await message.channel.send({\r\n    embeds: [confirmationEmbed],\r\n    components: [\r\n      new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n        new ButtonBuilder().setCustomId(\"emoji-add-confirm\").setLabel(\"Confirm\").setStyle(ButtonStyle.Success),\r\n        new ButtonBuilder().setCustomId(\"emoji-add-cancel\").setLabel(\"Cancel\").setStyle(ButtonStyle.Danger),\r\n      ),\r\n    ],\r\n  });\r\n\r\n  const collector = confirmationMessage.createMessageComponentCollector({\r\n    filter: (i: MessageComponentInteraction) => i.user.id === message.author.id,\r\n    time: 60000,\r\n  });\r\n\r\n  collector.on(\"collect\", async (interaction: MessageComponentInteraction) => {\r\n    if (!message.guild) return;\r\n\r\n    if (interaction.customId === \"emoji-add-confirm\") {\r\n      try {\r\n        const createdEmoji = await message.guild?.emojis.create({\r\n          attachment: emojiUrl,\r\n          name: finalName,\r\n        });\r\n\r\n        await interaction.update({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"Emoji Added Successfully\")\r\n              .setDescription(`The emoji has been added to the server!`)\r\n              .addFields(\r\n                { name: \"Name\", value: createdEmoji.name ?? \"Unknown\", inline: true },\r\n                { name: \"ID\", value: createdEmoji.id, inline: true },\r\n                { name: \"Usage\", value: `\\`${createdEmoji.toString()}\\``, inline: true },\r\n              )\r\n              .setThumbnail(createdEmoji.url),\r\n          ],\r\n          components: [],\r\n        });\r\n      } catch (error) {\r\n        logWithLabel(\"error\", `Emoji add error: ${error}`);\r\n        await interaction.update({\r\n          embeds: [\r\n            new ErrorEmbed()\r\n              .setTitle(\"Failed to Add Emoji\")\r\n              .setDescription(\"An error occurred while adding the emoji.\"),\r\n          ],\r\n          components: [],\r\n        });\r\n      }\r\n    } else if (interaction.customId === \"emoji-add-cancel\") {\r\n      await interaction.update({\r\n        embeds: [confirmationEmbed.setTitle(\"Emoji Addition Cancelled\").setColor(\"Red\")],\r\n        components: [],\r\n      });\r\n    }\r\n  });\r\n\r\n  collector.on(\"end\", () => {\r\n    confirmationMessage.edit({ components: [] }).catch(() => {});\r\n  });\r\n\r\n  return;\r\n}\r\n\r\n/**\r\n * Shows detailed information about an emoji\r\n */\r\nasync function handleEmojiInfo(message: Message, args: string[], prefix: string) {\r\n  const emojiInput = args[0];\r\n\r\n  if (!emojiInput) {\r\n    return (message.channel as TextChannel).send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Missing Emoji\")\r\n          .setDescription(`Please provide an emoji to inspect.\\nExample: \\`${prefix}emoji info :thumbsup:\\``),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Check if it's a custom emoji\r\n  const customEmojiRegex = /<?(a)?:?(\\w{2,32}):(\\d{17,19})>?/gi;\r\n  const customEmojiMatch = emojiInput.match(customEmojiRegex);\r\n\r\n  // Check if it's a default emoji\r\n  const defaultEmojiRegex = /[\\p{Emoji}]/gu;\r\n  const isDefaultEmoji = defaultEmojiRegex.test(emojiInput);\r\n\r\n  if (!customEmojiMatch && !isDefaultEmoji) {\r\n    return (message.channel as TextChannel).send({\r\n      embeds: [\r\n        new ErrorEmbed().setTitle(\"Invalid Emoji\").setDescription(\"Please provide a valid emoji (custom or default).\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  if (customEmojiMatch) {\r\n    const [fullMatch] = customEmojiMatch;\r\n    const isAnimated = fullMatch.startsWith(\"<a:\");\r\n    const emojiName = fullMatch.split(\":\")[1];\r\n    const emojiId = fullMatch.split(\":\")[2].replace(\">\", \"\");\r\n    const extension = isAnimated ? \"gif\" : \"png\";\r\n    const emojiUrl = `https://cdn.discordapp.com/emojis/${emojiId}.${extension}`;\r\n    const isInServer = message.guild?.emojis.cache.has(emojiId);\r\n\r\n    // Calculate creation date from Snowflake ID\r\n    const timestamp = parseInt(emojiId) / 4194304 + 1420070400000;\r\n    const createdAt = new Date(timestamp);\r\n\r\n    const infoEmbed = new EmbedBuilder()\r\n      .setTitle(`Emoji Information: ${emojiName}`)\r\n      .setColor(\"Blue\")\r\n      .setThumbnail(emojiUrl)\r\n      .addFields(\r\n        { name: \"Name\", value: `\\`${emojiName}\\``, inline: true },\r\n        { name: \"ID\", value: `\\`${emojiId}\\``, inline: true },\r\n        { name: \"Type\", value: isAnimated ? \"Animated\" : \"Static\", inline: true },\r\n        { name: \"In This Server\", value: isInServer ? \"✅ Yes\" : \"❌ No\", inline: true },\r\n        {\r\n          name: \"Created At\",\r\n          value: `<t:${Math.floor(createdAt.getTime() / 1000)}:F>`,\r\n          inline: true,\r\n        },\r\n        { name: \"URL\", value: `[Click Here](${emojiUrl})`, inline: true },\r\n        { name: \"Identifier\", value: `\\`${fullMatch}\\`` },\r\n      );\r\n\r\n    if (isInServer) {\r\n      const emoji = message.guild?.emojis.cache.get(emojiId) as GuildEmoji;\r\n      infoEmbed.addFields(\r\n        { name: \"Managed\", value: emoji?.managed ? \"✅ Yes\" : \"❌ No\", inline: true },\r\n        { name: \"Available\", value: emoji?.available ? \"✅ Yes\" : \"❌ No\", inline: true },\r\n        {\r\n          name: \"Requires Colons\",\r\n          value: emoji?.requiresColons ? \"✅ Yes\" : \"❌ No\",\r\n          inline: true,\r\n        },\r\n      );\r\n    }\r\n\r\n    await (message.channel as TextChannel).send({ embeds: [infoEmbed] });\r\n  } else {\r\n    // Default emoji handling\r\n    const emojiCodePoints = Array.from(emojiInput)\r\n      .map((char) => char.codePointAt(0)?.toString(16))\r\n      .filter(Boolean)\r\n      .join(\"-\");\r\n\r\n    const emojiUrl = `https://twemoji.maxcdn.com/v/latest/72x72/${emojiCodePoints}.png`;\r\n\r\n    const infoEmbed = new EmbedBuilder()\r\n      .setTitle(\"Default Emoji Information\")\r\n      .setColor(\"Blue\")\r\n      .setThumbnail(emojiUrl)\r\n      .addFields(\r\n        { name: \"Emoji\", value: emojiInput, inline: true },\r\n        { name: \"Unicode\", value: `\\`\\\\u{${emojiCodePoints}}\\``, inline: true },\r\n        { name: \"URL\", value: `[Twemoji Image](${emojiUrl})`, inline: true },\r\n      );\r\n\r\n    await (message.channel as TextChannel).send({ embeds: [infoEmbed] });\r\n  }\r\n\r\n  return;\r\n}\r\n\r\n/**\r\n * Creates a jumbo (large) version of an emoji\r\n */\r\nasync function handleEmojiJumbo(message: Message, args: string[], prefix: string) {\r\n  if (!message.guild || !message.channel || message.author.bot || message.channel.type !== ChannelType.GuildText)\r\n    return;\r\n  const emojiInput = args[0];\r\n\r\n  if (!emojiInput) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Missing Emoji\")\r\n          .setDescription(`Please provide an emoji to enlarge.\\nExample: \\`${prefix}emoji jumbo :thumbsup:\\``),\r\n      ],\r\n    });\r\n  }\r\n\r\n  const customEmojiRegex = /<?(a)?:?(\\w{2,32}):(\\d{17,19})>?/gi;\r\n  const customEmojiMatch = emojiInput.match(customEmojiRegex);\r\n\r\n  const defaultEmojiRegex = /[\\p{Emoji}]/gu;\r\n  const isDefaultEmoji = defaultEmojiRegex.test(emojiInput);\r\n\r\n  if (!customEmojiMatch && !isDefaultEmoji) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed().setTitle(\"Invalid Emoji\").setDescription(\"Please provide a valid emoji (custom or default).\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  if (customEmojiMatch) {\r\n    const [fullMatch] = customEmojiMatch;\r\n    const emojiName = fullMatch.split(\":\")[1];\r\n    const emojiId = fullMatch.split(\":\")[2].replace(\">\", \"\");\r\n    const isAnimated = fullMatch.startsWith(\"<a:\");\r\n    const extension = isAnimated ? \"gif\" : \"png\";\r\n    const emojiUrl = `https://cdn.discordapp.com/emojis/${emojiId}.${extension}`;\r\n\r\n    const jumboEmbed = new EmbedBuilder().setTitle(`Jumbo Emoji: ${emojiName}`).setImage(emojiUrl).setColor(\"Random\");\r\n\r\n    await message.channel.send({ embeds: [jumboEmbed] });\r\n  } else {\r\n    // Default emoji jumbo\r\n    const emojiCodePoints = Array.from(emojiInput)\r\n      .map((char) => char.codePointAt(0)?.toString(16))\r\n      .filter(Boolean)\r\n      .join(\"-\");\r\n\r\n    const emojiUrl = `https://twemoji.maxcdn.com/v/latest/72x72/${emojiCodePoints}.png`;\r\n\r\n    const jumboEmbed = new EmbedBuilder()\r\n      .setTitle(\"Jumbo Emoji\")\r\n      .setImage(emojiUrl.replace(\"72x72\", \"512x512\")) // Get larger version\r\n      .setColor(\"Random\");\r\n\r\n    await message.channel.send({ embeds: [jumboEmbed] });\r\n  }\r\n\r\n  return;\r\n}\r\n\r\n/**\r\n * Lists server emojis with pagination\r\n */\r\nasync function handleEmojiList(client: any, message: any, args: string[]) {\r\n  const page = parseInt(args[0]) || 1;\r\n  const perPage = 10;\r\n  const emojis: Collection<string, GuildEmoji> = message.guild.emojis.cache;\r\n  const totalPages = Math.ceil(emojis.size / perPage);\r\n\r\n  if (emojis.size === 0) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed().setTitle(\"No Emojis Found\").setDescription(\"This server doesn't have any custom emojis.\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  if (page < 1 || page > totalPages) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed().setTitle(\"Invalid Page\").setDescription(`Please select a page between 1 and ${totalPages}`),\r\n      ],\r\n    });\r\n  }\r\n\r\n  const emojiList = Array.from(emojis.values())\r\n    .slice((page - 1) * perPage, page * perPage)\r\n    .map((emoji: GuildEmoji, index: number) => {\r\n      return `**${(page - 1) * perPage + index + 1}.** ${emoji.toString()} \\`${emoji.name}\\` - ID: \\`${emoji.id}\\``;\r\n    });\r\n\r\n  const listEmbed = new EmbedBuilder()\r\n    .setTitle(`Server Emojis (Page ${page}/${totalPages})`)\r\n    .setDescription(emojiList.join(\"\\n\"))\r\n    .setColor(\"Blue\")\r\n    .setFooter({\r\n      text: `Total emojis: ${emojis.size} • Animated: ${emojis.filter((e: GuildEmoji) => e.animated).size}`,\r\n    });\r\n\r\n  const row = new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n    new ButtonBuilder()\r\n      .setCustomId(`emoji-list-prev-${page}`)\r\n      .setLabel(\"Previous\")\r\n      .setStyle(ButtonStyle.Primary)\r\n      .setDisabled(page <= 1),\r\n    new ButtonBuilder()\r\n      .setCustomId(`emoji-list-next-${page}`)\r\n      .setLabel(\"Next\")\r\n      .setStyle(ButtonStyle.Primary)\r\n      .setDisabled(page >= totalPages),\r\n    new ButtonBuilder().setCustomId(\"emoji-list-close\").setLabel(\"Close\").setStyle(ButtonStyle.Danger),\r\n  );\r\n\r\n  const listMessage = await message.channel.send({\r\n    embeds: [listEmbed],\r\n    components: [row],\r\n  });\r\n\r\n  const collector = listMessage.createMessageComponentCollector({\r\n    filter: (i: MessageComponentInteraction) => i.user.id === message.author.id,\r\n    time: 60000,\r\n  });\r\n\r\n  collector.on(\"collect\", async (interaction: MessageComponentInteraction) => {\r\n    if (interaction.customId === \"emoji-list-close\") {\r\n      await interaction.update({ components: [] });\r\n      return;\r\n    }\r\n\r\n    const newPage = interaction.customId.includes(\"next\") ? page + 1 : page - 1;\r\n    await interaction.deferUpdate();\r\n    await handleEmojiList(client, message, [newPage.toString()]);\r\n    await listMessage.delete().catch(() => {});\r\n  });\r\n\r\n  collector.on(\"end\", () => {\r\n    listMessage.edit({ components: [] }).catch(() => {});\r\n  });\r\n}\r\n\r\n/**\r\n * Handles deleting an emoji from the server\r\n */\r\nasync function handleEmojiDelete(message: Message, args: string[]) {\r\n  if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n  const emojiInput = args.join(\" \");\r\n\r\n  if (!emojiInput) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Missing Emoji\")\r\n          .setDescription(\"Please provide an emoji to delete (name, ID, or mention).\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Try to find emoji by ID, name, or mention\r\n  let emoji = message.guild.emojis.cache.get(emojiInput) as GuildEmoji | undefined;\r\n  if (!emoji) {\r\n    emoji = message.guild.emojis.cache.find(\r\n      (e: GuildEmoji) => e.name?.toLowerCase() === emojiInput.toLowerCase() || e.toString() === emojiInput,\r\n    );\r\n  }\r\n\r\n  if (!emoji) {\r\n    return message.channel.send({\r\n      embeds: [new ErrorEmbed().setTitle(\"Emoji Not Found\").setDescription(\"Couldn't find that emoji in this server.\")],\r\n    });\r\n  }\r\n\r\n  // Create confirmation embed\r\n  const confirmationEmbed = new EmbedBuilder()\r\n    .setTitle(\"Confirm Emoji Deletion\")\r\n    .setColor(\"Red\")\r\n    .setDescription(`You are about to delete the emoji **${emoji.name}**`)\r\n    .addFields(\r\n      { name: \"Emoji\", value: emoji.toString(), inline: true },\r\n      { name: \"ID\", value: emoji.id, inline: true },\r\n      {\r\n        name: \"Created At\",\r\n        value: `<t:${Math.floor(emoji.createdTimestamp / 1000)}:R>`,\r\n        inline: true,\r\n      },\r\n    )\r\n    .setThumbnail(emoji.imageURL());\r\n\r\n  const confirmationMessage = await message.channel.send({\r\n    embeds: [confirmationEmbed],\r\n    components: [\r\n      new ActionRowBuilder<ButtonBuilder>().addComponents(\r\n        new ButtonBuilder().setCustomId(\"emoji-delete-confirm\").setLabel(\"Delete\").setStyle(ButtonStyle.Danger),\r\n        new ButtonBuilder().setCustomId(\"emoji-delete-cancel\").setLabel(\"Cancel\").setStyle(ButtonStyle.Secondary),\r\n      ),\r\n    ],\r\n  });\r\n\r\n  const collector = confirmationMessage.createMessageComponentCollector({\r\n    filter: (i: MessageComponentInteraction) => i.user.id === message.author.id,\r\n    time: 60000,\r\n  });\r\n\r\n  collector.on(\"collect\", async (interaction: MessageComponentInteraction) => {\r\n    if (interaction.customId === \"emoji-delete-confirm\") {\r\n      try {\r\n        const deletedName = emoji.name;\r\n        await emoji.delete();\r\n\r\n        await interaction.update({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"Emoji Deleted\")\r\n              .setDescription(`The emoji \\`${deletedName}\\` has been deleted.`)\r\n              .setColor(\"Green\"),\r\n          ],\r\n          components: [],\r\n        });\r\n      } catch (error) {\r\n        logWithLabel(\"error\", `Emoji delete error: ${error}`);\r\n        await interaction.update({\r\n          embeds: [\r\n            new ErrorEmbed().setTitle(\"Deletion Failed\").setDescription(\"An error occurred while deleting the emoji.\"),\r\n          ],\r\n          components: [],\r\n        });\r\n      }\r\n    } else if (interaction.customId === \"emoji-delete-cancel\") {\r\n      await interaction.update({\r\n        embeds: [\r\n          confirmationEmbed\r\n            .setTitle(\"Deletion Cancelled\")\r\n            .setDescription(\"The emoji was not deleted.\")\r\n            .setColor(\"Yellow\"),\r\n        ],\r\n        components: [],\r\n      });\r\n    }\r\n  });\r\n\r\n  collector.on(\"end\", () => {\r\n    confirmationMessage.edit({ components: [] }).catch(() => {});\r\n  });\r\n\r\n  return;\r\n}\r\n\r\n/**\r\n * Handles renaming an emoji\r\n */\r\nasync function handleEmojiRename(message: Message, args: string[]) {\r\n  if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n  const emojiInput = args[0];\r\n  const newName = args[1];\r\n\r\n  if (!emojiInput || !newName) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Missing Arguments\")\r\n          .setDescription(\"Please provide an emoji and a new name.\\nExample: `emoji rename :oldname: newname`\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  if (newName.length < 2 || newName.length > 32) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Invalid Name\")\r\n          .setDescription(\"Emoji names must be between 2 and 32 characters long.\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Try to find emoji by ID, name, or mention\r\n  let emoji = message.guild.emojis.cache.get(emojiInput) as GuildEmoji | undefined;\r\n  if (!emoji) {\r\n    emoji = message.guild.emojis.cache.find(\r\n      (e: GuildEmoji) => e.name?.toLowerCase() === emojiInput.toLowerCase() || e.toString() === emojiInput,\r\n    );\r\n  }\r\n\r\n  if (!emoji) {\r\n    return message.channel.send({\r\n      embeds: [new ErrorEmbed().setTitle(\"Emoji Not Found\").setDescription(\"Couldn't find that emoji in this server.\")],\r\n    });\r\n  }\r\n\r\n  // Check if new name already exists\r\n  if (message.guild.emojis.cache.some((e: GuildEmoji) => e.name?.toLowerCase() === newName.toLowerCase())) {\r\n    return message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed()\r\n          .setTitle(\"Name Exists\")\r\n          .setDescription(`An emoji with the name \\`${newName}\\` already exists.`),\r\n      ],\r\n    });\r\n  }\r\n\r\n  try {\r\n    const oldName = emoji.name;\r\n    await emoji.edit({ name: newName });\r\n\r\n    await message.channel.send({\r\n      embeds: [\r\n        new EmbedCorrect()\r\n          .setTitle(\"Emoji Renamed\")\r\n          .setDescription(`Successfully renamed the emoji.`)\r\n          .addFields(\r\n            { name: \"Old Name\", value: oldName ?? \"Unknown\", inline: true },\r\n            { name: \"New Name\", value: newName, inline: true },\r\n            { name: \"Emoji\", value: emoji.toString(), inline: true },\r\n          )\r\n          .setThumbnail(emoji.imageURL()),\r\n      ],\r\n    });\r\n  } catch (error) {\r\n    logWithLabel(\"error\", `Emoji rename error: ${error}`);\r\n    message.channel.send({\r\n      embeds: [\r\n        new ErrorEmbed().setTitle(\"Rename Failed\").setDescription(\"An error occurred while renaming the emoji.\"),\r\n      ],\r\n    });\r\n  }\r\n\r\n  return;\r\n}\r\n\r\n/**\r\n * Shows help information for the emoji command\r\n */\r\nasync function showEmojiHelp(message: Message, prefix: string) {\r\n  if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n  const helpEmbed = new EmbedBuilder()\r\n    .setTitle(\"🎭 Emoji Command Help\")\r\n    .setColor(\"Blue\")\r\n    .setDescription(\"Comprehensive emoji management system for your server\")\r\n    .addFields(\r\n      {\r\n        name: \"Add Emoji\",\r\n        value: `\\`${prefix}emoji add <emoji> [name]\\`\\nAdds a custom emoji to the server. You can optionally specify a custom name.`,\r\n      },\r\n      {\r\n        name: \"Emoji Info\",\r\n        value: `\\`${prefix}emoji info <emoji>\\`\\nShows detailed information about an emoji (works for both custom and default emojis).`,\r\n      },\r\n      {\r\n        name: \"Jumbo Emoji\",\r\n        value: `\\`${prefix}emoji jumbo <emoji>\\`\\nDisplays a large version of the emoji.`,\r\n      },\r\n      {\r\n        name: \"List Emojis\",\r\n        value: `\\`${prefix}emoji list [page]\\`\\nLists all server emojis with pagination.`,\r\n      },\r\n      {\r\n        name: \"Delete Emoji\",\r\n        value: `\\`${prefix}emoji delete <emoji>\\`\\nRemoves an emoji from the server.`,\r\n      },\r\n      {\r\n        name: \"Rename Emoji\",\r\n        value: `\\`${prefix}emoji rename <emoji> <new_name>\\`\\nChanges the name of an existing emoji.`,\r\n      },\r\n    )\r\n    .setFooter({ text: `Required permissions: Manage Emojis and Stickers` });\r\n\r\n  await message.channel.send({ embeds: [helpEmbed] });\r\n}\r\n\r\nexport = emojisCommand;\r\n"],"names":[],"mappings":"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","debug_id":"57d5dbdc-5381-5267-9d79-5d8528c6648c"}