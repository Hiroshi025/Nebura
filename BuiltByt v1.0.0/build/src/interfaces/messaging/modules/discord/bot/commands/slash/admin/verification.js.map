{"version":3,"file":"verification.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/admin/verification.ts"],"sourceRoot":"/","sourcesContent":["import { PermissionFlagsBits, SlashCommandBuilder } from \"discord.js\";\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setName(\"verification\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"verificacion\",\r\n    })\r\n    .setDescription(\"🧶 Manage the verification module\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"🧶 Administra el módulo de verificación\",\r\n    })\r\n    .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild)\r\n    .addSubcommand((subcommand) =>\r\n      subcommand\r\n        .setName(\"configure\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"configurar\",\r\n        })\r\n        .setDescription(\"🧶 Configure the verification module\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"🧶 Configura el módulo de verificación\",\r\n        })\r\n        .addBooleanOption((options) =>\r\n          options\r\n            .setName(\"enable\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"activar\",\r\n            })\r\n            .setDescription(\"🧶 Enable or disable the verification system\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"🧶 Habilita o deshabilita el sistema de verificación\",\r\n            })\r\n            .setRequired(true),\r\n        )\r\n        .addRoleOption((options) =>\r\n          options\r\n            .setName(\"role\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"rol\",\r\n            })\r\n            .setDescription(\"🧶 Choose a role to give to verifiers\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"🧶 Elige un rol para dar a los verificadores\",\r\n            })\r\n            .setRequired(true),\r\n        ),\r\n    )\r\n    .addSubcommand((subcommand) => subcommand.setName(\"delete\").setDescription(\"🧶 Delete the verification data.\")),\r\n  async (client, interaction) => {\r\n    if (!interaction.guild || !interaction.channel || !interaction.member || !client.user) return;\r\n    const subcommand = interaction.options.getSubcommand();\r\n    switch (subcommand) {\r\n      case \"configure\":\r\n        {\r\n          const { options, guild } = interaction;\r\n          const isVerificationEnabled = options.getBoolean(\"enable\") ?? false;\r\n          const verificationdRole = options.getRole(\"role\")?.id ?? \"\";\r\n          const guildId = guild?.id ?? \"\";\r\n\r\n          try {\r\n            const settings = await main.prisma.myGuild.findUnique({\r\n              where: { id: guildId },\r\n              select: { id: true, captcha: true },\r\n            });\r\n            if (settings) {\r\n              await main.prisma.captcha.update({\r\n                where: { id: guildId },\r\n                data: { isEnabled: isVerificationEnabled, role: verificationdRole },\r\n              });\r\n            } else {\r\n              await main.prisma.myGuild.create({\r\n                data: {\r\n                  guildId: guildId,\r\n                  discordId: client.user.id,\r\n                  captcha: {\r\n                    create: {\r\n                      isEnabled: isVerificationEnabled,\r\n                      role: verificationdRole,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }\r\n\r\n            interaction.reply({\r\n              embeds: [\r\n                new EmbedCorrect().setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guild.id, \"error\")} The verification module has been updated successfully.`,\r\n                    `**Enabled:** ${isVerificationEnabled ? \"Yes\" : \"No\"}`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n              ],\r\n              flags: \"Ephemeral\",\r\n            });\r\n          } catch (error: any) {\r\n            console.log(error);\r\n            interaction.reply({\r\n              embeds: [\r\n                new ErrorEmbed().setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while updating the verification module.`,\r\n                    `**Error:** ${error.message}`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n              ],\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n        }\r\n        break;\r\n      case \"delete\":\r\n        {\r\n          const guildId = interaction.guild.id;\r\n\r\n          try {\r\n            await main.prisma.captcha.deleteMany({\r\n              where: { guild: { id: guildId } },\r\n            });\r\n\r\n            await main.prisma.myGuild.delete({\r\n              where: { id: guildId },\r\n            });\r\n\r\n            interaction.reply({\r\n              embeds: [\r\n                new EmbedCorrect().setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guild.id, \"correct\")} The data has been deleted successfully.`,\r\n                    `**Guild:** ${interaction.guild.name} (\\`${interaction.guild.id}\\`)`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n              ],\r\n              flags: \"Ephemeral\",\r\n            });\r\n          } catch (error: any) {\r\n            interaction.reply({\r\n              embeds: [\r\n                new ErrorEmbed().setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while deleting the data.`,\r\n                    `**Error:** ${error.message}`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n              ],\r\n              flags: \"Ephemeral\",\r\n            });\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"121bfeff-d556-5051-9c58-4f82e7dcf0d0"}