{"version":3,"file":"level.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/public/level.ts"],"sourceRoot":"/","sourcesContent":["import { Profile } from \"discord-arts\";\r\nimport { AttachmentBuilder, EmbedBuilder, GuildMember, SlashCommandBuilder } from \"discord.js\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport {\r\n\tgetTopUsers\r\n} from \"@/interfaces/messaging/modules/discord/structure/utils/ranking/helpers\";\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setName(\"levels\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"niveles\",\r\n    })\r\n    .setDescription(\"üëæ Check your level and experience\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"üëæ Comprueba tu nivel y experiencia\",\r\n    })\r\n    .addSubcommand((subcommand) =>\r\n      subcommand\r\n        .setName(\"view\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"ver\",\r\n        })\r\n        .setDescription(\"üëæ View your or another member‚Äôs level and exp progress\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"üëæ Ver tu progreso de nivel y experiencia o el de otro miembro\",\r\n        })\r\n        .addUserOption((option) =>\r\n          option\r\n            .setName(\"member\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"miembro\",\r\n            })\r\n            .setDescription(\"üëæ Member you‚Äôd like to view\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"üëæ Miembro del que te gustar√≠a ver\",\r\n            }),\r\n        ),\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n      subcommand\r\n        .setName(\"top\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"top\",\r\n        })\r\n        .setDescription(\"üèÜ View the top level ranking with achievements\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"üèÜ Ver el ranking top de niveles con logros\",\r\n        }),\r\n    ),\r\n  async (client, interaction) => {\r\n    if (!interaction.guild || !interaction.channel || !(interaction.member instanceof GuildMember)) return;\r\n\r\n    await interaction.deferReply(); // Ensure the response doesn't take too long\r\n\r\n    const subcommand = interaction.options.getSubcommand();\r\n\r\n    switch (subcommand) {\r\n      case \"view\": {\r\n        try {\r\n          const targetMember = (interaction.options.getMember(\"member\") as GuildMember) || interaction.member;\r\n\r\n          // Get user data from the database\r\n          const user = await main.prisma.userLevel.findFirst({\r\n            where: {\r\n              userId: targetMember.user.id,\r\n              guildId: interaction.guild.id,\r\n            },\r\n          });\r\n\r\n          if (!user) {\r\n            await interaction.followUp({\r\n              embeds: [\r\n                new ErrorEmbed()\r\n                  .setColor(\"Red\")\r\n                  .setDescription(\r\n                    `${client.getEmoji(interaction.guild.id, \"error\")} This user hasn't sent any messages yet. Start chatting to appear in the leaderboard.`,\r\n                  ),\r\n              ],\r\n            });\r\n            return;\r\n          }\r\n\r\n          // Visual data for the profile card\r\n          const buffer = await Profile(targetMember.id, {\r\n            borderColor: user.borderColor || \"#000000\",\r\n            presenceStatus: targetMember.presence?.status || \"offline\",\r\n            customBackground: user.background || undefined,\r\n            moreBackgroundBlur: !!user.blur,\r\n            rankData: {\r\n              currentXp: user.xp || 0,\r\n              requiredXp: user.level * 100 || 100,\r\n              level: user.level || 1,\r\n              barColor: user.barColor || \"#087996\",\r\n            },\r\n          });\r\n\r\n          const attachment = new AttachmentBuilder(buffer, {\r\n            name: \"profile.png\",\r\n          });\r\n\r\n          // Respond with the profile card and level details\r\n          await interaction.followUp({\r\n            embeds: [\r\n              new EmbedCorrect()\r\n                .setColor(\"Blue\")\r\n                .setDescription(`> **Level:** ${user.level || 1}\\n> **Experience:** ${user.xp || 0}`)\r\n                .setImage(`attachment://profile.png`),\r\n            ],\r\n            files: [attachment],\r\n          });\r\n        } catch (error) {\r\n          console.error(error);\r\n          await interaction.followUp({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setColor(\"Red\")\r\n                .setDescription(\r\n                  `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while fetching user data. Please try again later.`,\r\n                ),\r\n            ],\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case \"top\": {\r\n        try {\r\n          // Get the top 10 users by level and XP\r\n          const topUsers = await getTopUsers(interaction.guild.id, \"xp\", 10);\r\n\r\n          if (!topUsers || topUsers.length === 0) {\r\n            await interaction.followUp({\r\n              embeds: [\r\n                new ErrorEmbed()\r\n                  .setColor(\"Red\")\r\n                  .setDescription(\r\n                    `${client.getEmoji(interaction.guild.id, \"error\")} There are no users in the ranking yet.`,\r\n                  ),\r\n              ],\r\n            });\r\n            return;\r\n          }\r\n\r\n          // Get achievement details for each user\r\n          const usersWithAchievements = await Promise.all(\r\n            topUsers.map(async (user: any, i: any) => {\r\n              const member = await interaction.guild!.members.fetch(user.userId).catch(() => null);\r\n              const achievements = await main.prisma.userAchievements.findUnique({\r\n                where: { userId_guildId: { userId: user.userId, guildId: interaction.guild!.id } },\r\n              });\r\n              return {\r\n                position: i + 1,\r\n                user,\r\n                member,\r\n                achievements: achievements?.achievements ?? [],\r\n              };\r\n            }),\r\n          );\r\n\r\n          // Build the ranking text\r\n          const rankingText = usersWithAchievements\r\n            .map(\r\n              (entry: any) =>\r\n                `**#${entry.position}** ${entry.member ? entry.member.user.tag : `<@${entry.user.userId}>`} - Level: **${entry.user.level}**${entry.user.prestige > 0 ? ` (P${entry.user.prestige})` : \"\"} - XP: **${entry.user.xp}**\\nAchievements: ${\r\n                  entry.achievements.length > 0 ? entry.achievements.map(() => `üèÖ`).join(\"\") : \"None\"\r\n                }`,\r\n            )\r\n            .join(\"\\n\\n\");\r\n\r\n          // Create the ranking embed\r\n          const embed = new EmbedBuilder()\r\n            .setTitle(\"üèÜ Level Ranking\")\r\n            .setColor(\"Gold\")\r\n            .setDescription(rankingText)\r\n            .setFooter({ text: \"Keep participating to climb the ranking!\" });\r\n\r\n          await interaction.followUp({ embeds: [embed] });\r\n        } catch (error) {\r\n          console.error(error);\r\n          await interaction.followUp({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setColor(\"Red\")\r\n                .setDescription(\r\n                  `${client.getEmoji(interaction.guild.id, \"error\")} An error occurred while fetching the ranking.`,\r\n                ),\r\n            ],\r\n          });\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"be7f8615-71c4-5fbe-8d7e-fe11ee355313"}