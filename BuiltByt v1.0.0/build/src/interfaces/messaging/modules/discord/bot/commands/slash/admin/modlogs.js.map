{"version":3,"file":"modlogs.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/slash/admin/modlogs.ts"],"sourceRoot":"/","sourcesContent":["import { ChannelType, EmbedBuilder, PermissionFlagsBits, SlashCommandBuilder } from \"discord.js\";\r\n\r\nimport { Command } from \"@/interfaces/messaging/modules/discord/structure/utils/builders\";\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\n\r\nexport default new Command(\r\n  new SlashCommandBuilder()\r\n    .setName(\"modlogs\")\r\n    .setNameLocalizations({\r\n      \"es-ES\": \"modlogs\",\r\n    })\r\n    .setDescription(\"Setup or edit the modlogs.\")\r\n    .setDescriptionLocalizations({\r\n      \"es-ES\": \"Configura o edita los modlogs.\",\r\n    })\r\n    .setDefaultMemberPermissions(PermissionFlagsBits.ModerateMembers)\r\n    .addSubcommand((subcommand) =>\r\n      subcommand\r\n        .setName(\"setup\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"configurar\",\r\n        })\r\n        .setDescription(\"Setup the modlogs.\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"Configura los modlogs.\",\r\n        })\r\n        .addChannelOption((option) =>\r\n          option\r\n            .setName(\"channel\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"canal\",\r\n            })\r\n            .setDescription(\"Channel to send the message to.\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"Canal para enviar el mensaje.\",\r\n            })\r\n            .addChannelTypes(ChannelType.GuildText)\r\n            .setRequired(true),\r\n        ),\r\n    )\r\n    .addSubcommand((subcommand) =>\r\n      subcommand\r\n        .setName(\"replace_channel\")\r\n        .setNameLocalizations({\r\n          \"es-ES\": \"reemplazar\",\r\n        })\r\n        .setDescription(\"Replace the channel for the modlogs.\")\r\n        .setDescriptionLocalizations({\r\n          \"es-ES\": \"Reemplaza el canal para los modlogs.\",\r\n        })\r\n        .addChannelOption((option) =>\r\n          option\r\n            .setName(\"channel\")\r\n            .setNameLocalizations({\r\n              \"es-ES\": \"canal\",\r\n            })\r\n            .setDescription(\"Channel to send the message to.\")\r\n            .setDescriptionLocalizations({\r\n              \"es-ES\": \"Canal para enviar el mensaje.\",\r\n            })\r\n            .addChannelTypes(ChannelType.GuildText)\r\n            .setRequired(true),\r\n        ),\r\n    )\r\n    .addSubcommand((subcommand) => subcommand.setName(\"delete\").setDescription(\"Deletes config for the modlogs.\")),\r\n  async (client, interaction) => {\r\n    const getSubCommand = interaction.options.getSubcommand();\r\n\r\n    switch (getSubCommand) {\r\n      case \"setup\": {\r\n        const { options, guild } = interaction;\r\n        const channel = options.getChannel(\"channel\");\r\n\r\n        if (!guild || !channel)\r\n          return interaction.reply({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setTitle(\"Error Modlogs\")\r\n                .setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guildId as string, \"error\")} You need to specify a channel for the modlogs!`,\r\n                    `Please make sure that the channel is a text channel.`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n            ],\r\n          });\r\n\r\n        const existingModlog = await main.prisma.serverModlog.findFirst({\r\n          where: { guildId: guild.id },\r\n        });\r\n\r\n        if (existingModlog) {\r\n          interaction.reply({\r\n            content: \"Modlogs are already setup!\",\r\n            flags: \"Ephemeral\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        await main.prisma.serverModlog.create({\r\n          data: {\r\n            guildId: guild.id,\r\n            channelId: channel.id,\r\n          },\r\n        });\r\n\r\n        await interaction.reply({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"Modlogs setup!\")\r\n              .setDescription(`Modlogs have been successfully setup in <#${channel.id}>`)\r\n              .setColor(0x00ff00),\r\n          ],\r\n          flags: \"Ephemeral\",\r\n        });\r\n        break;\r\n      }\r\n\r\n      case \"replace_channel\": {\r\n        const { options, guild } = interaction;\r\n        const channel = options.getChannel(\"channel\");\r\n\r\n        if (!guild || !channel)\r\n          return interaction.reply({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setTitle(\"Error Modlogs\")\r\n                .setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guildId as string, \"error\")} You need to specify a channel for the modlogs!`,\r\n                    `Please make sure that the channel is a text channel.`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n            ],\r\n          });\r\n\r\n        const existingModlog = await main.prisma.serverModlog.findFirst({\r\n          where: { guildId: guild.id },\r\n        });\r\n\r\n        if (!existingModlog) {\r\n          interaction.reply({\r\n            content: \"Modlogs not setup! To setup run `/modlogs setup`\",\r\n            flags: \"Ephemeral\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        await main.prisma.serverModlog.update({\r\n          where: { guildId: guild.id }, // Cambiado de id: existingModlog.id a guildId: guild.id\r\n          data: { channelId: channel.id },\r\n        });\r\n\r\n        await interaction.reply({\r\n          embeds: [\r\n            new EmbedCorrect()\r\n              .setTitle(\"Modlogs channel replaced!\")\r\n              .setDescription(`Modlogs channel has been successfully replaced in <#${channel.id}>`)\r\n              .setColor(0x00ff00),\r\n          ],\r\n          flags: \"Ephemeral\",\r\n        });\r\n        break;\r\n      }\r\n\r\n      case \"delete\": {\r\n        const { guild } = interaction;\r\n\r\n        if (!guild)\r\n          return interaction.reply({\r\n            embeds: [\r\n              new ErrorEmbed()\r\n                .setTitle(\"Error Modlogs\")\r\n                .setDescription(\r\n                  [\r\n                    `${client.getEmoji(interaction.guildId as string, \"error\")} You need to specify a channel for the modlogs!`,\r\n                    `Please make sure that the channel is a text channel.`,\r\n                  ].join(\"\\n\"),\r\n                ),\r\n            ],\r\n          });\r\n\r\n        const existingModlog = await main.prisma.serverModlog.findFirst({\r\n          where: { guildId: guild.id },\r\n        });\r\n\r\n        if (!existingModlog) {\r\n          interaction.reply({\r\n            content: \"Modlogs not setup! To setup run `/modlogs setup`\",\r\n            flags: \"Ephemeral\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        await main.prisma.serverModlog.delete({\r\n          where: { guildId: guild.id }, // Cambiado de id: existingModlog.id a guildId: guild.id\r\n        });\r\n\r\n        await interaction.reply({\r\n          embeds: [\r\n            new EmbedBuilder()\r\n              .setTitle(\"Modlogs deleted!\")\r\n              .setDescription(`Modlogs have been successfully deleted!`)\r\n              .setColor(0x00ff00),\r\n          ],\r\n          flags: \"Ephemeral\",\r\n        });\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return;\r\n  },\r\n);\r\n"],"names":[],"mappings":"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","debug_id":"f8a198de-5e66-5dc6-8435-da218c1bab43"}