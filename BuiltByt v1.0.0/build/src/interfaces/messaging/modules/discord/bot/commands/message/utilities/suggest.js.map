{"version":3,"file":"suggest.js","sources":["src/interfaces/messaging/modules/discord/bot/commands/message/utilities/suggest.ts"],"sourceRoot":"/","sourcesContent":["import {\r\n\tActionRowBuilder, ButtonBuilder, ButtonStyle, ChannelType, EmbedBuilder, Message, ModalBuilder,\r\n\tTextInputBuilder, TextInputStyle\r\n} from \"discord.js\";\r\n\r\nimport { main } from \"@/main\";\r\nimport { EmbedCorrect, ErrorEmbed } from \"@/shared/adapters/extends/embeds.extend\";\r\nimport { clientID } from \"@/shared/class/DB\";\r\nimport { MyClient } from \"@modules/discord/client\";\r\nimport { Precommand } from \"@typings/modules/discord\";\r\n\r\nconst suggestCommand: Precommand = {\r\n  name: \"suggest\",\r\n  description: \"Submit a suggestion to the server\",\r\n  examples: [\"suggest\", 'suggest \"Improve the bot\" \"Add more features\"'],\r\n  nsfw: false,\r\n  owner: false,\r\n  cooldown: 30,\r\n  maintenance: true,\r\n  aliases: [\"suggestion\", \"proposal\"],\r\n  botpermissions: [\"SendMessages\", \"EmbedLinks\"],\r\n  permissions: [\"SendMessages\"],\r\n  async execute(client, message, args) {\r\n    if (!message.guild || !message.channel || message.channel.type !== ChannelType.GuildText) return;\r\n\r\n    // Check if suggestion channel is set up\r\n    const myGuild = await main.prisma.myGuild.findUnique({\r\n      where: { guildId: message.guild.id },\r\n    });\r\n\r\n    const data = await main.DB.findClient(clientID);\r\n    if (!data || data.maintenance) {\r\n      return message.reply({\r\n        embeds: [\r\n          new ErrorEmbed()\r\n            .setTitle(\"Maintenance Mode\")\r\n            .setDescription(\"The bot is currently under maintenance. Please try again later.\"),\r\n        ],\r\n      });\r\n    }\r\n\r\n    if (!myGuild?.suggestChannel) {\r\n      return message.reply({\r\n        embeds: [\r\n          new ErrorEmbed().setTitle(\"Error\").setDescription(\"This server doesn't have a suggestions channel set up.\"),\r\n        ],\r\n      });\r\n    }\r\n\r\n    // If arguments are provided, use them as the suggestion\r\n    if (args.length > 0) {\r\n      const suggestionText = args.join(\" \");\r\n      return sendSuggestion(client, message, suggestionText);\r\n    }\r\n\r\n    // Create interactive buttons\r\n    const createButton = new ButtonBuilder()\r\n      .setCustomId(\"suggest_create\")\r\n      .setLabel(\"Create Suggestion\")\r\n      .setStyle(ButtonStyle.Primary)\r\n      .setEmoji(\"üìù\");\r\n\r\n    const helpButton = new ButtonBuilder()\r\n      .setCustomId(\"suggest_help\")\r\n      .setLabel(\"How to Suggest\")\r\n      .setStyle(ButtonStyle.Secondary)\r\n      .setEmoji(\"‚ùì\");\r\n\r\n    const row = new ActionRowBuilder<ButtonBuilder>().addComponents(createButton, helpButton);\r\n\r\n    const embed = new EmbedCorrect()\r\n      .setTitle(\"Suggestion System\")\r\n      .setDescription(\"Would you like to create a new suggestion?\")\r\n      .addFields({\r\n        name: \"Guidelines\",\r\n        value: \"‚Ä¢ Be clear and concise\\n‚Ä¢ Provide details if needed\\n‚Ä¢ Check for duplicates first\",\r\n        inline: false,\r\n      });\r\n\r\n    const reply = await message.reply({\r\n      embeds: [embed],\r\n      components: [row],\r\n    });\r\n\r\n    // Create collector for button interactions\r\n    const collector = reply.createMessageComponentCollector({\r\n      filter: (i) => i.user.id === message.author.id,\r\n      time: 60000,\r\n    });\r\n\r\n    collector.on(\"collect\", async (interaction) => {\r\n      if (!interaction.isButton()) return;\r\n\r\n      switch (interaction.customId) {\r\n        case \"suggest_create\":\r\n          // Create modal for suggestion input\r\n          const modal = new ModalBuilder().setCustomId(\"suggest_modal\").setTitle(\"Create Suggestion\");\r\n\r\n          const suggestionInput = new TextInputBuilder()\r\n            .setCustomId(\"suggest_text\")\r\n            .setLabel(\"Your suggestion\")\r\n            .setStyle(TextInputStyle.Paragraph)\r\n            .setRequired(true)\r\n            .setMinLength(10)\r\n            .setMaxLength(2000)\r\n            .setPlaceholder(\"Describe your suggestion in detail...\");\r\n\r\n          const firstActionRow = new ActionRowBuilder<TextInputBuilder>().addComponents(suggestionInput);\r\n          modal.addComponents(firstActionRow);\r\n\r\n          await interaction.showModal(modal);\r\n\r\n          // Handle modal submission\r\n          try {\r\n            const modalInteraction = await interaction.awaitModalSubmit({\r\n              time: 300000,\r\n              filter: (i) => i.user.id === interaction.user.id,\r\n            });\r\n\r\n            const suggestionText = modalInteraction.fields.getTextInputValue(\"suggest_text\");\r\n            await sendSuggestion(client, message, suggestionText);\r\n\r\n            await modalInteraction.reply({\r\n              content: \"Your suggestion has been submitted!\",\r\n              ephemeral: true,\r\n            });\r\n          } catch (error) {\r\n            console.error(\"Modal error:\", error);\r\n          }\r\n          break;\r\n\r\n        case \"suggest_help\":\r\n          const helpEmbed = new EmbedBuilder()\r\n            .setTitle(\"Suggestion Help\")\r\n            .setDescription(\"Here's how to make effective suggestions:\")\r\n            .addFields(\r\n              {\r\n                name: \"1. Be Specific\",\r\n                value: \"Clearly describe what you're suggesting.\",\r\n                inline: false,\r\n              },\r\n              {\r\n                name: \"2. Explain Benefits\",\r\n                value: \"How will this improve the server/bot?\",\r\n                inline: false,\r\n              },\r\n              {\r\n                name: \"3. Provide Examples\",\r\n                value: \"If possible, show examples of what you mean.\",\r\n                inline: false,\r\n              },\r\n              {\r\n                name: \"4. Check for Duplicates\",\r\n                value: \"Make sure your suggestion hasn't been made before.\",\r\n                inline: false,\r\n              },\r\n            )\r\n            .setFooter({ text: \"You can also type your suggestion after the command, like: !suggest [your idea]\" });\r\n\r\n          await interaction.reply({\r\n            embeds: [helpEmbed],\r\n            ephemeral: true,\r\n          });\r\n          break;\r\n      }\r\n    });\r\n\r\n    collector.on(\"end\", () => {\r\n      reply\r\n        .edit({\r\n          components: [],\r\n        })\r\n        .catch(() => {});\r\n    });\r\n  },\r\n} as Precommand;\r\n\r\n// Helper method to send the suggestion to the designated channel\r\nasync function sendSuggestion(_client: MyClient, message: Message<boolean>, suggestionText: string) {\r\n  const myGuild = await main.prisma.myGuild.findUnique({\r\n    where: { guildId: message.guild?.id },\r\n  });\r\n\r\n  if (!myGuild?.suggestChannel) return;\r\n\r\n  const suggestChannel = message.guild?.channels.cache.get(myGuild.suggestChannel);\r\n  if (!suggestChannel || suggestChannel.type !== ChannelType.GuildText) return;\r\n\r\n  // Create the suggestion in the designated channel\r\n  await suggestChannel.send({\r\n    content: suggestionText,\r\n    files: message.attachments.map((a) => a.url),\r\n  });\r\n\r\n  // Delete the original command message if possible\r\n  if (message.deletable) {\r\n    await message.delete().catch(() => {});\r\n  }\r\n}\r\n\r\nexport = suggestCommand;\r\n"],"names":[],"mappings":"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","debug_id":"7c85c18a-c73b-5a69-9a0f-80c6d888e7dc"}