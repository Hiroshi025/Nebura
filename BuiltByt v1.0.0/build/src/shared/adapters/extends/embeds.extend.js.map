{"version":3,"file":"embeds.extend.js","sources":["src/shared/adapters/extends/embeds.extend.ts"],"sourceRoot":"/","sourcesContent":["import { codeBlock, EmbedBuilder, version as discordVersion } from \"discord.js\";\r\n\r\nimport { client } from \"@/main\";\r\nimport { config } from \"@utils/config\";\r\n\r\n/**\r\n * A custom embed class for handling error messages in the application.\r\n * Extends the `EmbedBuilder` class from Discord.js.\r\n */\r\nexport class ErrorEmbed extends EmbedBuilder {\r\n  /**\r\n   * Constructs a new `ErrorEmbed` instance.\r\n   * Automatically sets the footer with response time, Discord.js version, and Node.js version.\r\n   */\r\n  constructor() {\r\n    super();\r\n    const time = (Date.now() - client.readyAt!.getTime()) / 1000 / 1000;\r\n    const responseTime = Math.round(time);\r\n    this.setFooter({\r\n      text: this.truncateText(\r\n        `Response: ${responseTime}ms | Discord.js: ${discordVersion} | Node.js: ${process.versions.node}`,\r\n        2048,\r\n      ),\r\n    });\r\n    this.setTimestamp();\r\n  }\r\n\r\n  /**\r\n   * Formats a given date into `DD/MM/YYYY` format.\r\n   * @param date - The date to format.\r\n   * @returns A string representing the formatted date.\r\n   */\r\n  private formatDate(date: Date): string {\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  }\r\n\r\n  /**\r\n   * Truncates a string if it exceeds the specified maximum length.\r\n   * Adds an indicator showing the number of characters truncated.\r\n   * @param text - The text to truncate.\r\n   * @param maxLength - The maximum allowed length for the text.\r\n   * @returns The truncated text with an indicator if necessary.\r\n   */\r\n  private truncateText(text: string, maxLength: number): string {\r\n    return text.length > maxLength\r\n      ? `${text.slice(0, maxLength - 15)}...(más ${text.length - maxLength} caracteres)`\r\n      : text;\r\n  }\r\n\r\n  /**\r\n   * Sets the error state of the embed.\r\n   * Updates the author field and color based on the error state.\r\n   * @param status - `true` for success, `false` for error.\r\n   * @returns The current `ErrorEmbed` instance for chaining.\r\n   */\r\n  public setError(status: boolean) {\r\n    const formattedDate = this.formatDate(new Date());\r\n    this.setAuthor({\r\n      name: this.truncateText(\r\n        status ? `Application Success - ${formattedDate}` : `Application Error - ${formattedDate}`,\r\n        256,\r\n      ),\r\n    });\r\n    this.setColor(status ? 0x00ff00 : 0xff0000);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures the embed with error details.\r\n   * Throws an error if the embed is not in an error state.\r\n   * @param message - The main error message.\r\n   * @param details - Optional additional details about the error.\r\n   * @returns The current `ErrorEmbed` instance for chaining.\r\n   * @throws `ProyectError` if `setError` was called with `false`.\r\n   */\r\n  public setErrorFormat(details?: string) {\r\n    const maxFieldLength = 1024;\r\n    const fields = [\r\n      {\r\n        name: this.truncateText(\"Error\", 256),\r\n        value: codeBlock(\r\n          \"js\",\r\n          this.truncateText(details || \"An error occurred.\", maxFieldLength - 11),\r\n        ),\r\n      },\r\n    ];\r\n\r\n    if (details) {\r\n      fields.push({\r\n        name: this.truncateText(\"Details\", 256),\r\n        value: codeBlock(\"js\", this.truncateText(details, maxFieldLength - 11)),\r\n      });\r\n    } else {\r\n      fields.push({\r\n        name: this.truncateText(\"Details\", 256),\r\n        value: codeBlock(\"js\", \"No details provided.\"),\r\n      });\r\n    }\r\n\r\n    this.addFields(\r\n      fields.map((field) => ({\r\n        name: field.name,\r\n        value: field.value,\r\n        inline: false,\r\n      })),\r\n    );\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * A custom embed class for general success messages in the application.\r\n * Extends the `EmbedBuilder` class from Discord.js.\r\n */\r\nexport class EmbedCorrect extends EmbedBuilder {\r\n  /**\r\n   * Constructs a new `EmbedCorrect` instance.\r\n   * Automatically sets the author, footer, and color for success messages.\r\n   */\r\n  constructor() {\r\n    super();\r\n    const time = (Date.now() - client.readyAt!.getTime()) / 1000 / 1000;\r\n    const responseTime = Math.round(time);\r\n    this.setAuthor({\r\n      name: this.truncateText(config.project.name, 256),\r\n      iconURL: client.user?.avatarURL({ forceStatic: true }) as string,\r\n    });\r\n    this.setFooter({\r\n      text: this.truncateText(\r\n        `Response: ${responseTime}ms | Discord.js: ${discordVersion} | Node.js: ${process.versions.node}`,\r\n        2048,\r\n      ),\r\n    });\r\n    this.setColor(\"Green\");\r\n    this.setTimestamp();\r\n  }\r\n\r\n  /**\r\n   * Truncates a string if it exceeds the specified maximum length.\r\n   * Adds an indicator showing the number of characters truncated.\r\n   * @param text - The text to truncate.\r\n   * @param maxLength - The maximum allowed length for the text.\r\n   * @returns The truncated text with an indicator if necessary.\r\n   */\r\n  private truncateText(text: string, maxLength: number): string {\r\n    return text.length > maxLength\r\n      ? `${text.slice(0, maxLength - 15)}...(más ${text.length - maxLength} caracteres)`\r\n      : text;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debug_id":"25b6407d-71d5-5043-90c4-07b8e899e70a"}