{"version":3,"file":"routes.js","sources":["src/shared/utils/routes.ts"],"sourceRoot":"/","sourcesContent":["import { Router } from \"express\";\r\nimport fs from \"fs/promises\";\r\nimport path from \"path\";\r\n\r\n// High-level debug utility\r\nfunction debug(message: string, ...args: any[]) {\r\n  if (process.env.DEBUG !== \"true\") {\r\n    console.debug(`[DEBUG] ${message}`, ...args);\r\n  }\r\n}\r\n\r\n// Cache for loaded routes\r\nconst routeCache = new Map();\r\n\r\nasync function getSubdirectories(baseDir: string): Promise<string[]> {\r\n  try {\r\n    const entries = await fs.readdir(baseDir, { withFileTypes: true });\r\n    const directories = entries\r\n      .filter((dirent) => dirent.isDirectory())\r\n      .map((dirent) => path.resolve(baseDir, dirent.name));\r\n\r\n    const subdirPromises = directories.map((dir) => getSubdirectories(dir));\r\n    const subdirectories = await Promise.all(subdirPromises);\r\n\r\n    return [...directories, ...subdirectories.flat()];\r\n  } catch (error) {\r\n    console.error(`[ERROR] Directory scan failed: ${error}`);\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction validateRouteHandler(handler: any, file: string): boolean {\r\n  if (typeof handler !== \"function\") {\r\n    console.error(`[ERROR] Invalid route handler in ${file}`);\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nasync function loadRouteModule(modulePath: string, file: string) {\r\n  if (routeCache.has(modulePath)) {\r\n    debug(`Route module cache hit: ${modulePath}`);\r\n    return routeCache.get(modulePath);\r\n  }\r\n\r\n  try {\r\n    const module = await import(modulePath);\r\n    if (module.default && validateRouteHandler(module.default, file)) {\r\n      routeCache.set(modulePath, module);\r\n      debug(`Route module loaded and cached: ${modulePath}`);\r\n      return module;\r\n    }\r\n    throw new Error(`Invalid route module format in ${file}`);\r\n  } catch (error) {\r\n    console.trace(`[TRACE] Failed to load route module: ${modulePath}`);\r\n    throw new Error(`Failed to load route module ${file}: ${error}`);\r\n  }\r\n}\r\n\r\nconst router = Router();\r\nconst routerLoadeds: { file: string; routes: { method: string; path: string }[] }[] = [];\r\n\r\n// Funci√≥n principal de carga de rutas con mejor manejo de performance\r\n(async () => {\r\n  console.time(\"RoutesLoadTime\");\r\n  const metrics = {\r\n    routesLoaded: 0,\r\n    errors: 0,\r\n  };\r\n\r\n  try {\r\n    const routesDirs = await getSubdirectories(\r\n      path.resolve(__dirname, \"../../interfaces/http/routes\"),\r\n    );\r\n\r\n    debug(`Starting Express routes loading (${routesDirs.length} directories)`);\r\n\r\n    const loadPromises = routesDirs.map(async (routesDir) => {\r\n      const files = (await fs.readdir(routesDir)).filter((file) => /\\.routes\\.(ts|js)$/.test(file));\r\n\r\n      return Promise.all(\r\n        files.map(async (file) => {\r\n          const modulePath = path.join(routesDir, file);\r\n\r\n          try {\r\n            const module = await loadRouteModule(modulePath, file);\r\n            await module.default({ app: router });\r\n            metrics.routesLoaded++;\r\n            routerLoadeds.push({ file, routes: [] });\r\n            debug(`Route loaded: ${file}`);\r\n          } catch (error) {\r\n            metrics.errors++;\r\n            console.error(`[ERROR] Route load error: ${error}`, { file, modulePath });\r\n          }\r\n        }),\r\n      );\r\n    });\r\n\r\n    await Promise.all(loadPromises);\r\n  } catch (error) {\r\n    console.error(`[CRITICAL] Error loading routes: ${error}`);\r\n  } finally {\r\n    console.timeEnd(\"RoutesLoadTime\");\r\n    debug(\r\n      [\r\n        `Express Routes Summary:`,\r\n        `  ‚úÖ  Loaded: ${metrics.routesLoaded} routes`,\r\n        `  ‚ùå  Errors: ${metrics.errors}`,\r\n        `  üì¶  Cache size: ${routeCache.size}`,\r\n      ].join(\"\\n\"),\r\n    );\r\n  }\r\n})();\r\n\r\nexport { router };\r\n"],"names":[],"mappings":"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","debug_id":"4a2b60c3-6a94-5495-a853-3fb51c7607e2"}