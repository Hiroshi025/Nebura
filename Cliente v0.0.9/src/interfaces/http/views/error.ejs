<!DOCTYPE html>
<html lang="es" data-bs-theme="dark">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Página de error - Nebura CDN">
  <meta name="author" content="Nebura">
  <title>
    <%- title ? title : 'Nebura - Error' %>
  </title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="shortcut icon" href="/images/logo.png" type="image/x-icon">
  <link rel="stylesheet" href="/css/error.css">
  <style>
    /* Loader animación */
    #loader {
      display: none;
      position: fixed;
      z-index: 9999;
      left: 0;
      top: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(30, 30, 30, 0.7);
      align-items: center;
      justify-content: center;
    }

    #loader .spinner {
      border: 6px solid #eee;
      border-top: 6px solid var(--primary-color);
      border-radius: 50%;
      width: 60px;
      height: 60px;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      100% {
        transform: rotate(360deg);
      }
    }

    /* Mascota SVG anime gótica dark */
    .mascot-svg {
      width: 120px;
      height: 120px;
      margin: 0 auto 1.5rem auto;
      display: block;
      filter: drop-shadow(0 8px 24px #000a);
      transition: transform 0.4s cubic-bezier(.4, 2, .6, 1), filter 0.3s;
      cursor: pointer;
      animation: mascot-bounce 2s infinite;
    }

    .mascot-svg:hover,
    .mascot-svg:focus {
      transform: scale(1.08) rotate(-4deg);
      filter: drop-shadow(0 16px 40px #6a5af9cc) brightness(1.1);
    }

    /* Easter egg */
    #easter-egg {
      display: none;
      color: var(--primary-color);
      margin-top: 1rem;
    }
  </style>
</head>

<body>
  <div id="loader" aria-label="Cargando" role="status">
    <div class="spinner"></div>
  </div>
  <header class="navbar navbar-expand-lg position-relative" role="banner">
    <div class="container">
      <a class="navbar-brand fw-bold" href="#">
        <i class="fas fa-server me-2" style="color: #6a5af9;"></i>Nebura
      </a>
      <!-- Controles de idioma y tema -->
      <div class="top-controls">
        <div class="language-switcher">
          <a href="#" class="lang-link" data-lang="es">ES</a>
          <span>|</span>
          <a href="#" class="lang-link" data-lang="en">EN</a>
        </div>
        <div class="form-check form-switch theme-switcher">
          <input class="form-check-input" type="checkbox" role="switch" id="themeSwitch" title="Cambiar tema">
          <label class="form-check-label" for="themeSwitch"><i class="fas fa-moon"></i></label>
        </div>
      </div>
    </div>
  </header>

  <main class="container py-5 flex-grow-1" role="main">
    <div class="error-container">
      <div class="error-card" tabindex="0" aria-live="polite">
        <!-- Quitar SVG ilustrativo -->
        <div id="error-illustration" aria-hidden="true" style="display:none"></div>
        <span id="mascot-img" tabindex="0" aria-label="Mascota Nebura" style="display:block;">
          <!-- Mascota anime gótica dark SVG -->
          <svg class="mascot-svg" viewBox="0 0 120 120" fill="none" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <radialGradient id="bodyDark" cx="60" cy="70" r="50" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#23213a" />
                <stop offset="100%" stop-color="#111018" />
              </radialGradient>
              <linearGradient id="hairGrad" x1="0" y1="0" x2="120" y2="0" gradientUnits="userSpaceOnUse">
                <stop stop-color="#6a5af9" />
                <stop offset="1" stop-color="#f72585" />
              </linearGradient>
              <radialGradient id="eyeRed" cx="2" cy="2" r="6" gradientUnits="userSpaceOnUse">
                <stop offset="0%" stop-color="#f72585" />
                <stop offset="100%" stop-color="#2a102a" />
              </radialGradient>
            </defs>
            <!-- Cabello largo gótico -->
            <ellipse cx="60" cy="60" rx="44" ry="48" fill="url(#hairGrad)" opacity="0.7" />
            <ellipse cx="60" cy="90" rx="36" ry="18" fill="#18162a" opacity="0.7" />
            <!-- Cuerpo -->
            <ellipse cx="60" cy="70" rx="30" ry="32" fill="url(#bodyDark)" stroke="#6a5af9" stroke-width="2" />
            <!-- Cara pálida -->
            <ellipse cx="60" cy="65" rx="22" ry="20" fill="#f3f3fa" stroke="#23213a" stroke-width="1.5" />
            <!-- Ojos grandes rojos -->
            <ellipse cx="50" cy="70" rx="5" ry="8" fill="url(#eyeRed)" stroke="#23213a" stroke-width="1" />
            <ellipse cx="70" cy="70" rx="5" ry="8" fill="url(#eyeRed)" stroke="#23213a" stroke-width="1" />
            <!-- Pupilas -->
            <ellipse cx="50" cy="72" rx="2" ry="3" fill="#fff" opacity="0.7" />
            <ellipse cx="70" cy="72" rx="2" ry="3" fill="#fff" opacity="0.7" />
            <!-- Sombras bajo ojos -->
            <ellipse cx="50" cy="78" rx="3" ry="1.2" fill="#6a5af9" opacity="0.3" />
            <ellipse cx="70" cy="78" rx="3" ry="1.2" fill="#6a5af9" opacity="0.3" />
            <!-- Boca pequeña triste -->
            <path d="M56 82 Q60 85 64 82" stroke="#f72585" stroke-width="1.5" fill="none" stroke-linecap="round" />
            <!-- Collar choker -->
            <rect x="48" y="84" width="24" height="5" rx="2.5" fill="#23213a" stroke="#f72585" stroke-width="1" />
            <circle cx="60" cy="86.5" r="2" fill="#f72585" stroke="#fff" stroke-width="0.7" />
            <!-- Orejas puntiagudas -->
            <polygon points="38,60 32,40 44,54" fill="#f3f3fa" stroke="#23213a" stroke-width="1" />
            <polygon points="82,54 88,40 82,60" fill="#f3f3fa" stroke="#23213a" stroke-width="1" />
            <!-- Detalle lágrima -->
            <ellipse cx="52" cy="80" rx="1.1" ry="2.2" fill="#f72585" opacity="0.5" />
          </svg>
        </span>
        <h1 class="error-title" id="error-title" tabindex="0">Error 404</h1>
        <div class="error-code" id="error-code" tabindex="0">ERR_FILE_NOT_FOUND</div>
        <p class="error-description" id="error-description" tabindex="0">
          El archivo que estás buscando no existe o ha sido eliminado.
        </p>
        <a href="/dashboard" class="btn-home" id="btn-home" tabindex="0" aria-label="Volver al inicio">
          <i class="fas fa-home me-2"></i> <span data-key="homeBtn">Volver al inicio</span>
        </a>
        <div class="error-details" id="error-details" style="display: none;">
          <h3 class="error-details-title" data-key="techDetailsTitle">Detalles técnicos</h3>
          <div class="error-details-content" id="error-details-content"></div>
        </div>
        <!-- Easter egg -->
        <div id="easter-egg">🐰 ¡Encontraste el huevo de pascua! <span style="font-size:1.2em;">🎉</span></div>
      </div>
    </div>
  </main>

  <footer class="text-center py-4 text-muted" role="contentinfo">
    <small>© 2025 Nebura. Todos los derechos reservados.</small>
  </footer>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    // --- SISTEMA DE IDIOMAS Y TEMA ---
    const translations = {
      es: {
        error404: "Error 404 - No encontrado",
        error404Desc: "El recurso solicitado no existe o ha sido eliminado.",
        error403: "Error 403 - Acceso denegado",
        error403Desc: "No tienes permiso para acceder a este recurso.",
        error500: "Error 500 - Error del servidor",
        error500Desc: "Ocurrió un error inesperado en el servidor.",
        error400: "Error 400 - Solicitud incorrecta",
        error400Desc: "La solicitud enviada al servidor no es válida.",
        timeout: "Error - Tiempo de espera agotado",
        timeoutDesc: "La operación tardó demasiado tiempo en completarse.",
        homeBtn: "Volver al inicio",
        techDetailsTitle: "Detalles técnicos"
      },
      en: {
        error404: "Error 404 - Not found",
        error404Desc: "The requested resource does not exist or has been removed.",
        error403: "Error 403 - Access denied",
        error403Desc: "You do not have permission to access this resource.",
        error500: "Error 500 - Server error",
        error500Desc: "An unexpected error occurred on the server.",
        error400: "Error 400 - Bad request",
        error400Desc: "The request sent to the server is invalid.",
        timeout: "Error - Timeout",
        timeoutDesc: "The operation took too long to complete.",
        homeBtn: "Back to home",
        techDetailsTitle: "Technical details"
      }
    };

    const themeSwitch = document.getElementById('themeSwitch');
    const themeIcon = document.querySelector('label[for="themeSwitch"] i');
    const htmlElement = document.documentElement;
    const langLinks = document.querySelectorAll('.lang-link');

    // Loader helpers (¡esto soluciona el error!)
    function showLoader() {
      document.getElementById('loader').style.display = 'flex';
    }

    function hideLoader() {
      document.getElementById('loader').style.display = 'none';
    }

    // SVGs ilustrativos por tipo de error
    // Elimina la inserción del SVG en error-illustration
    const illustrations = {}; // vacío

    function setLanguage(lang) {
      showLoader();
      setTimeout(() => {
        const t = translations[lang];
        // Detectar tipo de error
        const params = new URLSearchParams(window.location.search);
        const type = params.get('type') || '404';
        const message = params.get('message');
        const code = params.get('code') || `ERR_${type.toUpperCase()}`;

        // Elementos
        const errorTitle = document.getElementById('error-title');
        const errorCode = document.getElementById('error-code');
        const errorDescription = document.getElementById('error-description');
        const btnHome = document.getElementById('btn-home');
        const techDetailsTitle = document.querySelector('.error-details-title');

        // Traducción de título y descripción
        switch (type) {
          case '404':
            errorTitle.textContent = t.error404;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.error404Desc;
            break;
          case '403':
            errorTitle.textContent = t.error403;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.error403Desc;
            break;
          case '500':
            errorTitle.textContent = t.error500;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.error500Desc;
            break;
          case '400':
            errorTitle.textContent = t.error400;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.error400Desc;
            break;
          case 'timeout':
            errorTitle.textContent = t.timeout;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.timeoutDesc;
            break;
          default:
            errorTitle.textContent = t.error404;
            errorDescription.textContent = message ? decodeURIComponent(message) : t.error404Desc;
        }
        errorCode.textContent = code;
        btnHome.querySelector('span[data-key="homeBtn"]').textContent = t.homeBtn;
        if (techDetailsTitle) techDetailsTitle.textContent = t.techDetailsTitle;

        // Ilustración y mascota
        const illu = illustrations[type] || illustrations['404'];
        // document.getElementById('error-illustration').innerHTML = illu;
        // Mascota SVG ya está embebida, pero podrías cambiar colores aquí si lo deseas
        // ...existing code...
        hideLoader();
      }, 400); // Simula carga
    }

    function updateThemeIcon(theme) {
      themeIcon.classList.toggle('fa-moon', theme === 'light');
      themeIcon.classList.toggle('fa-sun', theme === 'dark');
    }

    function applyTheme(theme) {
      htmlElement.setAttribute('data-bs-theme', theme);
      themeSwitch.checked = theme === 'dark';
      updateThemeIcon(theme);
      localStorage.setItem('theme', theme);
    }

    langLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        setLanguage(link.getAttribute('data-lang'));
      });
    });

    themeSwitch.addEventListener('change', () => {
      showLoader();
      setTimeout(() => {
        const newTheme = themeSwitch.checked ? 'dark' : 'light';
        applyTheme(newTheme);
        hideLoader();
      }, 400);
    });

    // --- Lógica de error (adaptada para idioma) ---
    document.addEventListener('DOMContentLoaded', function () {
      // Inicializar tema e idioma
      const savedTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
      applyTheme(savedTheme);
      const savedLang = localStorage.getItem('language') || (navigator.language.startsWith('en') ? 'en' : 'es');
      setLanguage(savedLang);

      // Mostrar detalles técnicos en entorno de desarrollo
      const params = new URLSearchParams(window.location.search);
      const errorDetails = document.getElementById('error-details');
      const errorDetailsContent = document.getElementById('error-details-content');
      function showTechnicalDetails() {
        const paramsObj = Object.fromEntries(params.entries());
        const details = {
          'URL': window.location.href,
          'User Agent': navigator.userAgent,
          'Plataforma': navigator.platform,
          'Fecha': new Date().toISOString(),
          'Parámetros': Object.keys(paramsObj).length > 0
            ? `<pre>${JSON.stringify(paramsObj, null, 2)}</pre>`
            : 'Ninguno'
        };
        let detailsText = '';
        for (const [key, value] of Object.entries(details)) {
          detailsText += `<strong>${key}:</strong> ${value}<br>`;
        }
        errorDetailsContent.innerHTML = detailsText;
        errorDetails.style.display = 'block';
      }
      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        showTechnicalDetails();
      }
    });

    // Easter egg: presiona secuencia "N-E-B-U-R-A"
    let eggSeq = [],
      eggCode = [78, 69, 66, 85, 82, 65];
    document.addEventListener('keydown', e => {
      eggSeq.push(e.keyCode);
      if (eggSeq.slice(-6).toString() === eggCode.toString()) {
        document.getElementById('easter-egg').style.display = 'block';
      }
    });

    // Accesibilidad: enfocar elementos clave con Tab
    // ...existing code...
  </script>
</body>

</html>